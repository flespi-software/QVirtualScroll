{"version":3,"file":"devicesMessages.js","sources":["../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../node_modules/@babel/runtime-corejs2/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/ls.js","../src/store/modules/devicesMessages/actions.js","../src/store/modules/devicesMessages/mutations.js","../src/store/modules/devicesMessages/index.js"],"sourcesContent":["var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Array$isArray = require(\"@babel/runtime-corejs2/core-js/array/is-array\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nvar _isIterable = require(\"@babel/runtime-corejs2/core-js/is-iterable\");\n\nvar _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nfunction _iterableToArray(iter) {\n  if (typeof _Symbol !== \"undefined\" && _isIterable(Object(iter))) return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport { getColsLS, setColsLS } from '../ls'\n\nconst defaultCols = ['timestamp', 'server.timestamp', 'ident', 'position.latitude', 'position.longitude', 'position.altitude', 'position.speed']\n\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.from) {\n      params.from = Math.floor(state.from / 1000)\n    }\n    if (state.to) {\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  async function migrateCols (type, cols) {\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.reduce((res, col) => {\n            if ((defaultCols.includes(col.name) || (!!col.__dest && col.display))) {\n              res.push({ name: col.name, width: col.width })\n            }\n            return res\n          }, [])\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: cols.reduce((res, col) => {\n            if (!col.custom) {\n              res.push({ name: col.name, width: 150 })\n            }\n            return res\n          }, [])\n        }\n      },\n      enum: {}\n    }\n    if (cols.length) {\n      const processedSchemaByCols = cols.reduce((res, col) => {\n        const isColDefault = defaultCols.includes(col.name)\n        res.isDefault = res.isDefault && ((!col.display && !isColDefault) || (col.display && (isColDefault || !!col.__dest)))\n        res.isProtocol = res.isProtocol && !col.custom\n        if (col.display) {\n          res.schema.push({ name: col.name, width: col.width })\n        }\n        res.enum[col.name] = { ...col }\n        delete res.enum[col.name].display\n        delete res.enum[col.name].width\n        return res\n      }, {\n        schema: [],\n        enum: {},\n        isDefault: true,\n        isProtocol: true\n      })\n      if (!processedSchemaByCols.isDefault || !processedSchemaByCols.isProtocol) {\n        const protocolResp = await Vue.connector.gw.getChannelProtocolsDeviceTypes('all', type, { fields: 'title' })\n        const protocolData = protocolResp.data\n        errorsCheck(protocolData)\n        const name = _get(protocolData, 'result[0].title', `Custom-${type}`)\n        schema.activeSchema = name\n        schema.schemas[name] = {\n          name,\n          cols: processedSchemaByCols.schema\n        }\n      }\n      schema.enum = processedSchemaByCols.enum\n    }\n    return schema\n  }\n\n  function getDefaultColsSchema () {\n    const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: defaultCols.reduce((res, name) => {\n        res[name] = { name }\n        if (name.match(/timestamp$/)) {\n          res[name].addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n          res[name].type = ''\n          res[name].unit = ''\n        }\n        return res\n      }, {})\n    }\n  }\n\n  async function migrateAll (state, data) {\n    for (const name in data) {\n      let colsSchema = data[name]\n      if (Array.isArray(colsSchema)) {\n        colsSchema = await migrateCols(state.active, colsSchema)\n        setColsLS(LocalStorage, state.lsNamespace, state.name, name, colsSchema)\n        data[name] = colsSchema\n      } else if (colsSchema.enum) {\n        delete colsSchema.enum\n        setColsLS(LocalStorage, state.lsNamespace, state.name, name, colsSchema)\n        data[name] = colsSchema\n      }\n    }\n    return data\n  }\n\n  async function getCols ({ state, commit, rootState }, sysColsNeedInitFlags) {\n    const needEtc = sysColsNeedInitFlags.etc\n    commit('reqStart')\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        /* getting device info */\n        const deviceResp = await Vue.connector.gw.getDevices(state.active)\n        const deviceData = deviceResp.data\n        errorsCheck(deviceData)\n        const device = deviceData.result && deviceData.result[0]\n        commit('setSettings', device)\n        let colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n        migrateAll(state, colsFromStorage)\n        colsFromStorage = (colsFromStorage && colsFromStorage[device.device_type_id])\n        const colsSchema = colsFromStorage || getDefaultColsSchema()\n        const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n          ? colsFromStorage['custom-cols-schemas'] : {}\n        colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n        colsSchema.enum = {}\n        if (device.device_type_id) {\n          /* getting protocol id */\n          const protocolResp = await Vue.connector.gw.getChannelProtocolsDeviceTypes('all', device.device_type_id, { fields: 'protocol_id' })\n          const protocolData = protocolResp.data\n          errorsCheck(protocolData)\n          const protocolId = protocolData.result && protocolData.result[0] && protocolData.result[0].protocol_id\n          /* gettings messages parameters */\n          const messageParamsResp = await Vue.connector.gw.getChannelProtocols(protocolId, { fields: 'message_parameters' })\n          const messageParamsData = messageParamsResp.data\n          errorsCheck(messageParamsData)\n          const messageParams = messageParamsData.result && messageParamsData.result[0] && messageParamsData.result[0].message_parameters\n          /* initing columns by message parameters */\n          colsSchema.schemas._protocol = {\n            name: '_protocol',\n            cols: []\n          }\n          const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n          messageParams.forEach((param) => {\n            const name = param.name\n            const enumCol = {\n              name,\n              type: param.type || '',\n              unit: param.unit || '',\n              description: param.info || ''\n            }\n            const schemaCol = {\n              name,\n              width: 150\n            }\n            if (name.match(/timestamp$/)) {\n              enumCol.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n              enumCol.type = ''\n              enumCol.unit = ''\n              schemaCol.width = 190\n              if (name === 'timestamp') {\n                colsSchema.schemas._protocol.cols.unshift(schemaCol)\n                colsSchema.enum.timestamp = enumCol\n                return\n              }\n            }\n            colsSchema.schemas._protocol.cols.push(schemaCol)\n            colsSchema.enum[name] = enumCol\n          })\n        }\n        if (needEtc) {\n          device.device_type_id && colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n          !colsFromStorage && colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n        }\n        colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n        commit('setCols', colsSchema)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1,\n          fields: 'timestamp'\n        }\n        const resp = await Vue.connector.gw.getDevicesMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    let result = []\n    if (rootState.token && state.active) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getDevicesMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Math.floor(Date.now() / 1000)\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Math.floor(Date.now() / 1000)\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Math.floor(Date.now() / 1000)\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = Math.floor(_get(state, 'messages[0].timestamp', state.to) - 1)\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getMessages({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = Math.floor(_get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 1)\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = Math.floor(start / 1000)\n        params.to = Math.floor(stop / 1000)\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}` : undefined\n    await Vue.connector.subscribeMessagesDevices(state.active, (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, prefix: filter })\n    state.realtimeEnabled = true\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}` : undefined\n    await Vue.connector.unsubscribeMessagesDevices(state.active, undefined, { prefix: filter })\n    state.realtimeEnabled = false\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          from: start,\n          to: end\n        }\n        const resp = await Vue.connector.gw.getDevicesMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function newMessagesCheck ({ state }) {\n    state.hasNewMessages = false\n    await Vue.connector.subscribeMessagesDevices(state.active, () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2 })\n  }\n\n  return {\n    getMessages,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getCols,\n    getHistory,\n    initTime,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      messages[index]['x-flespi-message-key'] = messagesKeyPointer++\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      messagesIndexing(data)\n      const messages = state.messages\n      if (state.sortBy) {\n        /* write by sorted field */\n        const message = data[0],\n          fieldName = state.sortBy,\n          length = state.messages.length - 1\n        let index = null,\n          escapeFlag = true\n        if (length > 0) {\n          for (let i = length; i !== 0 || escapeFlag; i--) {\n            if (messages[i][fieldName] > message[fieldName]) {\n              index = i\n              if (i === 0) {\n                escapeFlag = false\n              }\n            } else {\n              escapeFlag = false\n            }\n          }\n        }\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        if (index) {\n          messages.splice(index, 0, ...data)\n        } else {\n          messages.splice(messages.length, 0, ...data)\n        }\n      } else {\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        messages.splice(messages.length, 0, ...data)\n      }\n      limiting(state, { type: 'rt', count: data.length })\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Devices messages')\n    }\n  }\n\n  function setActive (state, id) {\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeMessagesDevices(state.active)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.settings.device_type_id, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setSettings (state, device) {\n    Vue.set(state, 'settings', device)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Math.floor(Date.now() / 1000),\n      lastMessageIndex: state.messages.length - 1\n    }\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Math.floor(Date.now() / 1000)\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setMissingMessages,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    limiting,\n    setFilter,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setSettings\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    pages: [],\n    filter: '',\n    settings: {},\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    sortBy: null,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["module","obj","key","value","_Object$defineProperty","enumerable","configurable","writable","exports","arr","len","length","i","arr2","Array","_Array$isArray","arrayLikeToArray","iter","_Symbol","_isIterable","Object","_Array$from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","getColsLS","LocalStorage","lsNamespace","lsRouteToItem","colsFromStorage","lsItemName","lsPath","split","shift","join","appStorage","getItem","get","setColsLS","active","cols","customColsSchema","schemas","_default","_protocol","_unsaved","defaultColsSchema","activeSchema","set","defaultCols","Vue","errorHandler","getParams","state","params","limit","count","filter","from","Math","floor","to","reverse","errorsCheck","data","errors","forEach","errObject","Error","reason","type","schema","reduce","res","col","includes","__dest","display","push","width","custom","enum","processedSchemaByCols","isColDefault","isDefault","isProtocol","connector","gw","getChannelProtocolsDeviceTypes","fields","protocolResp","protocolData","_get","colsSchema","isArray","migrateCols","sysColsNeedInitFlags","commit","rootState","needEtc","etc","token","getDevices","deviceResp","deviceData","device","result","migrateAll","device_type_id","locale","Date","match","map","addition","unit","getDefaultColsSchema","customColsSchemas","protocolId","protocol_id","getChannelProtocols","messageParamsResp","messageParamsData","messageParams","message_parameters","param","enumCol","description","schemaCol","unshift","timestamp","DEV","console","log","getDevicesMessages","JSON","stringify","resp","date","now","round","val","day","setHours","newMessagesCheck","getMessages","isLoadingActive","isLoading","start","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","realtimeEnabled","messagesBuffer","encodeURIComponent","subscribeMessagesDevices","message","parse","rh","prefix","setInterval","clearInterval","unsubscribeMessagesDevices","offline","end","lastMessageIndex","index","hasNewMessages","getPrevPage","getNextPage","getCols","getHistory","initTime","getMissedMessages","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","removeMessagesCount","pages","pagesCount","pop","rtCount","setCols","settings","setOffline","setReconnected","clearOfflineState","setMissingMessages","setHistoryMessages","setRTMessages","sortBy","fieldName","escapeFlag","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","setReverse","clear","setActive","id","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setSettings","namespaced","selected","actions","getActions","mutations","getMutations"],"mappings":"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"}