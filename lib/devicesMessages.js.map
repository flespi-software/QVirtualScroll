{"version":3,"file":"devicesMessages.js","sources":["../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../src/store/modules/ls.js","../src/store/modules/devicesMessages/actions.js","../src/store/modules/devicesMessages/index.js","../src/store/modules/devicesMessages/mutations.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport { getColsLS, setColsLS } from '../ls'\n\nconst defaultCols = ['timestamp', 'server.timestamp', 'ident', 'position.latitude', 'position.longitude', 'position.altitude', 'position.speed']\n\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.from) {\n      params.from = Math.floor(state.from / 1000)\n    }\n    if (state.to) {\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  async function migrateCols (type, cols) {\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.reduce((res, col) => {\n            if ((defaultCols.includes(col.name) || (!!col.__dest && col.display))) {\n              res.push({ name: col.name, width: col.width })\n            }\n            return res\n          }, [])\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: cols.reduce((res, col) => {\n            if (!col.custom) {\n              res.push({ name: col.name, width: 150 })\n            }\n            return res\n          }, [])\n        }\n      },\n      enum: {}\n    }\n    if (cols.length) {\n      const processedSchemaByCols = cols.reduce((res, col) => {\n        const isColDefault = defaultCols.includes(col.name)\n        res.isDefault = res.isDefault && ((!col.display && !isColDefault) || (col.display && (isColDefault || !!col.__dest)))\n        res.isProtocol = res.isProtocol && !col.custom\n        if (col.display) {\n          res.schema.push({ name: col.name, width: col.width })\n        }\n        res.enum[col.name] = { ...col }\n        delete res.enum[col.name].display\n        delete res.enum[col.name].width\n        return res\n      }, {\n        schema: [],\n        enum: {},\n        isDefault: true,\n        isProtocol: true\n      })\n      if (!processedSchemaByCols.isDefault || !processedSchemaByCols.isProtocol) {\n        const protocolResp = await Vue.connector.gw.getChannelProtocolsDeviceTypes('all', type, { fields: 'title' })\n        const protocolData = protocolResp.data\n        errorsCheck(protocolData)\n        const name = _get(protocolData, 'result[0].title', `Custom-${type}`)\n        schema.activeSchema = name\n        schema.schemas[name] = {\n          name,\n          cols: processedSchemaByCols.schema\n        }\n      }\n      schema.enum = processedSchemaByCols.enum\n    }\n    return schema\n  }\n\n  function getDefaultEnum () {\n    const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n    return defaultCols.reduce((res, name) => {\n      res[name] = { name }\n      if (name.match(/timestamp$/)) {\n        res[name].addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n        res[name].type = ''\n        res[name].unit = ''\n      }\n      return res\n    }, {})\n  }\n\n  function getDefaultColsSchema () {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: getDefaultEnum()\n    }\n  }\n\n  async function migrateAll (state, data) {\n    for (const name in data) {\n      let colsSchema = data[name]\n      if (Array.isArray(colsSchema)) {\n        colsSchema = await migrateCols(state.active, colsSchema)\n        setColsLS(LocalStorage, state.lsNamespace, state.name, name, colsSchema)\n        data[name] = colsSchema\n      } else if (colsSchema.enum) {\n        delete colsSchema.enum\n        setColsLS(LocalStorage, state.lsNamespace, state.name, name, colsSchema)\n        data[name] = colsSchema\n      }\n    }\n    return data\n  }\n\n  async function getCols ({ state, commit, rootState }, sysColsNeedInitFlags) {\n    const needEtc = sysColsNeedInitFlags.etc\n    commit('reqStart')\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        /* getting device info */\n        const deviceResp = await Vue.connector.gw.getDevices(state.active)\n        const deviceData = deviceResp.data\n        errorsCheck(deviceData)\n        const device = deviceData.result && deviceData.result[0]\n        commit('setSettings', device)\n        let colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n        migrateAll(state, colsFromStorage)\n        colsFromStorage = (colsFromStorage && colsFromStorage[device.device_type_id])\n        const colsSchema = colsFromStorage || getDefaultColsSchema()\n        const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n          ? colsFromStorage['custom-cols-schemas'] : {}\n        colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n        if (!colsSchema.enum) {\n          colsSchema.enum = getDefaultEnum()\n        }\n        if (device.device_type_id) {\n          /* getting protocol id */\n          const protocolResp = await Vue.connector.gw.getChannelProtocolsDeviceTypes('all', device.device_type_id, { fields: 'protocol_id' })\n          const protocolData = protocolResp.data\n          errorsCheck(protocolData)\n          const protocolId = protocolData.result && protocolData.result[0] && protocolData.result[0].protocol_id\n          /* gettings messages parameters */\n          const messageParamsResp = await Vue.connector.gw.getChannelProtocols(protocolId, { fields: 'message_parameters' })\n          const messageParamsData = messageParamsResp.data\n          errorsCheck(messageParamsData)\n          const messageParams = messageParamsData.result && messageParamsData.result[0] && messageParamsData.result[0].message_parameters\n          /* initing columns by message parameters */\n          colsSchema.schemas._protocol = {\n            name: '_protocol',\n            cols: []\n          }\n          const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n          messageParams.forEach((param) => {\n            const name = param.name\n            const enumCol = {\n              name,\n              type: param.type || '',\n              unit: param.unit || '',\n              description: param.info || ''\n            }\n            const schemaCol = {\n              name,\n              width: 150\n            }\n            if (name.match(/timestamp$/)) {\n              enumCol.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n              enumCol.type = ''\n              enumCol.unit = ''\n              schemaCol.width = 190\n              if (name === 'timestamp') {\n                colsSchema.schemas._protocol.cols.unshift(schemaCol)\n                colsSchema.enum.timestamp = enumCol\n                return\n              }\n            }\n            colsSchema.schemas._protocol.cols.push(schemaCol)\n            colsSchema.enum[name] = enumCol\n          })\n        }\n        if (needEtc) {\n          device.device_type_id && colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n          !colsFromStorage && colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n        }\n        colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n        commit('setCols', colsSchema)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1,\n          fields: 'timestamp'\n        }\n        const resp = await Vue.connector.gw.getDevicesMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    let result = []\n    if (rootState.token && state.active) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getDevicesMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Math.floor(Date.now() / 1000)\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Math.floor(Date.now() / 1000)\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Math.floor(Date.now() / 1000)\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = Math.floor(_get(state, 'messages[0].timestamp', state.to) - 1)\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getMessages({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = Math.floor(_get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 1)\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = Math.floor(start / 1000)\n        params.to = Math.floor(stop / 1000)\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}` : undefined\n    await Vue.connector.subscribeMessagesDevices(state.active, (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, prefix: filter })\n    state.realtimeEnabled = true\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}` : undefined\n    await Vue.connector.unsubscribeMessagesDevices(state.active, undefined, { prefix: filter })\n    state.realtimeEnabled = false\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          from: start,\n          to: end\n        }\n        if (state.filter) { params.data.filter = state.filter }\n        const resp = await Vue.connector.gw.getDevicesMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function newMessagesCheck ({ state }) {\n    state.hasNewMessages = false\n    await Vue.connector.subscribeMessagesDevices(state.active, () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2 })\n  }\n\n  return {\n    getMessages,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getCols,\n    getHistory,\n    initTime,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    pages: [],\n    filter: '',\n    settings: {},\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    sortBy: null,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      messages[index]['x-flespi-message-key'] = messagesKeyPointer++\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      messagesIndexing(data)\n      const messages = state.messages\n      if (state.sortBy) {\n        /* write by sorted field */\n        const message = data[0],\n          fieldName = state.sortBy,\n          length = state.messages.length - 1\n        let index = null,\n          escapeFlag = true\n        if (length > 0) {\n          for (let i = length; i !== 0 || escapeFlag; i--) {\n            if (messages[i][fieldName] > message[fieldName]) {\n              index = i\n              if (i === 0) {\n                escapeFlag = false\n              }\n            } else {\n              escapeFlag = false\n            }\n          }\n        }\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        if (index) {\n          messages.splice(index, 0, ...data)\n        } else {\n          messages.splice(messages.length, 0, ...data)\n        }\n      } else {\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        messages.splice(messages.length, 0, ...data)\n      }\n      limiting(state, { type: 'rt', count: data.length })\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Devices messages')\n    }\n  }\n\n  function setActive (state, id) {\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeMessagesDevices(state.active)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.settings.device_type_id, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setSettings (state, device) {\n    Vue.set(state, 'settings', device)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Math.floor(Date.now() / 1000),\n      lastMessageIndex: state.messages.length - 1\n    }\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Math.floor(Date.now() / 1000)\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setMissingMessages,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    limiting,\n    setFilter,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setSettings\n  }\n}\n"],"names":["module","obj","key","value","Object","defineProperty","enumerable","configurable","writable","exports","require$$0","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","getColsLS","LocalStorage","lsNamespace","name","colsFromStorage","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","getItem","get","setColsLS","active","cols","customColsSchema","defaultColsSchema","schemas","_default","undefined","_protocol","_unsaved","activeSchema","splitSchemas","set","defaultCols","Vue","errorHandler","getParams","state","params","limit","count","from","Math","floor","to","reverse","errorsCheck","data","errors","error","errObject","Error","reason","migrateCols","type","schema","reduce","res","col","includes","__dest","display","width","custom","enum","processedSchemaByCols","isColDefault","isDefault","isProtocol","protocolData","connector","gw","getChannelProtocolsDeviceTypes","fields","_get","getDefaultEnum","locale","Date","toString","match","addition","slice","unit","getMessages","commit","rootState","result","token","isLoadingActive","isLoading","getDevicesMessages","JSON","stringify","e","DEV","console","log","start","now","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","realtimeEnabled","messagesBuffer","encodeURIComponent","subscribeMessagesDevices","message","parse","rh","prefix","setInterval","initRenderLoop","clearInterval","unsubscribeMessagesDevices","getPrevPage","getNextPage","getCols","sysColsNeedInitFlags","needEtc","etc","deviceData","getDevices","device","colsSchema","Array","isArray","migrateAll","device_type_id","map","customColsSchemas","protocolId","protocol_id","messageParamsData","getChannelProtocols","messageParams","message_parameters","param","enumCol","description","info","schemaCol","unshift","timestamp","getHistory","initTime","date","round","day","val","setHours","getFromTo","hasNewMessages","newMessagesCheck","getMissedMessages","end","lastMessageIndex","offline","index","newMessagesInterseptor","actions","getActions","mutations","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","pop","rtCount","setCols","settings","setOffline","setReconnected","clearOfflineState","setMissingMessages","setHistoryMessages","setRTMessages","sortBy","fieldName","escapeFlag","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","setReverse","clear","setActive","id","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setSettings","getMutations","namespaced","selected"],"mappings":"q2BAeAA,UAfA,SAAyBC,EAAKC,EAAKC,GAYjC,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,GAITD,EAAOS,QAAiB,QAAIT,EAAOS,QAAST,sBAA4B,kBChBxE,IAAIK,EAAiBK,UAErB,SAASC,EAAQC,EAAQC,GACvB,IAAIC,EAAOV,OAAOU,KAAKF,GAEvB,GAAIR,OAAOW,sBAAuB,CAChC,IAAIC,EAAUZ,OAAOW,sBAAsBH,GAEvCC,IACFG,EAAUA,EAAQC,QAAO,SAAUC,GACjC,OAAOd,OAAOe,yBAAyBP,EAAQM,GAAKZ,eAIxDQ,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAuBTd,UApBA,SAAwBsB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNZ,EAAQP,OAAOsB,IAAS,GAAMC,SAAQ,SAAUzB,GAC9CG,EAAeiB,EAAQpB,EAAKwB,EAAOxB,OAE5BE,OAAOwB,0BAChBxB,OAAOyB,iBAAiBP,EAAQlB,OAAOwB,0BAA0BF,IAEjEf,EAAQP,OAAOsB,IAASC,SAAQ,SAAUzB,GACxCE,OAAOC,eAAeiB,EAAQpB,EAAKE,OAAOe,yBAAyBO,EAAQxB,OAKjF,OAAOoB,GAITtB,EAAOS,QAAiB,QAAIT,EAAOS,QAAST,sBAA4B,yBCrBxE,SAAS8B,EAAWC,EAAcC,EAAaC,OACzCC,EAAkB,MAClBF,EAAa,OACTG,EAASH,EAAYI,MAAM,KAC/BC,EAAaF,EAAOG,QACpBC,EAAiB,GAAEJ,EAAOK,KAAK,QAAQP,IACvCQ,EAAaV,EAAaW,QAAQL,GACpCH,EAAkBS,UAAIF,EAAYF,EAAeL,QAEjDA,EAAkBH,EAAaW,QAAQT,IAASC,SAE3CA,EAGT,SAASU,EAAWb,EAAcC,EAAaC,EAAMY,EAAQC,SACrDZ,EAAkBJ,EAAUC,EAAcC,EAAaC,IAAS,IAChEc,iBAAEA,EAAFC,kBAAoBA,GAjC5B,SAAuBF,SAed,CAAEC,wBAbJD,EAAKG,aACRC,cAAUC,EACVC,eAAWD,EACXE,cAAUF,IAUeH,kBARD,CACxBM,aAAcR,EAAKQ,aACnBL,QAAS,CACPC,SAAUJ,EAAKG,QAAQC,SACvBE,UAAWN,EAAKG,QAAQG,UACxBC,SAAUP,EAAKG,QAAQI,YAqBqBE,CAAaT,MAC7DZ,EAAgBW,GAAUG,EAC1Bd,EAAgB,4BAA8Ba,GAC1Cf,EAAa,OACTG,EAASH,EAAYI,MAAM,KAC/BC,EAAaF,EAAOG,QACpBC,EAAiB,GAAEJ,EAAOK,KAAK,QAAQP,IACvCQ,EAAaV,EAAaW,QAAQL,IAAe,GACnDmB,UAAIf,EAAYF,EAAeL,GAC/BH,EAAayB,IAAInB,EAAYI,QAE7BV,EAAayB,IAAIvB,EAAMC,GC5C3B,MAAMuB,EAAc,CAAC,YAAa,mBAAoB,QAAS,oBAAqB,qBAAsB,oBAAqB,kBAEhH,YAAUC,IAAEA,EAAF3B,aAAOA,EAAP4B,aAAqBA,aACnCC,EAAWC,SACZC,EAAS,UACXD,EAAME,QACRD,EAAOE,MAAQH,EAAME,OAEnBF,EAAM5C,SACR6C,EAAO7C,OAAU,GAAE4C,EAAM5C,UAEvB4C,EAAMI,OACRH,EAAOG,KAAOC,KAAKC,MAAMN,EAAMI,KAAO,MAEpCJ,EAAMO,KACRN,EAAOM,GAAKF,KAAKC,MAAMN,EAAMO,GAAK,MAEhCP,EAAMQ,UACRP,EAAOO,QAAUR,EAAMQ,SAElBP,WAGAQ,EAAaC,GAChBA,EAAKC,QACPD,EAAKC,OAAO7C,SAAS8C,UACbC,EAAY,IAAIC,MAAMF,EAAMG,QAClCjB,GAAgBA,EAAae,qBAMpBG,EAAaC,EAAMhC,SAC1BiC,EAAS,CACbzB,aAAc,WACdL,QAAS,CACPC,SAAU,CACRjB,KAAM,WACNa,KAAMA,EAAKkC,QAAO,CAACC,EAAKC,MACjBzB,EAAY0B,SAASD,EAAIjD,OAAYiD,EAAIE,QAAUF,EAAIG,UAC1DJ,EAAI7D,KAAK,CAAEa,KAAMiD,EAAIjD,KAAMqD,MAAOJ,EAAII,QAEjCL,IACN,KAEL7B,UAAW,CACTnB,KAAM,YACNa,KAAMA,EAAKkC,QAAO,CAACC,EAAKC,KACjBA,EAAIK,QACPN,EAAI7D,KAAK,CAAEa,KAAMiD,EAAIjD,KAAMqD,MAAO,MAE7BL,IACN,MAGPO,KAAM,OAEJ1C,EAAKrB,OAAQ,OACTgE,EAAwB3C,EAAKkC,QAAO,CAACC,EAAKC,WACxCQ,EAAejC,EAAY0B,SAASD,EAAIjD,aAC9CgD,EAAIU,UAAYV,EAAIU,aAAgBT,EAAIG,UAAYK,GAAkBR,EAAIG,UAAYK,KAAkBR,EAAIE,SAC5GH,EAAIW,WAAaX,EAAIW,aAAeV,EAAIK,OACpCL,EAAIG,SACNJ,EAAIF,OAAO3D,KAAK,CAAEa,KAAMiD,EAAIjD,KAAMqD,MAAOJ,EAAII,QAE/CL,EAAIO,KAAKN,EAAIjD,WAAaiD,UACnBD,EAAIO,KAAKN,EAAIjD,MAAMoD,eACnBJ,EAAIO,KAAKN,EAAIjD,MAAMqD,MACnBL,IACN,CACDF,OAAQ,GACRS,KAAM,GACNG,WAAW,EACXC,YAAY,QAETH,EAAsBE,YAAcF,EAAsBG,WAAY,OAEnEC,SADqBnC,EAAIoC,UAAUC,GAAGC,+BAA+B,MAAOlB,EAAM,CAAEmB,OAAQ,WAChE1B,KAClCD,EAAYuB,SACN5D,EAAOiE,UAAKL,EAAc,kBAAoB,UAASf,KAC7DC,EAAOzB,aAAerB,EACtB8C,EAAO9B,QAAQhB,GAAQ,CACrBA,KAAAA,EACAa,KAAM2C,EAAsBV,QAGhCA,EAAOS,KAAOC,EAAsBD,YAE/BT,WAGAoB,UACDC,GAAS,IAAIC,MAAOC,WAAWC,MAAM,kBAAkB,UACtD9C,EAAYuB,QAAO,CAACC,EAAKhD,KAC9BgD,EAAIhD,GAAQ,CAAEA,KAAAA,GACVA,EAAKsE,MAAM,gBACbtB,EAAIhD,GAAMuE,SAAY,GAAEJ,EAAOK,MAAM,EAAG,MAAML,EAAOK,MAAM,KAC3DxB,EAAIhD,GAAM6C,KAAO,GACjBG,EAAIhD,GAAMyE,KAAO,IAEZzB,IACN,mBAuJU0B,GAAa9C,MAAEA,EAAF+C,OAASA,EAATC,UAAiBA,GAAa/C,GACxD8C,EAAO,gBACHE,EAAS,MACTD,EAAUE,OAASlD,EAAMhB,OAAQ,OAC7BmE,EAAkBnD,EAAMoD,eAE3BD,GAAmBtD,EAAIF,IAAIK,EAAO,aAAa,SAE1CU,SADab,EAAIoC,UAAUC,GAAGmB,mBAAmBrD,EAAMhB,OAAQ,CAAE0B,KAAM4C,KAAKC,UAAUtD,MAC1ES,KAClBD,EAAYC,IACXyC,GAAmBtD,EAAIF,IAAIK,EAAO,aAAa,GAChDiD,EAASvC,EAAKuC,QAAU,GACxB,MAAOO,GACP1D,GAAgBA,EAAa0D,GACzBC,KAAOC,QAAQC,IAAIH,IACtBL,GAAmBtD,EAAIF,IAAIK,EAAO,aAAa,WAG7CiD,iBAGMnE,GAAKkB,MAAEA,EAAF+C,OAASA,EAATC,UAAiBA,QAC9BhD,EAAMoD,UAAW,CACpBvD,EAAIF,IAAIK,EAAO,aAAa,SACtB4D,EAAQvD,KAAKC,MAAMkC,KAAKqB,MAAQ,KAChC5D,EAASF,EAAUC,OACrB8D,EAAgB,QACdC,QAAiBjB,EAAY,CAAE9C,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,GAAa/C,GACjE6D,GAAiBC,EAASnG,aACpBiG,EAAMxD,KAAKC,MAAMkC,KAAKqB,MAAQ,KAC9BG,EAAU/D,EAAOM,IAAMsD,GAAQ7D,EAAME,OAAS6D,EAASnG,OAASoC,EAAME,QAAW+D,MACnFC,EAAgB,UAChBF,EAAQ,CACVE,QAAsBC,EAAW,CAAEnE,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,UAC5CoB,EAAO/D,KAAKC,MAAMkC,KAAKqB,MAAQ,KAC/B5D,EAASF,EAAUC,GACzBC,EAAOG,KAAOwD,EACd3D,EAAOM,GAAK6D,QACNC,QAAuBvB,EAAY,CAAE9C,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,GAAa/C,GACvE6D,GAAiBO,EAAezG,OAChCmG,EAASO,OAAOP,EAASnG,OAAQ,KAAMyG,QAC7BpE,EAAOM,GAAKsD,GAAQ7D,EAAME,OAAS6D,EAASnG,QAAUoC,EAAME,QAAW+D,SAC3EM,EAAmB,CAAEvE,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,IAE5CD,EAAO,WAAY,CAAE9B,KAAM,OAAQd,MAAO2D,IAC1Cf,EAAO,qBAAsBgB,IACzBC,GAAUhE,EAAMwE,mBAClBN,IACAnB,EAAO,WAAY,CAAE9B,KAAM,aAE7BpB,EAAIF,IAAIK,EAAO,aAAa,QAuE5ByE,EAAiB,GACnBR,EAAS,iBAUIE,GAAYnE,MAAEA,EAAF+C,OAASA,EAATC,UAAiBA,UACpC5F,EAAS4C,EAAM5C,OAAU,mBAAkBsH,mBAAmB1E,EAAM5C,eAAYkC,eAChFO,EAAIoC,UAAU0C,yBAAyB3E,EAAMhB,QAAS4F,IAC1DH,EAAelH,KAAK+F,KAAKuB,MAAMD,MAC9B,CAAEE,GAAI,EAAGC,OAAQ3H,IACpB4C,EAAMwE,iBAAkB,EACjB,KACLP,WAhBqBjE,EAAO+C,UACvBiC,aAAY,KACbP,EAAe7G,SACjBmF,EAAO,gBAAiB,IAAI0B,IAC5BA,EAAiB,MAElB,KAUQQ,CAAejF,EAAO+C,mBAKpBwB,GAAoBvE,MAAEA,IAC/BiE,IACFiB,cAAcjB,GACdQ,EAAiB,GACjBR,EAAS,SAEL7G,EAAS4C,EAAM5C,OAAU,mBAAkBsH,mBAAmB1E,EAAM5C,eAAYkC,QAChFO,EAAIoC,UAAUkD,2BAA2BnF,EAAMhB,YAAQM,EAAW,CAAEyF,OAAQ3H,IAClF4C,EAAMwE,iBAAkB,QAmCnB,CACL1B,YAAAA,EACAhE,IAAAA,EACAsG,4BAxI0BpF,MAAEA,EAAF+C,OAASA,EAATC,UAAiBA,QACtChD,EAAMoD,UAAW,CACpBvD,EAAIF,IAAIK,EAAO,aAAa,SACtBO,EAAKF,KAAKC,MAAM+B,UAAKrC,EAAO,wBAAyBA,EAAMO,IAAM,GACjEN,EAASF,EAAUC,GACzBC,EAAOM,GAAKA,EACZN,EAAOO,SAAU,EACbyD,GAAUjE,EAAM+D,SAASnG,OAAuB,EAAdoC,EAAME,cACpCqE,EAAmB,CAAEvE,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,IAC1CD,EAAO,WAAY,CAAE9B,KAAM,qBAEvB8C,QAAiBjB,EAAY,CAAE9C,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,GAAa/C,UAC5D8D,EAASnG,QAIdmF,EAAO,WAAY,CAAE9B,KAAM,OAAQd,MAAO4D,EAASnG,SACnDmF,EAAO,kBAAmBgB,GAC1BlE,EAAIF,IAAIK,EAAO,aAAa,GACrB+D,EAASnG,SANdiC,EAAIF,IAAIK,EAAO,aAAa,GACrB,KA2HXqF,4BAlH0BrF,MAAEA,EAAF+C,OAASA,EAATC,UAAiBA,QACtChD,EAAMoD,UAAW,IAChBpD,EAAMwE,uBACV3E,EAAIF,IAAIK,EAAO,aAAa,SACtB4D,EAAQpB,KAAKqB,MACbzD,EAAOC,KAAKC,MAAM+B,UAAKrC,EAAQ,YAAWA,EAAM+D,SAASnG,OAAS,eAAgBoC,EAAMI,MAAQ,GAChGH,EAASF,EAAUC,OACrB8D,EAAgB,EACpB7D,EAAOG,KAAOA,QACR2D,QAAiBjB,EAAY,CAAE9C,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,GAAa/C,GACjE6D,GAAiBC,EAASnG,aACpBoG,EAAU/D,EAAOM,GAAKF,KAAKC,MAAMkC,KAAKqB,MAAQ,MAAU7D,EAAME,OAAS6D,EAASnG,OAASoC,EAAME,QAAW+D,MAC5GC,EAAgB,UAChBF,EAAQ,CACVE,QAAsBC,EAAW,CAAEnE,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,UAC5CoB,EAAO5B,KAAKqB,MACZ5D,EAASF,EAAUC,GACzBC,EAAOG,KAAOC,KAAKC,MAAMsD,EAAQ,KACjC3D,EAAOM,GAAKF,KAAKC,MAAM8D,EAAO,WACxBC,QAAuBvB,EAAY,CAAE9C,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,GAAa/C,GACvE6D,GAAiBO,EAAezG,OAChCmG,EAASO,OAAOP,EAASnG,OAAQ,KAAMyG,UAEzCtB,EAAO,WAAY,CAAE9B,KAAM,OAAQd,MAAO2D,IAC1Cf,EAAO,iBAAkBgB,GACrBC,IACFE,IACAnB,EAAO,WAAY,CAAE9B,KAAM,aAE7BpB,EAAIF,IAAIK,EAAO,aAAa,GACrB8D,IAqFTK,WAAAA,EACAmB,wBAxTsBtF,MAAEA,EAAF+C,OAASA,EAATC,UAAiBA,GAAauC,SAC9CC,EAAUD,EAAqBE,OACrC1C,EAAO,YACHC,EAAUE,OAASlD,EAAMhB,WAEzBa,EAAIF,IAAIK,EAAO,aAAa,SAGtB0F,SADmB7F,EAAIoC,UAAUC,GAAGyD,WAAW3F,EAAMhB,SAC7B0B,KAC9BD,EAAYiF,SACNE,EAASF,EAAWzC,QAAUyC,EAAWzC,OAAO,GACtDF,EAAO,cAAe6C,OAClBvH,EAAkBJ,EAAUC,EAAc8B,EAAM7B,YAAa6B,EAAM5B,sBA5BlD4B,EAAOU,OAC3B,MAAMtC,KAAQsC,EAAM,KACnBmF,EAAanF,EAAKtC,GAClB0H,MAAMC,QAAQF,IAChBA,QAAmB7E,EAAYhB,EAAMhB,OAAQ6G,GAC7C9G,EAAUb,EAAc8B,EAAM7B,YAAa6B,EAAM5B,KAAMA,EAAMyH,GAC7DnF,EAAKtC,GAAQyH,GACJA,EAAWlE,cACbkE,EAAWlE,KAClB5C,EAAUb,EAAc8B,EAAM7B,YAAa6B,EAAM5B,KAAMA,EAAMyH,GAC7DnF,EAAKtC,GAAQyH,IAmBbG,CAAWhG,EAAO3B,GAClBA,EAAmBA,GAAmBA,EAAgBuH,EAAOK,sBACvDJ,EAAaxH,GA3ChB,CACLoB,aAAc,WACdL,QAAS,CACPC,SAAU,CACRjB,KAAM,WACNa,KAAMW,EAAYsG,KAAI9H,KAAWA,KAAAA,EAAMqD,MAAO,UAGlDE,KAAMW,KAoCE6D,EAAqB9H,GAAmBA,EAAgB,uBAC1DA,EAAgB,uBAAyB,MAC7CwH,EAAWzG,eAAeyG,EAAWzG,SAAY+G,GAC5CN,EAAWlE,OACdkE,EAAWlE,KAAOW,KAEhBsD,EAAOK,eAAgB,OAGnBjE,SADqBnC,EAAIoC,UAAUC,GAAGC,+BAA+B,MAAOyD,EAAOK,eAAgB,CAAE7D,OAAQ,iBACjF1B,KAClCD,EAAYuB,SACNoE,EAAapE,EAAaiB,QAAUjB,EAAaiB,OAAO,IAAMjB,EAAaiB,OAAO,GAAGoD,YAGrFC,SAD0BzG,EAAIoC,UAAUC,GAAGqE,oBAAoBH,EAAY,CAAEhE,OAAQ,wBAC/C1B,KAC5CD,EAAY6F,SACNE,EAAgBF,EAAkBrD,QAAUqD,EAAkBrD,OAAO,IAAMqD,EAAkBrD,OAAO,GAAGwD,mBAE7GZ,EAAWzG,QAAQG,UAAY,CAC7BnB,KAAM,YACNa,KAAM,UAEFsD,GAAS,IAAIC,MAAOC,WAAWC,MAAM,kBAAkB,GAC7D8D,EAAc1I,SAAS4I,UACftI,EAAOsI,EAAMtI,KACbuI,EAAU,CACdvI,KAAAA,EACA6C,KAAMyF,EAAMzF,MAAQ,GACpB4B,KAAM6D,EAAM7D,MAAQ,GACpB+D,YAAaF,EAAMG,MAAQ,IAEvBC,EAAY,CAChB1I,KAAAA,EACAqD,MAAO,QAELrD,EAAKsE,MAAM,gBACbiE,EAAQhE,SAAY,GAAEJ,EAAOK,MAAM,EAAG,MAAML,EAAOK,MAAM,KACzD+D,EAAQ1F,KAAO,GACf0F,EAAQ9D,KAAO,GACfiE,EAAUrF,MAAQ,IACL,cAATrD,UACFyH,EAAWzG,QAAQG,UAAUN,KAAK8H,QAAQD,QAC1CjB,EAAWlE,KAAKqF,UAAYL,GAIhCd,EAAWzG,QAAQG,UAAUN,KAAK1B,KAAKuJ,GACvCjB,EAAWlE,KAAKvD,GAAQuI,KAGxBnB,IACFI,EAAOK,gBAAkBJ,EAAWzG,QAAQG,UAAUN,KAAK1B,KAAK,CAAEa,KAAM,MAAOqD,MAAO,IAAKF,OAAQ,SAClGlD,GAAmBwH,EAAWzG,QAAQC,SAASJ,KAAK1B,KAAK,CAAEa,KAAM,MAAOqD,MAAO,IAAKF,OAAQ,SAE/FsE,EAAWlE,KAAK8D,IAAM,CAAErH,KAAM,MAAOmD,OAAQ,OAC7CwB,EAAO,UAAW8C,GAClBhG,EAAIF,IAAIK,EAAO,aAAa,GAC5B,MAAOwD,GACP1D,GAAgBA,EAAa0D,GACzBC,KAAOC,QAAQC,IAAIH,GACvB3D,EAAIF,IAAIK,EAAO,aAAa,KA6OhCiH,2BAnFyBjH,MAAEA,EAAF+C,OAASA,EAATC,UAAiBA,GAAa7C,SACjDD,EAAQF,EAAME,MACpB6C,EAAO,iBACPA,EAAO,cAAc,GACrBA,EAAO,WAAY5C,SACbrB,EAAI,CAAEkB,MAAAA,EAAO+C,OAAAA,EAAQC,UAAAA,IAC3BD,EAAO,cAAc,GACrBA,EAAO,WAAY7C,IA6EnBgH,yBAlOuBlH,MAAEA,EAAF+C,OAASA,EAATC,UAAiBA,OACpCA,EAAUE,OAASlD,EAAMhB,WAEzBa,EAAIF,IAAIK,EAAO,aAAa,SACtBC,EAAS,CACbO,SAAS,EACTL,MAAO,EACPiC,OAAQ,aAGJ1B,SADab,EAAIoC,UAAUC,GAAGmB,mBAAmBrD,EAAMhB,OAAQ,CAAE0B,KAAM4C,KAAKC,UAAUtD,MAC1ES,KAClBD,EAAYC,OACRyG,EAAO3E,KAAKqB,MACZnD,EAAKuC,OAAOrF,SACduJ,EAAO9G,KAAK+G,MAAiC,IAA3B1G,EAAKuC,OAAO,GAAG+D,kBAE7BK,WAvBQC,SACZzD,EAAMyD,GAAO9E,KAAKqB,MACtBzD,EAAO,IAAIoC,KAAKqB,GAAK0D,SAAS,EAAG,EAAG,EAAG,SAElC,CAAEnH,KAAAA,EAAMG,GADRH,EAAO,UAoBEoH,CAAUL,GACtBpE,EAAO,UAAWsE,EAAIjH,MACtB2C,EAAO,QAASsE,EAAI9G,IAChB8G,EAAI9G,GAAKiC,KAAKqB,6BA+LS7D,MAAEA,IACjCA,EAAMyH,gBAAiB,QACjB5H,EAAIoC,UAAU0C,yBAAyB3E,EAAMhB,QAAQ,KACzDgB,EAAMyH,gBAAiB,EACvBlD,EAAmB,CAAEvE,MAAAA,MACpB,CAAE8E,GAAI,IAnMG4C,CAAiB,CAAE1H,MAAAA,IAE3BH,EAAIF,IAAIK,EAAO,aAAa,GAC5B,MAAOwD,GACP1D,GAAgBA,EAAa0D,GACzBC,KAAOC,QAAQC,IAAIH,GACvB3D,EAAIF,IAAIK,EAAO,aAAa,KAyMhCuE,mBAAAA,EACAoD,kCAzCgC3H,MAAEA,EAAF+C,OAASA,EAATC,UAAiBA,OAC7CA,EAAUE,OAASlD,EAAMhB,WAEzBa,EAAIF,IAAIK,EAAO,aAAa,SACtB4D,MAAEA,EAAFgE,IAASA,EAATC,iBAAcA,GAAqB7H,EAAM8H,QACzC7H,EAAS,CACbG,KAAMwD,EACNrD,GAAIqH,GAEF5H,EAAM5C,SAAU6C,EAAOS,KAAKtD,OAAS4C,EAAM5C,cAEzCsD,SADab,EAAIoC,UAAUC,GAAGmB,mBAAmBrD,EAAMhB,OAAQ,CAAE0B,KAAM4C,KAAKC,UAAUtD,MAC1ES,KAClBD,EAAYC,GACZqC,EAAO,qBAAsB,CAAErC,KAAMA,EAAKuC,OAAQ8E,MAAOF,IACzDhI,EAAIF,IAAIK,EAAO,aAAa,GAC5B,MAAOwD,GACP1D,GAAgBA,EAAa0D,GACzBC,KAAOC,QAAQC,IAAIH,GACvB3D,EAAIF,IAAIK,EAAO,aAAa,gBC1arB,UAAUH,IAAEA,EAAF3B,aAAOA,EAAPE,KAAqBA,EAArB0B,aAA2BA,EAA3BkI,uBAAyCA,UAC1D7J,EAAcW,UAAIV,EAAM,mBAAekB,GAC7ClB,EAAOU,UAAIV,EAAM,OAAQA,SACnB6J,EAAUC,EAAW,CAAErI,IAAAA,EAAK3B,aAAAA,EAAc4B,aAAAA,IAC9CqI,ECPW,UAAUtI,IAAEA,EAAF3B,aAAOA,EAAP8J,uBAAqBA,QACxCI,EAAqB,WAChBC,EAAkBtE,GACpBA,EAASnG,QACdmG,EAASjG,SAAQ,CAAC8G,EAASmD,KACzBhE,EAASgE,GAAO,wBAA0BK,gBAqErCE,EAAetI,GACtBA,EAAM+D,SAASO,OAAO,EAAGtE,EAAM+D,SAASnG,QACxCoK,GAA0BA,EAAuB,IACjDO,EAAcvI,YAOPwI,EAAUxI,GAAOiB,KAAEA,EAAFd,MAAQA,QAC3BH,EAAME,aAAgB,QACrB6D,EAAW/D,EAAM+D,SACjB0E,EAAQzI,EAAMyI,aACZxH,OACD,OACHjB,EAAMyI,MAAQtI,EAAQ,CAACA,GAAS,aAG7B,WACEA,WAEc,IADAsI,EAAM7K,OACH,OACd8K,EAAsBD,EAAM,GAClCzI,EAAMyI,MAAQ,CAACtI,KAAUsI,EAAM7F,MAAM,GAAI,IACzCmB,EAASO,OAAOP,EAASnG,OAAS8K,EAAqBA,QAEvD1I,EAAMyI,MAAQ,CAACtI,KAAUsI,aAIxB,YACEtI,cACCwI,EAAaF,EAAM7K,UACN,IAAf+K,EAAkB,OACdD,EAAsBD,EAAM,GAClCzI,EAAMyI,MAAQ,IAAIA,EAAM7F,MAAM,EAAG,GAAIzC,GACrC4D,EAASO,OAAO,EAAGoE,QACVC,EAAa,GACtBF,EAAMlL,KAAK4C,aAIV,UACHsI,EAAMlL,KAAK,aAGR,mBACGmL,EAAsBD,EAAMG,MAClC7E,EAASO,OAAOP,EAASnG,OAAS8K,EAAqBA,aAGpD,YACGC,EAAaF,EAAM7K,OACnBiL,EAAUJ,EAAME,EAAa,IAAM,KACrCE,EAAU1I,EAAQH,EAAME,SACtByI,EAAa,EAAG,OACZD,EAAsBD,EAAM,GAClCzI,EAAMyI,MAAQ,IAAIA,EAAM7F,MAAM,GAAI,GAAIiG,EAAU1I,EAAO,GACvD4D,EAASO,OAAO,EAAGoE,QAEnB1I,EAAMyI,MAAQ,IAAIA,EAAM7F,MAAM,GAAI,GAAIiG,EAAU1I,EAAO,QAGzDH,EAAMyI,MAAME,EAAa,GAAKE,EAAU1I,aA4CvC2I,EAAS9I,EAAOf,GACvBF,EAAUb,EAAc8B,EAAM7B,YAAa6B,EAAM5B,KAAM4B,EAAM+I,SAAS9C,eAAgBhH,GACtFY,EAAIF,IAAIK,EAAO,OAAQf,YAgChBsJ,EAAevI,GACtBH,EAAIF,IAAIK,EAAO,WAAY,UAWtB,CACLgJ,oBApCmBhJ,GACnBA,EAAM8H,QAAU,CACdlE,MAAOvD,KAAKC,MAAMkC,KAAKqB,MAAQ,KAC/BgE,iBAAkB7H,EAAM+D,SAASnG,OAAS,IAkC5CqL,wBA9BuBjJ,GACvBA,EAAM8H,QAAQF,IAAMvH,KAAKC,MAAMkC,KAAKqB,MAAQ,MA8B5CqF,2BA3B0BlJ,GAC1BA,EAAM8H,SAAU,GA2BhBqB,4BAxB2BnJ,GAAOU,KAAEA,EAAFqH,MAAQA,IAC1C/H,EAAM+D,SAASO,OAAOyD,EAAQ,EAAG,KAAMrH,IAwBvC0I,4BAxK2BpJ,EAAOU,GAC9BV,EAAMQ,SACRE,EAAKF,UAEP6H,EAAiB3H,GACjBsH,GAA0BA,EAAuBtH,GACjDV,EAAM+D,SAAWrD,GAmKjB2I,uBAjOsBrJ,EAAOU,MACzBA,GAAQA,EAAK9C,OAAQ,CACvByK,EAAiB3H,SACXqD,EAAW/D,EAAM+D,YACnB/D,EAAMsJ,OAAQ,OAEV1E,EAAUlE,EAAK,GACnB6I,EAAYvJ,EAAMsJ,OAClB1L,EAASoC,EAAM+D,SAASnG,OAAS,MAC/BmK,EAAQ,KACVyB,GAAa,KACX5L,EAAS,MACN,IAAIF,EAAIE,EAAc,IAANF,GAAW8L,EAAY9L,IACtCqG,EAASrG,GAAG6L,GAAa3E,EAAQ2E,IACnCxB,EAAQrK,EACE,IAANA,IACF8L,GAAa,IAGfA,GAAa,EAInBxB,GAA0BA,EAAuBtH,GAC7CqH,EACFhE,EAASO,OAAOyD,EAAO,KAAMrH,GAE7BqD,EAASO,OAAOP,EAASnG,OAAQ,KAAM8C,QAGzCsH,GAA0BA,EAAuBtH,GACjDqD,EAASO,OAAOP,EAASnG,OAAQ,KAAM8C,GAEzC8H,EAASxI,EAAO,CAAEiB,KAAM,KAAMd,MAAOO,EAAK9C,WAiM5C6L,yBA7LwBzJ,EAAOU,MAC3BA,GAAQA,EAAK9C,OAAQ,CACvB8C,EAAKF,gBACCuD,EAAW/D,EAAM+D,SACvBsE,EAAiB3H,GACjBsH,GAA0BA,EAAuBtH,GACjDqD,EAASO,OAAO,EAAG,KAAM5D,KAwL3BgJ,wBApLuB1J,EAAOU,MAC1BA,GAAQA,EAAK9C,OAAQ,OACjBmG,EAAW/D,EAAM+D,SACvBsE,EAAiB3H,GACjBsH,GAA0BA,EAAuBtH,GACjDqD,EAASO,OAAOP,EAASnG,OAAQ,KAAM8C,KAgLzC4H,cAAAA,EACAqB,kBA9JiB3J,EAAOG,GACxBN,EAAIF,IAAIK,EAAO,QAASG,IA8JxBqI,SAAAA,EACAoB,mBAhGkB5J,EAAO1D,GACrB0D,EAAM5C,SAAWd,GACnBuD,EAAIF,IAAIK,EAAO,SAAU1D,IA+F3BuN,iBA3FgB7J,EAAOI,GACvBP,EAAIF,IAAIK,EAAO,OAAQI,IA2FvB0J,eAxFc9J,EAAOO,GACrBV,EAAIF,IAAIK,EAAO,KAAMO,IAwFrBwJ,oBApFItG,KACFC,QAAQC,IAAI,mCAoFdqG,oBA5EmBhK,EAAOsH,GAC1BzH,EAAIF,IAAIK,EAAO,UAAWsH,IA4E1B2C,qBAzEoBjK,GACpBsI,EAActI,GACdA,EAAM5C,OAAS,GACf4C,EAAMI,KAAO,EACbJ,EAAMO,GAAK,EACXP,EAAME,MAAQ,IACdF,EAAMQ,SAAU,QACVX,EAAIoC,UAAUkD,2BAA2BnF,EAAMhB,SAmErDkL,mBAlFkBlK,EAAOmK,GACzBtK,EAAIF,IAAIK,EAAO,SAAUmK,IAkFzBrB,QAAAA,EACAsB,WAzDiBtB,EA0DjBuB,qBArCoBrK,EAAOsK,GAC3BzK,EAAIF,IAAIK,EAAO,WAAYsK,IAqC3B/B,cAAAA,EACAgC,mBA/BkBvK,EAAOwK,GACzB3K,EAAIF,IAAIK,EAAO,SAAUwK,IA+BzBC,qBA5BoBzK,GACpBH,EAAIF,IAAIK,EAAO,SAAU,OA4BzB0K,qBAlEoB1K,EAAO4F,GAC3B/F,EAAIF,IAAIK,EAAO,WAAY4F,KDrLf+E,CAAa,CAAE9K,IAAAA,EAAK3B,aAAAA,EAAc8J,uBAAAA,UAuBzC,CACL4C,YAAY,EACZ5K,MAvBY,CACZ5B,KAAAA,EACAD,YAAAA,EACAiF,WAAW,EACXpE,OAAQ,EACR+E,SAAU,GACV0E,MAAO,GACPrL,OAAQ,GACR2L,SAAU,GACVvE,iBAAiB,EACjBpE,KAAM,EACNG,GAAI,EACJL,MAAO,IACPM,SAAS,EACTvB,UAAMK,EACNwI,SAAS,EACT+C,SAAU,GACVvB,OAAQ,KACR7B,eAAgB,MAMhBQ,QAAAA,EACAE,UAAAA"}