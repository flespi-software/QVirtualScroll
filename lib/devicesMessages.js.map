{"version":3,"file":"devicesMessages.js","sources":["../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../node_modules/@babel/runtime-corejs2/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/ls.js","../src/store/modules/devicesMessages/actions.js","../src/store/modules/devicesMessages/mutations.js","../src/store/modules/devicesMessages/index.js"],"sourcesContent":["var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Array$isArray = require(\"@babel/runtime-corejs2/core-js/array/is-array\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nvar _isIterable = require(\"@babel/runtime-corejs2/core-js/is-iterable\");\n\nvar _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nfunction _iterableToArray(iter) {\n  if (typeof _Symbol !== \"undefined\" && _isIterable(Object(iter))) return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    },\n    enum: cols.enum\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport { getColsLS, setColsLS } from '../ls'\n\nconst defaultCols = ['timestamp', 'server.timestamp', 'ident', 'position.latitude', 'position.longitude', 'position.altitude', 'position.speed']\n\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.from) {\n      params.from = Math.floor(state.from / 1000)\n    }\n    if (state.to) {\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  async function migrateCols (type, cols) {\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.reduce((res, col) => {\n            if ((defaultCols.includes(col.name) || (!!col.__dest && col.display))) {\n              res.push({ name: col.name, width: col.width })\n            }\n            return res\n          }, [])\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: cols.reduce((res, col) => {\n            if (!col.custom) {\n              res.push({ name: col.name, width: 150 })\n            }\n            return res\n          }, [])\n        }\n      },\n      enum: {}\n    }\n    if (cols.length) {\n      const processedSchemaByCols = cols.reduce((res, col) => {\n        const isColDefault = defaultCols.includes(col.name)\n        res.isDefault = res.isDefault && ((!col.display && !isColDefault) || (col.display && (isColDefault || !!col.__dest)))\n        res.isProtocol = res.isProtocol && !col.custom\n        if (col.display) {\n          res.schema.push({ name: col.name, width: col.width })\n        }\n        res.enum[col.name] = { ...col }\n        delete res.enum[col.name].display\n        delete res.enum[col.name].width\n        return res\n      }, {\n        schema: [],\n        enum: {},\n        isDefault: true,\n        isProtocol: true\n      })\n      if (!processedSchemaByCols.isDefault || !processedSchemaByCols.isProtocol) {\n        const protocolResp = await Vue.connector.gw.getChannelProtocolsDeviceTypes('all', type, { fields: 'title' })\n        const protocolData = protocolResp.data\n        errorsCheck(protocolData)\n        const name = _get(protocolData, 'result[0].title', `Custom-${type}`)\n        schema.activeSchema = name\n        schema.schemas[name] = {\n          name,\n          cols: processedSchemaByCols.schema\n        }\n      }\n      schema.enum = processedSchemaByCols.enum\n    }\n    return schema\n  }\n\n  function getDefaultColsSchema () {\n    const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: defaultCols.reduce((res, name) => {\n        res[name] = { name }\n        if (name.match(/timestamp$/)) {\n          res[name].addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n          res[name].type = ''\n          res[name].unit = ''\n        }\n        return res\n      }, {})\n    }\n  }\n\n  async function getCols ({ state, commit, rootState }, sysColsNeedInitFlags) {\n    const needEtc = sysColsNeedInitFlags.etc\n    commit('reqStart')\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        /* getting device info */\n        const deviceResp = await Vue.connector.gw.getDevices(state.active)\n        const deviceData = deviceResp.data\n        errorsCheck(deviceData)\n        const device = deviceData.result && deviceData.result[0]\n        commit('setSettings', device)\n        let colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n        colsFromStorage = (colsFromStorage && colsFromStorage[device.device_type_id])\n        let colsSchema = colsFromStorage || getDefaultColsSchema()\n        const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n          ? colsFromStorage['custom-cols-schemas'] : {}\n        colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n        if (Array.isArray(colsSchema)) {\n          colsSchema = await migrateCols(device.device_type_id, colsSchema)\n          colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n          setColsLS(LocalStorage, state.lsNamespace, state.name, state.settings.device_type_id, colsSchema)\n        }\n        const needMigration = !colsFromStorage || _get(colsSchema.enum, 'timestamp.unit', undefined) === undefined // type and unit adding 02.09.20\n\n        /* adding sys cols after migration. 12.11.20 */\n        if (_get(colsSchema.enum, 'action.__dest', undefined) === 'action') {\n          delete colsSchema.enum.action\n        }\n        /* adding locale to all timestamps 26.01.21 */\n        const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n        Object.keys(colsSchema.enum).forEach(name => {\n          if (name.match(/timestamp$/)) {\n            const col = colsSchema.enum[name]\n            col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n            col.type = ''\n            col.unit = ''\n          }\n        })\n        /* adding locale to all timestamps end */\n        if (needMigration) {\n          if (device.device_type_id) {\n            /* getting protocol id */\n            const protocolResp = await Vue.connector.gw.getChannelProtocolsDeviceTypes('all', device.device_type_id, { fields: 'protocol_id' })\n            const protocolData = protocolResp.data\n            errorsCheck(protocolData)\n            const protocolId = protocolData.result && protocolData.result[0] && protocolData.result[0].protocol_id\n            /* gettings messages parameters */\n            const messageParamsResp = await Vue.connector.gw.getChannelProtocols(protocolId, { fields: 'message_parameters' })\n            const messageParamsData = messageParamsResp.data\n            errorsCheck(messageParamsData)\n            const messageParams = messageParamsData.result && messageParamsData.result[0] && messageParamsData.result[0].message_parameters\n            /* initing columns by message parameters */\n            colsSchema.schemas._protocol = {\n              name: '_protocol',\n              cols: []\n            }\n            const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n            messageParams.forEach((param) => {\n              const name = param.name\n              const enumCol = {\n                name,\n                type: param.type || '',\n                unit: param.unit || '',\n                description: param.info || ''\n              }\n              const schemaCol = {\n                name,\n                width: 150\n              }\n              if (name.match(/timestamp$/)) {\n                enumCol.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n                enumCol.type = ''\n                enumCol.unit = ''\n                schemaCol.width = 190\n                if (name === 'timestamp') {\n                  colsSchema.schemas._protocol.cols.unshift(schemaCol)\n                  colsSchema.enum.timestamp = enumCol\n                  return\n                }\n              }\n              colsSchema.schemas._protocol.cols.push(schemaCol)\n              colsSchema.enum[name] = enumCol\n            })\n          }\n          if (needEtc) {\n            colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n            colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n          }\n          colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n        }\n        commit('setCols', colsSchema)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1,\n          fields: 'timestamp'\n        }\n        const resp = await Vue.connector.gw.getDevicesMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    let result = []\n    if (rootState.token && state.active) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getDevicesMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Math.floor(Date.now() / 1000)\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Math.floor(Date.now() / 1000)\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Math.floor(Date.now() / 1000)\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = Math.floor(_get(state, 'messages[0].timestamp', state.to) - 1)\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getMessages({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = Math.floor(_get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 1)\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = Math.floor(start / 1000)\n        params.to = Math.floor(stop / 1000)\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    await Vue.connector.subscribeMessagesDevices(state.active, (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2 })\n    state.realtimeEnabled = true\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    await Vue.connector.unsubscribeMessagesDevices(state.active)\n    state.realtimeEnabled = false\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          from: start,\n          to: end\n        }\n        const resp = await Vue.connector.gw.getDevicesMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function newMessagesCheck ({ state }) {\n    state.hasNewMessages = false\n    await Vue.connector.subscribeMessagesDevices(state.active, () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2 })\n  }\n\n  return {\n    getMessages,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getCols,\n    getHistory,\n    initTime,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      messages[index]['x-flespi-message-key'] = messagesKeyPointer++\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      if (state.filter && filterHandler) {\n        data = filterHandler(state.filter, data)\n      }\n      messagesIndexing(data)\n      const messages = state.messages\n      if (state.sortBy) {\n        /* write by sorted field */\n        const message = data[0],\n          fieldName = state.sortBy,\n          length = state.messages.length - 1\n        let index = null,\n          escapeFlag = true\n        if (length > 0) {\n          for (let i = length; i !== 0 || escapeFlag; i--) {\n            if (messages[i][fieldName] > message[fieldName]) {\n              index = i\n              if (i === 0) {\n                escapeFlag = false\n              }\n            } else {\n              escapeFlag = false\n            }\n          }\n        }\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        if (index) {\n          messages.splice(index, 0, ...data)\n        } else {\n          messages.splice(messages.length, 0, ...data)\n        }\n      } else {\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        messages.splice(messages.length, 0, ...data)\n      }\n      limiting(state, { type: 'rt', count: data.length })\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Devices messages')\n    }\n  }\n\n  function setActive (state, id) {\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeMessagesDevices(state.active)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.settings.device_type_id, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setSettings (state, device) {\n    Vue.set(state, 'settings', device)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Math.floor(Date.now() / 1000),\n      lastMessageIndex: state.messages.length - 1\n    }\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Math.floor(Date.now() / 1000)\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setMissingMessages,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    limiting,\n    setFilter,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setSettings\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    pages: [],\n    filter: '',\n    settings: {},\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    sortBy: null,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["module","obj","key","value","_Object$defineProperty","enumerable","configurable","writable","exports","arr","len","length","i","arr2","Array","_Array$isArray","arrayLikeToArray","iter","_Symbol","_isIterable","Object","_Array$from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","getColsLS","LocalStorage","lsNamespace","lsRouteToItem","colsFromStorage","lsItemName","lsPath","split","shift","join","appStorage","getItem","get","setColsLS","active","cols","customColsSchema","schemas","_default","_protocol","_unsaved","defaultColsSchema","activeSchema","enum","set","defaultCols","Vue","errorHandler","getParams","state","params","limit","count","filter","from","Math","floor","to","reverse","errorsCheck","data","errors","forEach","errObject","Error","reason","type","schema","reduce","res","col","includes","__dest","display","push","width","custom","processedSchemaByCols","isColDefault","isDefault","isProtocol","connector","gw","getChannelProtocolsDeviceTypes","fields","protocolResp","protocolData","_get","sysColsNeedInitFlags","commit","rootState","needEtc","etc","token","getDevices","deviceResp","deviceData","device","result","device_type_id","colsSchema","locale","Date","match","map","addition","unit","getDefaultColsSchema","customColsSchemas","isArray","migrateCols","settings","needMigration","action","keys","protocolId","protocol_id","getChannelProtocols","messageParamsResp","messageParamsData","messageParams","message_parameters","param","enumCol","description","schemaCol","unshift","timestamp","DEV","console","log","getDevicesMessages","JSON","stringify","resp","date","now","round","val","day","setHours","newMessagesCheck","getMessages","isLoadingActive","isLoading","start","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","realtimeEnabled","messagesBuffer","subscribeMessagesDevices","message","parse","rh","setInterval","clearInterval","unsubscribeMessagesDevices","offline","end","lastMessageIndex","index","hasNewMessages","getPrevPage","getNextPage","getCols","getHistory","initTime","getMissedMessages","filterHandler","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","removeMessagesCount","pages","pagesCount","pop","rtCount","setCols","setOffline","setReconnected","clearOfflineState","setMissingMessages","setHistoryMessages","setRTMessages","sortBy","fieldName","escapeFlag","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","setReverse","clear","setActive","id","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setSettings","namespaced","selected","actions","getActions","mutations","getMutations"],"mappings":"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"}