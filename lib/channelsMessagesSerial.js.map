{"version":3,"file":"channelsMessagesSerial.js","sources":["../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../src/store/modules/ls.js","../src/store/modules/channelsMessagesSerial/actions.js","../src/store/modules/channelsMessagesSerial/index.js","../src/store/modules/channelsMessagesSerial/mutations.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport { getColsLS, setColsLS } from '../ls'\n\nconst defaultCols = ['timestamp', 'server.timestamp', 'ident', 'position.latitude', 'position.longitude', 'position.altitude', 'position.speed']\nexport default function ({ Vue, LocalStorage, errorHandler, logger }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.from) {\n      params.from = state.from / 1000\n    }\n    if (state.to) {\n      params.to = state.to / 1000\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function errorsCheck (commit, data) {\n    if (data.errors) {\n      commit('reqError', data.errors)\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    } else {\n      commit('reqFullfiled')\n    }\n  }\n\n  function getDefaultEnum () {\n    return defaultCols.reduce((res, name) => {\n      res[name] = { name }\n      return res\n    }, {})\n  }\n\n  function getDefaultColsSchema () {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: getDefaultEnum()\n    }\n  }\n\n  async function getCols ({ state, commit, rootState }, sysColsNeedInitFlags) {\n    const needEtc = sysColsNeedInitFlags.etc\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n        colsFromStorage = (colsFromStorage && colsFromStorage[state.active])\n        const colsSchema = colsFromStorage || getDefaultColsSchema()\n        const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n          ? colsFromStorage['custom-cols-schemas'] : {}\n        colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n        if (!colsSchema.enum) {\n          colsSchema.enum = getDefaultEnum()\n        }\n        const protocolIdResp = await Vue.connector.gw.getChannels(state.active, { fields: 'protocol_id' })\n        commit('reqStart', { endpoint: 'getChannels', active: state.active, fields: 'protocol_id' })\n        const protocolIdData = protocolIdResp.data\n        errorsCheck(commit, protocolIdData)\n        if (protocolIdData.result && protocolIdData.result.length && protocolIdData.result[0].protocol_id) {\n          const colsResp = await Vue.connector.gw.getChannelProtocols(protocolIdData.result[0].protocol_id, { fields: 'message_parameters' })\n          commit('reqStart', { endpoint: 'getChannelProtocols', active: protocolIdData.result[0].protocol_id, fields: 'message_parameters' })\n          const colsData = colsResp.data\n          errorsCheck(commit, colsData)\n          const messageParams = colsData.result[0].message_parameters\n          /* initing columns by message parameters */\n          colsSchema.schemas._protocol = {\n            name: '_protocol',\n            cols: []\n          }\n          const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n          messageParams.forEach((param) => {\n            const name = param.name\n            const enumCol = {\n              name,\n              type: param.type || '',\n              unit: param.unit || '',\n              description: param.info || ''\n            }\n            const schemaCol = {\n              name,\n              width: 150\n            }\n            if (name.match(/timestamp$/)) {\n              enumCol.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n              enumCol.type = ''\n              enumCol.unit = ''\n              schemaCol.width = 190\n              if (name === 'timestamp') {\n                colsSchema.schemas._protocol.cols.unshift(schemaCol)\n                colsSchema.enum.timestamp = enumCol\n                return\n              }\n            }\n            colsSchema.schemas._protocol.cols.push(schemaCol)\n            colsSchema.enum[name] = enumCol\n          })\n        }\n        if (needEtc) {\n          colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n          !colsFromStorage && colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n        }\n        colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n        commit('setCols', colsSchema)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999.999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1\n        }\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        commit('reqStart', { endpoint: 'getChannelsMessages-initTime', active: state.active, data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0]['server.timestamp'] * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    let result = []\n    if (rootState.token && state.active) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        commit('reqStart', { endpoint: 'getChannelsMessages', active: state.active, data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now() / 1000\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Date.now() / 1000\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now() / 1000\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(0, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = _get(state, 'messages[0][\"server.timestamp\"]', state.to) - 0.000001\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getMessages({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = _get(state, `messages[${state.messages.length - 1}]['server.timestamp']`, state.from) + 0.000001\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to + 2 > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = start / 1000\n        params.to = stop / 1000\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit }) {\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}` : undefined\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, prefix: filter })\n    state.realtimeEnabled = true\n    logger.info(`subscribed to messagesChannels ${state.active} ${filter || ''}`)\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}` : undefined\n    await Vue.connector.unsubscribeMessagesChannels(state.active, '+', undefined, { prefix: filter })\n    state.realtimeEnabled = false\n    logger.info(`unsubscribed to messagesChannels ${state.active} ${filter || ''}`)\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          from: start,\n          to: end\n        }\n        if (state.filter) { params.data.filter = state.filter }\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        commit('reqStart', { endpoint: 'getChannelsMessages', active: state.active, data: JSON.stringify(params) })\n        errorsCheck(commit, data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function newMessagesCheck ({ state }) {\n    state.hasNewMessages = false\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2 })\n    logger.info(`newMessagesCheck subscribed to messagesChannels ${state.active}`)\n  }\n\n  return {\n    getMessages,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getCols,\n    getHistory,\n    initTime,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const logger = Vue.$logger.extendName(name);\n  const actions = getActions({ Vue, LocalStorage, errorHandler, logger }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor, logger })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    pages: [],\n    filter: '',\n    settings: {},\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    sortBy: null,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor, logger }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      Object.defineProperty(messages[index], 'x-flespi-message-key', {\n        value: messagesKeyPointer++,\n        enumerable: false\n      })\n    })\n  }\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      messagesIndexing(data)\n      const messages = state.messages\n      if (state.sortBy) {\n        /* write by sorted field */\n        const message = data[0],\n          fieldName = state.sortBy,\n          length = state.messages.length - 1\n        let index = null,\n          escapeFlag = true\n        if (length > 0) {\n          for (let i = length; i !== 0 || escapeFlag; i--) {\n            if (messages[i][fieldName] > message[fieldName]) {\n              index = i\n              if (i === 0) {\n                escapeFlag = false\n              }\n            } else {\n              escapeFlag = false\n            }\n          }\n        }\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        if (index) {\n          messages.splice(index, 0, ...data)\n        } else {\n          messages.splice(messages.length, 0, ...data)\n        }\n      } else {\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        messages.splice(messages.length, 0, ...data)\n      }\n      limiting(state, { type: 'rt', count: data.length })\n      logger.info(`setRTMessages: length: ${data.length}`)\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n    logger.info(`prependMessages: length: ${data.length}`)\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n    logger.info(`appendMessages: length: ${data.length}`)\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n    logger.info(`setHistoryMessages: length: ${data.length}, reverse:${state.reverse}`)\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n    logger.info(`clearMessages`)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n    logger.info(`limiting: ${type} - count: ${count}`)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n    logger.info(`setFilter: ${value}`)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n    logger.info(`setFrom: ${from}`)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n    logger.info(`setTo: ${to}`)\n  }\n\n  function reqStart (state, params) {\n    logger.info(`reqStart: ${JSON.stringify(params)}`)\n  }\n\n  function reqFullfiled () {\n    logger.info(`reqFullfiled`)\n  }\n\n  function reqError (state, error) {\n    logger.info(`reqError: ${JSON.stringify(error)}`)\n  }\n\n  function setActive (state, id) {\n    Vue.set(state, 'active', id)\n    logger.info(`setActive: ${id}`)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n    logger.info(`setReverse: ${val}`)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeMessagesChannels(state.active)\n    logger.info(`clear module`)\n    logger.info(`unsubscribeMessagesChannels ${state.active}`)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.active, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setSettings (state, channel) {\n    Vue.set(state, 'settings', channel)\n    logger.info(`setSettings: ${channel}`)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Date.now() / 1000,\n      lastMessageIndex: state.messages.length - 1\n    }\n    logger.info(`setOffline`)\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Date.now() / 1000\n    logger.info(`setReconnected`)\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n    logger.info(`setMissingMessages: ${data.length}`)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setHistoryMessages,\n    setRTMessages,\n    setMissingMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    limiting,\n    setFilter,\n    setFrom,\n    setTo,\n    reqStart,\n    reqFullfiled,\n    reqError,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setSettings\n  }\n}\n"],"names":["module","obj","key","value","Object","defineProperty","enumerable","configurable","writable","exports","require$$0","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","getColsLS","LocalStorage","lsNamespace","name","colsFromStorage","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","getItem","get","setColsLS","active","cols","customColsSchema","defaultColsSchema","schemas","_default","undefined","_protocol","_unsaved","activeSchema","splitSchemas","set","defaultCols","Vue","errorHandler","logger","getParams","state","params","limit","count","from","to","reverse","errorsCheck","commit","data","errors","error","errObject","Error","reason","getDefaultEnum","reduce","res","getMessages","rootState","result","token","isLoadingActive","isLoading","resp","connector","gw","getChannelsMessages","JSON","stringify","endpoint","e","DEV","console","log","start","Date","now","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","type","realtimeEnabled","messagesBuffer","encodeURIComponent","subscribeMessagesChannels","message","parse","rh","prefix","info","setInterval","initRenderLoop","clearInterval","unsubscribeMessagesChannels","getPrevPage","_get","getNextPage","Math","floor","getCols","sysColsNeedInitFlags","needEtc","etc","colsSchema","map","width","enum","customColsSchemas","protocolIdResp","getChannels","fields","protocolIdData","protocol_id","colsResp","getChannelProtocols","colsData","messageParams","message_parameters","locale","toString","match","param","enumCol","unit","description","schemaCol","addition","slice","unshift","timestamp","__dest","getHistory","initTime","date","round","day","val","setHours","getFromTo","hasNewMessages","newMessagesCheck","getMissedMessages","end","lastMessageIndex","offline","index","newMessagesInterseptor","$logger","extendName","actions","getActions","mutations","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","pop","rtCount","setCols","setOffline","setReconnected","clearOfflineState","setHistoryMessages","setRTMessages","sortBy","fieldName","escapeFlag","setMissingMessages","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","reqFullfiled","reqError","setReverse","clear","setActive","id","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setSettings","channel","getMutations","namespaced","settings","selected"],"mappings":"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"}