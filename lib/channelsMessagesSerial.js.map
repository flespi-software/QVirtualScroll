{"version":3,"file":"channelsMessagesSerial.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../src/store/modules/channelsMessagesSerial/actions.js","../src/store/modules/channelsMessagesSerial/mutations.js","../src/store/modules/channelsMessagesSerial/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = require(\"core-js/library/fn/object/define-property\");","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import _get from 'lodash/get'\n\nconst defaultCols = ['timestamp', 'server.timestamp', 'ident', 'position.latitude', 'position.longitude', 'position.altitude', 'position.speed']\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.from) {\n      params.from = Math.floor(state.from / 1000)\n    }\n    if (state.to) {\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  function migrateCols (cols) {\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: cols.reduce((res, col) => {\n            if (!col.custom) {\n              res.push({ name: col.name, width: 150 })\n            }\n            return res\n          }, [])\n        }\n      },\n      enum: {}\n    }\n    if (cols.length) {\n      schema.activeSchema = 'custom preset'\n      schema.schemas['custom preset'] = {\n        name: 'custom preset',\n        cols: cols.reduce((res, col) => {\n          if (col.display) {\n            res.push({ name: col.name, width: col.width })\n          }\n          return res\n        }, [])\n      }\n      schema.enum = cols.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].display\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n    return schema\n  }\n\n  function getDefaultColsSchema () {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: defaultCols.reduce((res, name) => {\n        res[name] = { name }\n        return res\n      }, {})\n    }\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      /* removing old store 12.03.20 */\n      const oldStore = LocalStorage.getItem(state.name)\n      if (oldStore) {\n        colsFromStorage = oldStore\n        LocalStorage.remove(state.name)\n      }\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName) || {}\n      colsFromStorage = _get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name)\n      if (!colsFromStorage || colsFromStorage === 'null') {\n        colsFromStorage = {}\n      }\n    }\n    return colsFromStorage\n  }\n\n  async function getCols ({ state, commit, rootState }, sysColsNeedInitFlags) {\n    commit('reqStart')\n    const needEtc = sysColsNeedInitFlags.etc\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const colsFromStorage = getColsFromLS(state)\n        let colsSchema = (colsFromStorage && colsFromStorage[state.active])\n          ? colsFromStorage[state.active] : getDefaultColsSchema()\n        const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n          ? colsFromStorage['custom-cols-schemas'] : {}\n        colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n        if (Array.isArray(colsSchema)) {\n          colsSchema = migrateCols(colsSchema)\n          commit('setColsToLS', colsSchema)\n        }\n        const needMigration = !colsSchema.enum || (\n          _get(colsSchema.enum, 'timestamp.unit', undefined) === undefined\n        ) // type and unit adding 02.09.20\n\n        /* adding sys cols after migration. 12.11.20 */\n        if (_get(colsSchema.enum, 'action.__dest', undefined) === 'action') {\n          delete colsSchema.enum.action\n        }\n\n        if (needMigration) {\n          const protocolIdResp = await Vue.connector.gw.getChannels(state.active, { fields: 'protocol_id' })\n          const protocolIdData = protocolIdResp.data\n          errorsCheck(protocolIdData)\n          if (protocolIdData.result && protocolIdData.result.length && protocolIdData.result[0].protocol_id) {\n            const colsResp = await Vue.connector.gw.getChannelProtocols(protocolIdData.result[0].protocol_id, { fields: 'message_parameters' })\n            const colsData = colsResp.data\n            errorsCheck(colsData)\n            const messageParams = colsData.result[0].message_parameters\n            /* initing columns by message parameters */\n            colsSchema.schemas._protocol = {\n              name: '_protocol',\n              cols: []\n            }\n            messageParams.forEach((param) => {\n              const name = param.name\n              const enumCol = {\n                name,\n                type: param.type || '',\n                unit: param.unit || '',\n                description: param.info || ''\n              }\n              const schemaCol = {\n                name,\n                width: 150\n              }\n              if (name === 'timestamp') {\n                const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n                enumCol.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n                enumCol.type = ''\n                enumCol.unit = ''\n                schemaCol.width = 190\n                colsSchema.schemas._protocol.cols.unshift(schemaCol)\n                colsSchema.enum.timestamp = enumCol\n                return\n              }\n              if (name === 'server.timestamp') {\n                enumCol.type = ''\n                enumCol.unit = ''\n                schemaCol.width = 190\n              }\n              colsSchema.schemas._protocol.cols.push(schemaCol)\n              colsSchema.enum[name] = enumCol\n            })\n          }\n          if (needEtc) {\n            colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n            colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n          }\n          colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n        }\n        commit('setCols', colsSchema)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1\n        }\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0]['server.timestamp'] * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    let result = []\n    if (rootState.token && state.active) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Math.floor(Date.now() / 1000)\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Math.floor(Date.now() / 1000)\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Math.floor(Date.now() / 1000)\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = Math.floor(_get(state, 'messages[0][\"server.timestamp\"]', state.to) - 1)\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getMessages({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = Math.floor(_get(state, `messages[${state.messages.length - 1}]['server.timestamp']`, state.from) + 1)\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = Math.floor(start / 1000)\n        params.to = Math.floor(stop / 1000)\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2 })\n    state.realtimeEnabled = true\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    await Vue.connector.unsubscribeMessagesChannels(state.active, '+')\n    state.realtimeEnabled = false\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const lastIndexOffline = state.messages.reduceRight((result, value, index) => {\n          if (result) {\n            return result\n          }\n          if (value.__connectionStatus === 'offline') {\n            result = index\n          }\n          return result\n        }, 0)\n        const params = {\n          from: !lastIndexOffline ? 0 : Math.floor(state.messages[lastIndexOffline - 1]['server.timestamp']) + 1,\n          to: Math.floor(state.messages[lastIndexOffline + 1]['server.timestamp'])\n        }\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastIndexOffline })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function newMessagesCheck ({ state }) {\n    state.hasNewMessages = false\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2 })\n  }\n\n  return {\n    getMessages,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getCols,\n    getHistory,\n    initTime,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import get from 'lodash/get'\nimport set from 'lodash/set'\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      messages[index]['x-flespi-message-key'] = messagesKeyPointer++\n    })\n  }\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      if (state.filter && filterHandler) {\n        data = filterHandler(state.filter, data)\n      }\n      messagesIndexing(data)\n      const messages = state.messages\n      if (state.sortBy) {\n        /* write by sorted field */\n        const message = data[0],\n          fieldName = state.sortBy,\n          length = state.messages.length - 1\n        let index = null,\n          escapeFlag = true\n        if (length > 0) {\n          for (let i = length; i !== 0 || escapeFlag; i--) {\n            if (messages[i][fieldName] > message[fieldName]) {\n              index = i\n              if (i === 0) {\n                escapeFlag = false\n              }\n            } else {\n              escapeFlag = false\n            }\n          }\n        }\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        if (index) {\n          messages.splice(index, 0, ...data)\n        } else {\n          messages.splice(messages.length, 0, ...data)\n        }\n      } else {\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        messages.splice(messages.length, 0, ...data)\n      }\n      limiting(state, { type: 'rt', count: data.length })\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Channels messages')\n    }\n  }\n\n  function setActive (state, id) {\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeMessagesChannels(state.active)\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName)\n      colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name) || colsFromStorage\n    }\n    return colsFromStorage\n  }\n\n  function splitSchemas (cols) {\n    const customColsSchema = {\n      ...cols.schemas,\n      _default: undefined,\n      _protocol: undefined\n    }\n    const defaultColsSchema = {\n      activeSchema: cols.activeSchema,\n      schemas: {\n        _default: cols.schemas._default,\n        _protocol: cols.schemas._protocol\n      },\n      enum: cols.enum\n    }\n    return { customColsSchema, defaultColsSchema }\n  }\n\n  function setColsToLS (state, cols) {\n    const colsFromStorage = getColsFromLS(state) || {}\n    const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n    colsFromStorage[state.active] = defaultColsSchema\n    colsFromStorage['custom-cols-schemas'] = { ...colsFromStorage['custom-cols-schemas'], ...customColsSchema }\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName) || {}\n      set(appStorage, lsRouteToItem, colsFromStorage)\n      LocalStorage.set(lsItemName, appStorage)\n    } else {\n      LocalStorage.set(state.name, colsFromStorage)\n    }\n  }\n\n  function setCols (state, cols) {\n    setColsToLS(state, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setSettings (state, channel) {\n    Vue.set(state, 'settings', channel)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      state.messages.push({ __connectionStatus: 'offline', timestamp: Date.now() / 1000 })\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      state.messages.push({ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 })\n    }\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    data.forEach((val) => {\n      val['x-flespi-status'] = 'missed'\n    })\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setHistoryMessages,\n    setRTMessages,\n    setMissingMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    limiting,\n    setFilter,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setSettings\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    pages: [],\n    filter: '',\n    settings: {},\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    sortBy: null,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","arr","_Array$isArray","i","arr2","Array","length","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","obj","_Object$defineProperty","enumerable","configurable","writable","defaultCols","Vue","LocalStorage","errorHandler","getParams","state","params","limit","count","filter","from","Math","floor","to","reverse","errorsCheck","data","errors","forEach","errObject","Error","reason","getColsFromLS","colsFromStorage","lsNamespace","oldStore","getItem","name","remove","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","_get","sysColsNeedInitFlags","commit","rootState","needEtc","etc","token","active","set","colsSchema","activeSchema","schemas","_default","cols","map","width","enum","reduce","res","customColsSchemas","isArray","schema","_protocol","col","custom","push","display","needMigration","action","connector","gw","getChannels","fields","protocolIdResp","protocolIdData","result","protocol_id","getChannelProtocols","colsResp","colsData","messageParams","message_parameters","param","enumCol","type","unit","description","schemaCol","locale","Date","match","addition","slice","unshift","timestamp","__dest","DEV","console","log","getChannelsMessages","JSON","stringify","resp","date","now","round","setHours","day","newMessagesCheck","getMessages","isLoadingActive","isLoading","get","start","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","realtimeEnabled","messagesBuffer","subscribeMessagesChannels","message","parse","rh","setInterval","clearInterval","unsubscribeMessagesChannels","lastIndexOffline","reduceRight","index","__connectionStatus","hasNewMessages","getPrevPage","getNextPage","getCols","getHistory","initTime","getMissedMessages","filterHandler","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","pop","rtCount","setColsToLS","customColsSchema","defaultColsSchema","setCols","setOffline","needPostOfflineMessage","offline","setReconnected","setHistoryMessages","setRTMessages","sortBy","fieldName","escapeFlag","setMissingMessages","val","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","setReverse","clear","setActive","id","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setSettings","channel","namespaced","settings","selected","actions","getActions","mutations","getMutations"],"mappings":"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"}