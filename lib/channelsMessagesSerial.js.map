{"version":3,"file":"channelsMessagesSerial.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/channelsMessagesSerial/actions.js","../src/store/modules/channelsMessagesSerial/mutations.js","../src/store/modules/channelsMessagesSerial/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import _get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    let params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      if (state.mode === 0) {\n        params.filter = `${state.filter}`\n      }\n    }\n    if (state.from && (!state.reverse || state.mode === 1)) {\n      if (!state.reverse) {\n        params.from = Math.floor(state.from / 1000)\n      }\n    }\n    if (state.to) {\n      if (state.mode === 1) {\n        state.to = Date.now()\n      }\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        let errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  async function getCols ({ state, commit, rootState }) {\n    commit('reqStart')\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let cols = [],\n          colsFromStorage = LocalStorage.getItem(state.name)\n        if (colsFromStorage && colsFromStorage[state.active] && colsFromStorage[state.active]) {\n          /* remove after sometime 12.07.19 */\n          colsFromStorage[state.active].forEach((col) => {\n            if (col.name === 'timestamp') {\n              let locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n              col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n            }\n          })\n          cols = colsFromStorage[state.active]\n        } else {\n          let protocolIdResp = await Vue.connector.gw.getChannels(state.active, { fields: 'protocol_id' })\n          let protocolIdData = protocolIdResp.data\n          errorsCheck(protocolIdData)\n          if (protocolIdData.result && protocolIdData.result.length && protocolIdData.result[0].protocol_id) {\n            let colsResp = await Vue.connector.gw.getProtocols(protocolIdData.result[0].protocol_id, { fields: 'message_parameters' })\n            let colsData = colsResp.data\n            errorsCheck(colsData)\n            colsData.result[0].message_parameters.forEach(col => {\n              let colItem = {\n                name: col.name,\n                width: 160,\n                display: true,\n                description: col.info\n              }\n              if (colItem.name === 'timestamp') {\n                let locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n                colItem.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n              }\n              cols.push(colItem)\n            })\n          }\n        }\n        commit('setCols', cols)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let params = {\n          reverse: true,\n          count: 1\n        }\n        let resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        let data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        let day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let currentMode = JSON.parse(JSON.stringify(state.mode))\n        let resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(getParams(state)) })\n        /* if mode changed in time request */\n        if (currentMode !== state.mode) { return false }\n        let data = resp.data\n        errorsCheck(data)\n        Vue.set(state, 'isLoading', false)\n        return data.result\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function get ({ state, commit, rootState }) {\n    let messages = await getMessages({ state, commit, rootState }, getParams(state))\n    commit('setMessages', messages)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      let to = Math.floor(_get(state, 'messages[0].timestamp', state.to) - 1)\n      let params = getParams(state)\n      params.to = to\n      params.reverse = true\n      let messages = await getMessages({ state, commit, rootState }, params)\n      commit('prependMessages', messages)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      let from = Math.floor(_get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 1)\n      let params = getParams(state)\n      params.from = from\n      let messages = await getMessages({ state, commit, rootState }, params)\n      commit('appendMessages', messages)\n      return messages.length\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    let limit = state.limit,\n      filter = state.filter\n    commit('setReverse', true)\n    commit('setLimit', count)\n    commit('setFilter', '')\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n    commit('setFilter', filter)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        if (state.mode === 1) {\n          commit('setMessages', [...messagesBuffer])\n        }\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    loopId = initRenderLoop(state, commit)\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', (message) => {\n      if (state.mode === 1) {\n        messagesBuffer.push(JSON.parse(message))\n      }\n    }, { rh: 2 })\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) { clearInterval(loopId) }\n    await Vue.connector.unsubscribeMessagesChannels(state.active, '+')\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let lastIndexOffline = state.messages.reduceRight((result, value, index) => {\n          if (result) {\n            return result\n          }\n          if (value.__connectionStatus === 'offline') {\n            result = index\n          }\n          return result\n        }, 0)\n        let params = {\n          from: !lastIndexOffline ? 0 : Math.floor(state.messages[lastIndexOffline - 1].timestamp) + 1,\n          to: Math.floor(state.messages[lastIndexOffline + 1].timestamp)\n        }\n        let resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        let data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastIndexOffline })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  return {\n    getMessages,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getCols,\n    getHistory,\n    initTime,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","export default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86400000\n    return { from, to }\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n        data[data.length - 1].delimiter = true\n      }\n      Vue.set(state, 'from', Math.floor((data[data.length - 1].timestamp + 1) * 1000))\n      if (state.filter && filterHandler) {\n        data = filterHandler(state.filter, data)\n      }\n      let messages = state.messages\n      if (state.sortBy) {\n        if (data.length > 1) {\n          /* write history for rt mode */\n          messages = messages.concat(data)\n        } else {\n          /* write by sorted field */\n          let message = data[0],\n            fieldName = state.sortBy,\n            length = state.messages.length - 1,\n            index = null,\n            escapeFlag = true\n          if (length > 0) {\n            for (let i = length; i !== 0 || escapeFlag; i--) {\n              if (messages[i][fieldName] > message[fieldName]) {\n                index = i\n                if (i === 0) {\n                  escapeFlag = false\n                }\n              } else {\n                escapeFlag = false\n              }\n            }\n          }\n          if (index) {\n            messages.splice(index, 0, message)\n          } else {\n            messages.push(message)\n          }\n        }\n      } else {\n        messages = messages.concat(data)\n      }\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      if (state.limit && messages.length >= state.limit + (state.limit * 0.1)) { // rt limiting\n        let count = (messages.length - 1) - (state.limit - 1)\n        messages = messages.slice(count)\n        Vue.set(state, 'selected', state.selected.map((index) => index - count))\n      }\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'from', state.to + 1000)\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n      if (state.limit && (state.limit * 3) < messages.length) {\n        let limit = state.limit * 3 // 3 pages in memory\n        let overCount = messages.length - limit\n        messages.splice(messages.length - overCount, overCount)\n      }\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      if (state.limit && (state.limit * 3) < messages.length) {\n        let limit = state.limit * 3 // 3 pages in memory\n        messages.splice(0, messages.length - limit)\n      }\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      let messages = state.messages\n      messages = messages.concat(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'messages', [])\n    }\n  }\n\n  function setMessages (state, data) {\n    if (state.mode === 1) {\n      setRTMessages(state, data)\n    } else {\n      setHistoryMessages(state, data)\n    }\n  }\n\n  function clearMessages (state) {\n    Vue.set(state, 'messages', [])\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      if (state.mode === 1) {\n        if (state.filter) {\n          state.messages.push({ 'x-flespi-filter-prev': state.filter })\n        }\n        if (value) {\n          state.messages.push({ 'x-flespi-filter-next': value })\n        }\n      }\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setMode (state, mode) {\n    switch (mode) {\n      case 0: {\n        let timeObj = state.from ? getFromTo(state.from) : getFromTo()\n        state.from = timeObj.from\n        state.to = timeObj.to\n        clearMessages(state)\n        break\n      }\n      case 1: {\n        let now = Date.now() - 4000\n        state.from = now - 1000\n        state.to = now\n        break\n      }\n    }\n    Vue.set(state, 'mode', mode)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Channels messages')\n    }\n  }\n\n  function setActive (state, id) {\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.mode = null\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeMessagesChannels(state.active)\n  }\n\n  function setCols (state, cols) {\n    let colsFromStorage = LocalStorage.getItem(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.active] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setSettings (state, channel) {\n    Vue.set(state, 'settings', channel)\n  }\n\n  let updateCols = setCols\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'offline', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    data.forEach((val) => {\n      val.__status = 'missed'\n    })\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setMissingMessages,\n    setMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setMode,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setSettings\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  let actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name: name,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    filter: '',\n    settings: {},\n    mode: null,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    reverse: false,\n    cols: [],\n    offline: false,\n    selected: [],\n    sortBy: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","arr","_Array$isArray","i","arr2","Array","length","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","Vue","LocalStorage","errorHandler","getParams","state","params","limit","count","filter","mode","from","reverse","Math","floor","to","Date","now","errorsCheck","data","errors","forEach","errObject","Error","reason","commit","rootState","token","active","set","cols","colsFromStorage","getItem","name","col","locale","match","addition","slice","connector","gw","getChannels","fields","protocolIdResp","protocolIdData","result","protocol_id","getProtocols","colsResp","colsData","message_parameters","colItem","width","display","description","push","DEV","console","log","getChannelsMessages","JSON","stringify","resp","date","round","timestamp","setHours","day","getMessages","currentMode","parse","get","messages","isLoading","_get","messagesBuffer","loopId","initRenderLoop","setInterval","subscribeMessagesChannels","message","rh","clearInterval","unsubscribeMessagesChannels","lastIndexOffline","reduceRight","index","__connectionStatus","getPrevPage","getNextPage","pollingGet","getCols","getHistory","initTime","unsubscribePooling","getMissedMessages","filterHandler","newMessagesInterseptor","getFromTo","val","setMessages","delimiter","sortBy","concat","fieldName","escapeFlag","splice","selected","map","setRTMessages","setHistoryMessages","clearMessages","clearSelected","setCols","setOffline","needPostOfflineMessage","offline","setReconnected","setMissingMessages","__status","prependMessages","overCount","appendMessages","setLimit","setFilter","setMode","timeObj","setFrom","setTo","reqStart","setReverse","clear","setActive","id","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setSettings","channel","namespaced","settings","actions","getActions","mutations","getMutations"],"mappings":"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"}