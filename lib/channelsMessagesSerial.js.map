{"version":3,"file":"channelsMessagesSerial.js","sources":["../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../node_modules/@babel/runtime-corejs2/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/ls.js","../src/store/modules/channelsMessagesSerial/actions.js","../src/store/modules/channelsMessagesSerial/mutations.js","../src/store/modules/channelsMessagesSerial/index.js"],"sourcesContent":["var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Array$isArray = require(\"@babel/runtime-corejs2/core-js/array/is-array\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nvar _isIterable = require(\"@babel/runtime-corejs2/core-js/is-iterable\");\n\nvar _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nfunction _iterableToArray(iter) {\n  if (typeof _Symbol !== \"undefined\" && _isIterable(Object(iter))) return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    },\n    enum: cols.enum\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport { getColsLS, setColsLS } from '../ls'\n\nconst defaultCols = ['timestamp', 'server.timestamp', 'ident', 'position.latitude', 'position.longitude', 'position.altitude', 'position.speed']\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.from) {\n      params.from = Math.floor(state.from / 1000)\n    }\n    if (state.to) {\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  async function migrateCols (active, cols) {\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.reduce((res, col) => {\n            if ((defaultCols.includes(col.name) || (!!col.__dest && col.display))) {\n              res.push({ name: col.name, width: col.width })\n            }\n            return res\n          }, [])\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: cols.reduce((res, col) => {\n            if (!col.custom) {\n              res.push({ name: col.name, width: 150 })\n            }\n            return res\n          }, [])\n        }\n      },\n      enum: {}\n    }\n    if (cols.length) {\n      const processedSchemaByCols = cols.reduce((res, col) => {\n        const isColDefault = defaultCols.includes(col.name)\n        res.isDefault = res.isDefault && ((!col.display && !isColDefault) || (col.display && (isColDefault || !!col.__dest)))\n        res.isProtocol = res.isProtocol && !col.custom\n        if (col.display) {\n          res.schema.push({ name: col.name, width: col.width })\n        }\n        res.enum[col.name] = { ...col }\n        delete res.enum[col.name].display\n        delete res.enum[col.name].width\n        return res\n      }, {\n        schema: [],\n        enum: {},\n        isDefault: true,\n        isProtocol: true\n      })\n      if (!processedSchemaByCols.isDefault || !processedSchemaByCols.isProtocol) {\n        const channelResp = await Vue.connector.gw.getChannels(active, { fields: 'name' })\n        const channelData = channelResp.data\n        errorsCheck(channelData)\n        let name = _get(channelData, 'result[0].name', `Channel-${active}`)\n        name = `${name}[${active}]`\n        schema.activeSchema = name\n        schema.schemas[name] = {\n          name,\n          cols: processedSchemaByCols.schema\n        }\n      }\n      schema.enum = processedSchemaByCols.enum\n    }\n    return schema\n  }\n\n  function getDefaultColsSchema () {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: defaultCols.reduce((res, name) => {\n        res[name] = { name }\n        return res\n      }, {})\n    }\n  }\n\n  async function getCols ({ state, commit, rootState }, sysColsNeedInitFlags) {\n    commit('reqStart')\n    const needEtc = sysColsNeedInitFlags.etc\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n        colsFromStorage = (colsFromStorage && colsFromStorage[state.active])\n        let colsSchema = colsFromStorage || getDefaultColsSchema()\n        const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n          ? colsFromStorage['custom-cols-schemas'] : {}\n        colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n        if (Array.isArray(colsSchema)) {\n          colsSchema = await migrateCols(state.active, colsSchema)\n          colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n          setColsLS(LocalStorage, state.lsNamespace, state.name, state.active, colsSchema)\n        }\n        const needMigration = !colsFromStorage || (\n          _get(colsSchema.enum, 'timestamp.unit', undefined) === undefined\n        ) // type and unit adding 02.09.20\n\n        /* adding sys cols after migration. 12.11.20 */\n        if (_get(colsSchema.enum, 'action.__dest', undefined) === 'action') {\n          delete colsSchema.enum.action\n        }\n        /* adding locale to all timestamps 26.01.21 */\n        const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n        Object.keys(colsSchema.enum).forEach(name => {\n          if (name.match(/timestamp$/)) {\n            const col = colsSchema.enum[name]\n            col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n            col.type = ''\n            col.unit = ''\n          }\n        })\n        /* adding locale to all timestamps end */\n\n        if (needMigration) {\n          const protocolIdResp = await Vue.connector.gw.getChannels(state.active, { fields: 'protocol_id' })\n          const protocolIdData = protocolIdResp.data\n          errorsCheck(protocolIdData)\n          if (protocolIdData.result && protocolIdData.result.length && protocolIdData.result[0].protocol_id) {\n            const colsResp = await Vue.connector.gw.getChannelProtocols(protocolIdData.result[0].protocol_id, { fields: 'message_parameters' })\n            const colsData = colsResp.data\n            errorsCheck(colsData)\n            const messageParams = colsData.result[0].message_parameters\n            /* initing columns by message parameters */\n            colsSchema.schemas._protocol = {\n              name: '_protocol',\n              cols: []\n            }\n            const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n            messageParams.forEach((param) => {\n              const name = param.name\n              const enumCol = {\n                name,\n                type: param.type || '',\n                unit: param.unit || '',\n                description: param.info || ''\n              }\n              const schemaCol = {\n                name,\n                width: 150\n              }\n              if (name.match(/timestamp$/)) {\n                enumCol.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n                enumCol.type = ''\n                enumCol.unit = ''\n                schemaCol.width = 190\n                if (name === 'timestamp') {\n                  colsSchema.schemas._protocol.cols.unshift(schemaCol)\n                  colsSchema.enum.timestamp = enumCol\n                  return\n                }\n              }\n              colsSchema.schemas._protocol.cols.push(schemaCol)\n              colsSchema.enum[name] = enumCol\n            })\n          }\n          if (needEtc) {\n            colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n            colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n          }\n          colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n        }\n        commit('setCols', colsSchema)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1\n        }\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0]['server.timestamp'] * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    let result = []\n    if (rootState.token && state.active) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Math.floor(Date.now() / 1000)\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Math.floor(Date.now() / 1000)\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Math.floor(Date.now() / 1000)\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = Math.floor(_get(state, 'messages[0][\"server.timestamp\"]', state.to) - 1)\n      const params = getParams(state)\n      // params.to = to\n      /* api container interface fix */\n      params.filter = `server.timestamp<=${to}${params.filter ? `,${params.filter}` : ''}`\n      params.to = to + 2\n      /* api container interface fix */\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getMessages({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = Math.floor(_get(state, `messages[${state.messages.length - 1}]['server.timestamp']`, state.from) + 1)\n      const params = getParams(state)\n      let messagesCount = 0\n      // params.from = from\n      /* api container interface fix */\n      params.filter = `server.timestamp>=${from}${params.filter ? `,${params.filter}` : ''}`\n      params.to = from - 2\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = Math.floor(start / 1000)\n        params.to = Math.floor(stop / 1000)\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2 })\n    state.realtimeEnabled = true\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    await Vue.connector.unsubscribeMessagesChannels(state.active, '+')\n    state.realtimeEnabled = false\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          from: start,\n          to: end\n        }\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function newMessagesCheck ({ state }) {\n    state.hasNewMessages = false\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2 })\n  }\n\n  return {\n    getMessages,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getCols,\n    getHistory,\n    initTime,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      messages[index]['x-flespi-message-key'] = messagesKeyPointer++\n    })\n  }\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      if (state.filter && filterHandler) {\n        data = filterHandler(state.filter, data)\n      }\n      messagesIndexing(data)\n      const messages = state.messages\n      if (state.sortBy) {\n        /* write by sorted field */\n        const message = data[0],\n          fieldName = state.sortBy,\n          length = state.messages.length - 1\n        let index = null,\n          escapeFlag = true\n        if (length > 0) {\n          for (let i = length; i !== 0 || escapeFlag; i--) {\n            if (messages[i][fieldName] > message[fieldName]) {\n              index = i\n              if (i === 0) {\n                escapeFlag = false\n              }\n            } else {\n              escapeFlag = false\n            }\n          }\n        }\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        if (index) {\n          messages.splice(index, 0, ...data)\n        } else {\n          messages.splice(messages.length, 0, ...data)\n        }\n      } else {\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        messages.splice(messages.length, 0, ...data)\n      }\n      limiting(state, { type: 'rt', count: data.length })\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Channels messages')\n    }\n  }\n\n  function setActive (state, id) {\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeMessagesChannels(state.active)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.active, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setSettings (state, channel) {\n    Vue.set(state, 'settings', channel)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Math.floor(Date.now() / 1000),\n      lastMessageIndex: state.messages.length - 1\n    }\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Math.floor(Date.now() / 1000)\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setHistoryMessages,\n    setRTMessages,\n    setMissingMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    limiting,\n    setFilter,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setSettings\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    pages: [],\n    filter: '',\n    settings: {},\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    sortBy: null,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["module","obj","key","value","_Object$defineProperty","enumerable","configurable","writable","exports","arr","len","length","i","arr2","Array","_Array$isArray","arrayLikeToArray","iter","_Symbol","_isIterable","Object","_Array$from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","getColsLS","LocalStorage","lsNamespace","lsRouteToItem","colsFromStorage","lsItemName","lsPath","split","shift","join","appStorage","getItem","get","setColsLS","active","cols","customColsSchema","schemas","_default","_protocol","_unsaved","defaultColsSchema","activeSchema","enum","set","defaultCols","Vue","errorHandler","getParams","state","params","limit","count","filter","from","Math","floor","to","reverse","errorsCheck","data","errors","forEach","errObject","Error","reason","schema","reduce","res","col","includes","__dest","display","push","width","custom","processedSchemaByCols","isColDefault","isDefault","isProtocol","connector","gw","getChannels","fields","channelResp","channelData","_get","sysColsNeedInitFlags","commit","rootState","needEtc","etc","token","colsSchema","map","customColsSchemas","isArray","migrateCols","needMigration","action","locale","Date","match","keys","addition","type","unit","protocolIdResp","protocolIdData","result","protocol_id","getChannelProtocols","colsResp","colsData","messageParams","message_parameters","param","enumCol","description","schemaCol","unshift","timestamp","DEV","console","log","getChannelsMessages","JSON","stringify","resp","date","now","round","val","day","setHours","newMessagesCheck","getMessages","isLoadingActive","isLoading","start","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","realtimeEnabled","messagesBuffer","subscribeMessagesChannels","message","parse","rh","setInterval","clearInterval","unsubscribeMessagesChannels","offline","end","lastMessageIndex","index","hasNewMessages","getPrevPage","getNextPage","getCols","getHistory","initTime","getMissedMessages","filterHandler","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","removeMessagesCount","pages","pagesCount","pop","rtCount","setCols","setOffline","setReconnected","clearOfflineState","setHistoryMessages","setRTMessages","sortBy","fieldName","escapeFlag","setMissingMessages","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","setReverse","clear","setActive","id","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setSettings","channel","namespaced","settings","selected","actions","getActions","mutations","getMutations"],"mappings":"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"}