{"version":3,"file":"channelsMessagesSerial.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/channelsMessagesSerial/actions.js","../src/store/modules/channelsMessagesSerial/mutations.js","../src/store/modules/channelsMessagesSerial/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import _get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    let params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      if (state.mode === 0) {\n        params.filter = `${state.filter}`\n      }\n    }\n    if (state.from && (!state.reverse || state.mode === 1)) {\n      if (!state.reverse) {\n        params.from = Math.floor(state.from / 1000)\n      }\n    }\n    if (state.to) {\n      if (state.mode === 1) {\n        state.to = Date.now()\n      }\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        let errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  async function getCols ({ state, commit, rootState }, sysColsNeedInitFlags) {\n    commit('reqStart')\n    const needActions = sysColsNeedInitFlags.actions\n    const needEtc = sysColsNeedInitFlags.etc\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let cols = [],\n          colsFromStorage = LocalStorage.getItem(state.name)\n        if (colsFromStorage && colsFromStorage[state.active] && colsFromStorage[state.active]) {\n          /* remove after sometime 12.07.19 */\n          colsFromStorage[state.active].forEach((col) => {\n            if (col.name === 'timestamp') {\n              let locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n              col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n            }\n          })\n          cols = colsFromStorage[state.active]\n          /* adding sys cols after migration. 30.01.20 */\n          if (!cols[0].__dest && !cols[cols.length - 1].__dest) {\n            cols.unshift({ name: 'actions', width: 50, display: needActions, __dest: 'action' })\n            cols.push({ name: 'etc', width: 150, display: needEtc, __dest: 'etc' })\n          }\n        } else {\n          let protocolIdResp = await Vue.connector.gw.getChannels(state.active, { fields: 'protocol_id' })\n          let protocolIdData = protocolIdResp.data\n          errorsCheck(protocolIdData)\n          if (protocolIdData.result && protocolIdData.result.length && protocolIdData.result[0].protocol_id) {\n            let colsResp = await Vue.connector.gw.getProtocols(protocolIdData.result[0].protocol_id, { fields: 'message_parameters' })\n            let colsData = colsResp.data\n            errorsCheck(colsData)\n            colsData.result[0].message_parameters.forEach(col => {\n              let colItem = {\n                name: col.name,\n                width: 160,\n                display: state.defaultColsNames.includes(col.name),\n                description: col.info\n              }\n              if (colItem.name === 'timestamp') {\n                let locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n                colItem.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n              }\n              cols.push(colItem)\n            })\n          }\n          cols.unshift({ name: 'actions', width: 50, display: needActions, __dest: 'action' })\n          cols.push({ name: 'etc', width: 150, display: needEtc, __dest: 'etc' })\n        }\n        commit('setCols', cols)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let params = {\n          reverse: true,\n          count: 1\n        }\n        let resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        let data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        let day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let currentMode = JSON.parse(JSON.stringify(state.mode))\n        let resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(getParams(state)) })\n        /* if mode changed in time request */\n        if (currentMode !== state.mode) { return false }\n        let data = resp.data\n        errorsCheck(data)\n        Vue.set(state, 'isLoading', false)\n        return data.result\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function get ({ state, commit, rootState }) {\n    let messages = await getMessages({ state, commit, rootState }, getParams(state))\n    commit('setMessages', messages)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      let to = Math.floor(_get(state, 'messages[0].timestamp', state.to) - 1)\n      let params = getParams(state)\n      params.to = to\n      params.reverse = true\n      let messages = await getMessages({ state, commit, rootState }, params)\n      commit('prependMessages', messages)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      let from = Math.floor(_get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 1)\n      let params = getParams(state)\n      params.from = from\n      let messages = await getMessages({ state, commit, rootState }, params)\n      commit('appendMessages', messages)\n      return messages.length\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    let limit = state.limit,\n      filter = state.filter\n    commit('setReverse', true)\n    commit('setLimit', count)\n    commit('setFilter', '')\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n    commit('setFilter', filter)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        if (state.mode === 1) {\n          commit('setMessages', [...messagesBuffer])\n        }\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    loopId = initRenderLoop(state, commit)\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', (message) => {\n      if (state.mode === 1) {\n        messagesBuffer.push(JSON.parse(message))\n      }\n    }, { rh: 2 })\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) { clearInterval(loopId) }\n    await Vue.connector.unsubscribeMessagesChannels(state.active, '+')\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let lastIndexOffline = state.messages.reduceRight((result, value, index) => {\n          if (result) {\n            return result\n          }\n          if (value.__connectionStatus === 'offline') {\n            result = index\n          }\n          return result\n        }, 0)\n        let params = {\n          from: !lastIndexOffline ? 0 : Math.floor(state.messages[lastIndexOffline - 1].timestamp) + 1,\n          to: Math.floor(state.messages[lastIndexOffline + 1].timestamp)\n        }\n        let resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(params) })\n        let data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastIndexOffline })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  return {\n    getMessages,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getCols,\n    getHistory,\n    initTime,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","export default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86400000\n    return { from, to }\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n        data[data.length - 1].delimiter = true\n      }\n      Vue.set(state, 'from', Math.floor((data[data.length - 1].timestamp + 1) * 1000))\n      if (state.filter && filterHandler) {\n        data = filterHandler(state.filter, data)\n      }\n      let messages = state.messages\n      if (state.sortBy) {\n        if (data.length > 1) {\n          /* write history for rt mode */\n          messages = messages.concat(data)\n        } else {\n          /* write by sorted field */\n          let message = data[0],\n            fieldName = state.sortBy,\n            length = state.messages.length - 1,\n            index = null,\n            escapeFlag = true\n          if (length > 0) {\n            for (let i = length; i !== 0 || escapeFlag; i--) {\n              if (messages[i][fieldName] > message[fieldName]) {\n                index = i\n                if (i === 0) {\n                  escapeFlag = false\n                }\n              } else {\n                escapeFlag = false\n              }\n            }\n          }\n          if (index) {\n            messages.splice(index, 0, message)\n          } else {\n            messages.push(message)\n          }\n        }\n      } else {\n        messages = messages.concat(data)\n      }\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      if (state.limit && messages.length >= state.limit + (state.limit * 0.1)) { // rt limiting\n        let count = (messages.length - 1) - (state.limit - 1)\n        messages = messages.slice(count)\n        Vue.set(state, 'selected', state.selected.map((index) => index - count))\n      }\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'from', state.to + 1000)\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n      if (state.limit && (state.limit * 3) < messages.length) {\n        let limit = state.limit * 3 // 3 pages in memory\n        let overCount = messages.length - limit\n        messages.splice(messages.length - overCount, overCount)\n      }\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      if (state.limit && (state.limit * 3) < messages.length) {\n        let limit = state.limit * 3 // 3 pages in memory\n        messages.splice(0, messages.length - limit)\n      }\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      let messages = state.messages\n      messages = messages.concat(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'messages', [])\n    }\n  }\n\n  function setMessages (state, data) {\n    if (state.mode === 1) {\n      setRTMessages(state, data)\n    } else {\n      setHistoryMessages(state, data)\n    }\n  }\n\n  function clearMessages (state) {\n    Vue.set(state, 'messages', [])\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      if (state.mode === 1) {\n        if (state.filter) {\n          state.messages.push({ 'x-flespi-filter-prev': state.filter })\n        }\n        if (value) {\n          state.messages.push({ 'x-flespi-filter-next': value })\n        }\n      }\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setMode (state, mode) {\n    switch (mode) {\n      case 0: {\n        let timeObj = state.from ? getFromTo(state.from) : getFromTo()\n        state.from = timeObj.from\n        state.to = timeObj.to\n        clearMessages(state)\n        break\n      }\n      case 1: {\n        let now = Date.now() - 4000\n        state.from = now - 1000\n        state.to = now\n        break\n      }\n    }\n    Vue.set(state, 'mode', mode)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Channels messages')\n    }\n  }\n\n  function setActive (state, id) {\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.mode = null\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeMessagesChannels(state.active)\n  }\n\n  function setCols (state, cols) {\n    let colsFromStorage = LocalStorage.getItem(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.active] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setDefaultCols (state) {\n    state.cols.forEach((col, index) => {\n      if (col.__dest) { return }\n      if (state.defaultColsNames.includes(col.name)) {\n        Vue.set(state.cols[index], 'display', true)\n      } else {\n        Vue.set(state.cols[index], 'display', false)\n      }\n    })\n    updateCols(state, state.cols)\n  }\n\n  function setSettings (state, channel) {\n    Vue.set(state, 'settings', channel)\n  }\n\n  let updateCols = setCols\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'offline', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    data.forEach((val) => {\n      val.__status = 'missed'\n    })\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setMissingMessages,\n    setMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setMode,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setDefaultCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setSettings\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  let actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name: name,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    filter: '',\n    settings: {},\n    mode: null,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    reverse: false,\n    cols: [],\n    defaultColsNames: ['timestamp', 'server.timestamp', 'ident', 'position.latitude', 'position.longitude', 'position.altitude', 'position.speed'],\n    offline: false,\n    selected: [],\n    sortBy: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","arr","_Array$isArray","i","arr2","Array","length","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","Vue","LocalStorage","errorHandler","getParams","state","params","limit","count","filter","mode","from","reverse","Math","floor","to","Date","now","errorsCheck","data","errors","forEach","errObject","Error","reason","sysColsNeedInitFlags","commit","rootState","needActions","actions","needEtc","etc","token","active","set","cols","colsFromStorage","getItem","name","col","locale","match","addition","slice","__dest","unshift","width","display","push","connector","gw","getChannels","fields","protocolIdResp","protocolIdData","result","protocol_id","getProtocols","colsResp","colsData","message_parameters","colItem","defaultColsNames","includes","description","DEV","console","log","getChannelsMessages","JSON","stringify","resp","date","round","timestamp","setHours","day","getMessages","currentMode","parse","get","messages","isLoading","_get","messagesBuffer","loopId","initRenderLoop","setInterval","subscribeMessagesChannels","message","rh","clearInterval","unsubscribeMessagesChannels","lastIndexOffline","reduceRight","index","__connectionStatus","getPrevPage","getNextPage","pollingGet","getCols","getHistory","initTime","unsubscribePooling","getMissedMessages","filterHandler","newMessagesInterseptor","getFromTo","val","setMessages","delimiter","sortBy","concat","fieldName","escapeFlag","splice","selected","map","setRTMessages","setHistoryMessages","clearMessages","clearSelected","setCols","updateCols","setOffline","needPostOfflineMessage","offline","setReconnected","setMissingMessages","__status","prependMessages","overCount","appendMessages","setLimit","setFilter","setMode","timeObj","setFrom","setTo","reqStart","setReverse","clear","setActive","id","setDefaultCols","setSelected","indexes","setSortBy","field","clearSortBy","setSettings","channel","namespaced","settings","getActions","mutations","getMutations"],"mappings":"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"}