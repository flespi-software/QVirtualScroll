{"version":3,"file":"containersMessages.js","sources":["../src/store/modules/ls.js","../src/store/modules/containersMessages/actions.js","../src/store/modules/containersMessages/mutations.js","../src/infrastructure/logger.js","../src/store/modules/containersMessages/index.js"],"sourcesContent":["import _get from 'lodash/get'\nimport _set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = _get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    _set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport { getColsLS, setColsLS } from '../ls'\n\nconst defaultCols = ['key', 'etc']\nconst keyfield = 'key'\n\nexport default function ({ Vue, LocalStorage, errorHandler, logger }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.max_count = state.limit\n    }\n    if (state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.from) {\n      params.left_key = state.from / 1000\n    }\n    if (state.to) {\n      params.right_key = state.to / 1000\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function errorsCheck (commit, data) {\n    if (data.errors) {\n      commit('reqError', data.errors)\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    } else {\n      commit('reqFullfiled')\n    }\n  }\n\n  function getDefaultEnum () {\n    const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n    return defaultCols.reduce((res, name) => {\n      res[name] = { name }\n      if (name.match(/timestamp$/)) {\n        res[name].addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n        res[name].type = ''\n        res[name].unit = ''\n      }\n      return res\n    }, {})\n  }\n\n  function getDefaultColsSchema () {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: getDefaultEnum()\n    }\n  }\n\n  async function getCols ({ state, commit }) {\n    let colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n    const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n      ? colsFromStorage['custom-cols-schemas'] : {}\n    colsFromStorage = colsFromStorage[state.active]\n    const colsSchema = colsFromStorage || getDefaultColsSchema()\n    if (!colsSchema.enum) {\n      colsSchema.enum = getDefaultEnum()\n    }\n    colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n    // const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n    // counters.forEach(counter => {\n    //   const name = counter.name\n    //   const enumCol = {\n    //     name,\n    //     description: `${counter.name}[${counter.type}]`\n    //   }\n    //   const schemaCol = {\n    //     name,\n    //     width: 100\n    //   }\n    //   if (name.match(/timestamp$/) || name === 'begin' || name === 'end') {\n    //     enumCol.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n    //     enumCol.type = ''\n    //     enumCol.unit = ''\n    //     schemaCol.width = 190\n    //   }\n    //   colsSchema.schemas._protocol.cols.push(schemaCol)\n    //   colsSchema.enum[name] = enumCol\n    // })\n    // colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    // !colsFromStorage && colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n    commit('setCols', colsSchema)\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999.999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          max_count: 1,\n          fields: keyfield + ''\n        }\n        const resp = await Vue.connector.storage.getContainersMessages(state.active, { data: JSON.stringify(params) })\n        commit('reqStart', { endpoint: 'getContainersMessages-initTime', active: state.active, data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0][keyfield] * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    let result = []\n    if (rootState.token && state.active) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.storage.getContainersMessages(state.active, { data: JSON.stringify(params) })\n        commit('reqStart', { endpoint: 'getContainersMessages', active: state.active, data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function getMessagesByInitTimestamp ({ state, commit, rootState }, initTimestamp) {\n    const params = getParams(state)\n    const beforeMessagesParams = {\n      ...params,\n      left_key: state.from / 1000,\n      right_key: initTimestamp,\n      reverse: true,\n      max_count: state.limit / 2\n    }\n    const beforeMessages = await getMessages({ state, commit, rootState }, beforeMessagesParams)\n    const afterMessagesParams = {\n      left_key: initTimestamp + 0.000001,\n      right_key: state.to / 1000,\n      max_count: state.limit - beforeMessages.length\n    }\n    const afterMessages = await getMessages({ state, commit, rootState }, afterMessagesParams)\n    const messages = [...beforeMessages.reverse(), ...afterMessages]\n    return messages\n  }\n\n  async function get ({ state, commit, rootState }, initTimestamp) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      if (loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      const start = (Date.now() + 0.000999) / 1000\n      let messagesCount = 0\n      let messages = []\n      const params = getParams(state)\n      if (initTimestamp) {\n        messages = await getMessagesByInitTimestamp({ state, commit, rootState }, initTimestamp)\n      } else {\n        messages = await getMessages({ state, commit, rootState }, params)\n      }\n      messagesCount += messages.length\n      const now = (Date.now() + 0.000999) / 1000\n      const needRT = (params.right_key >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        if (initTimestamp) {\n          const stop = (Date.now() + 0.000999) / 1000\n          const params = getParams(state)\n          params.left_key = start\n          params.right_key = stop\n          const missedMessages = await getMessages({ state, commit, rootState }, params)\n          messagesCount += missedMessages.length\n          messages.splice(0, 0, ...missedMessages)\n        }\n      } else if ((params.right_key < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = _get(state, 'messages[0].' + keyfield, state.to) - 0.000001\n      const params = getParams(state)\n      params.right_key = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getMessages({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = _get(state, `messages[${state.messages.length - 1}].${keyfield}`, state.from) + 0.000001\n      const params = getParams(state)\n      let messagesCount = 0\n      params.left_key = from\n      const messages = await getMessages({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.right_key > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.left_key = start / 1000\n        params.right_key = stop / 1000\n        const missedMessages = await getMessages({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}` : undefined\n    await Vue.connector.subscribeMessagesDevices(state.active, (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, prefix: filter })\n    state.realtimeEnabled = true\n    logger.info(`subscribed to messagesDevices ${state.active} ${filter || ''}`)\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}` : undefined\n    await Vue.connector.unsubscribeMessagesDevices(state.active, undefined, { prefix: filter })\n    state.realtimeEnabled = false\n    logger.info(`unsubscribed to messagesDevices ${state.active} ${filter || ''}`)\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          left_key: start,\n          right_key: end\n        }\n        if (state.filter) { params.data.filter = state.filter }\n        const resp = await Vue.connector.storage.getContainersMessages(state.active, { data: JSON.stringify(params) })\n        commit('reqStart', { endpoint: 'getContainersMessages', active: state.active, data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function newMessagesCheck ({ state }) {\n    state.hasNewMessages = false\n    await Vue.connector.subscribeMessagesDevices(state.active, () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2 })\n    logger.info(`newMessagesCheck subscribed to messagesDevice ${state.active}`)\n  }\n\n  return {\n    getMessages,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getCols,\n    getHistory,\n    getMessagesByInitTimestamp,\n    initTime,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor, logger }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      Object.defineProperty(messages[index], 'x-flespi-message-key', {\n        value: messagesKeyPointer++,\n        enumerable: false\n      })\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      messagesIndexing(data)\n      const messages = state.messages\n      if (state.sortBy) {\n        /* write by sorted field */\n        const message = data[0],\n          fieldName = state.sortBy,\n          length = state.messages.length - 1\n        let index = null,\n          escapeFlag = true\n        if (length > 0) {\n          for (let i = length; i !== 0 || escapeFlag; i--) {\n            if (messages[i][fieldName] > message[fieldName]) {\n              index = i\n              if (i === 0) {\n                escapeFlag = false\n              }\n            } else {\n              escapeFlag = false\n            }\n          }\n        }\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        if (index) {\n          messages.splice(index, 0, ...data)\n        } else {\n          messages.splice(messages.length, 0, ...data)\n        }\n      } else {\n        newMessagesInterseptor && newMessagesInterseptor(data)\n        messages.splice(messages.length, 0, ...data)\n      }\n      limiting(state, { type: 'rt', count: data.length })\n      logger.info(`setRTMessages: length: ${data.length}`)\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n    logger.info(`prependMessages: length: ${data.length}`)\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n    logger.info(`appendMessages: length: ${data.length}`)\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n    logger.info(`setHistoryMessages: length: ${data.length}, reverse:${state.reverse}`)\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n    logger.info(`clearMessages`)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n    logger.info(`limiting: ${type} - count: ${count}`)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n    logger.info(`setFilter: ${value}`)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n    logger.info(`setFrom: ${from}`)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n    logger.info(`setTo: ${to}`)\n  }\n\n  function reqStart (state, params) {\n    logger.info(`reqStart: ${JSON.stringify(params)}`)\n  }\n\n  function reqFullfiled () {\n    logger.info(`reqFullfiled`)\n  }\n\n  function reqError (state, error) {\n    logger.info(`reqError: ${JSON.stringify(error)}`)\n  }\n\n  function setActive (state, id) {\n    Vue.set(state, 'active', id)\n    logger.info(`setActive: ${id}`)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n    logger.info(`setReverse: ${val}`)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeMessagesDevices(state.active)\n    logger.info(`clear module`)\n    logger.info(`unsubscribeMessagesDevices ${state.active}`)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.active, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setSettings (state, device) {\n    Vue.set(state, 'settings', device)\n    logger.info(`setSettings: ${device}`)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Date.now() / 1000,\n      lastMessageIndex: state.messages.length - 1\n    }\n    logger.info(`setOffline`)\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Date.now() / 1000\n    logger.info(`setReconnected`)\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n    logger.info(`setMissingMessages: ${data.length}`)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setMissingMessages,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    limiting,\n    setFilter,\n    setFrom,\n    setTo,\n    reqStart,\n    reqFullfiled,\n    reqError,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setSettings\n  }\n}\n","export class Logger {\n  constructor (name = 'ModuleLogger') {\n    this.name = `[${name}]`\n  }\n\n  extendName (suffix) {\n    return new Logger(`${this.name}[${suffix}]`)\n  }\n\n  info () {\n    console.info(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n\n  error () {\n    console.error(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n\n  warn () {\n    console.warn(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\nimport Vue from 'vue'\nimport { Logger } from '../../../infrastructure/logger'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const logger = Vue.$logger ? Vue.$logger.extendName(name) : new Logger(name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler, logger }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor, logger })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    pages: [],\n    filter: '',\n    settings: {},\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    sortBy: null,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["getColsLS","LocalStorage","lsNamespace","name","colsFromStorage","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","getItem","_get","defaultCols","keyfield","getActions","Vue","errorHandler","logger","getParams","state","params","limit","max_count","filter","from","left_key","to","right_key","reverse","errorsCheck","commit","data","errors","forEach","error","errObject","Error","reason","getDefaultEnum","locale","Date","toString","match","reduce","res","addition","slice","type","unit","async","getMessages","rootState","result","token","active","isLoadingActive","isLoading","set","resp","connector","storage","getContainersMessages","JSON","stringify","endpoint","e","DEV","console","log","getMessagesByInitTimestamp","initTimestamp","beforeMessagesParams","beforeMessages","afterMessagesParams","length","afterMessages","get","loopId","unsubscribePooling","start","now","messagesCount","messages","needRT","startRTRender","pollingGet","stop","missedMessages","splice","count","realtimeEnabled","messagesBuffer","encodeURIComponent","undefined","subscribeMessagesDevices","message","push","parse","rh","prefix","info","setInterval","initRenderLoop","clearInterval","unsubscribeMessagesDevices","getPrevPage","getNextPage","Math","floor","getCols","customColsSchemas","colsSchema","activeSchema","schemas","_default","cols","map","width","enum","etc","__dest","getHistory","initTime","fields","date","round","day","val","setHours","getFromTo","hasNewMessages","newMessagesCheck","getMissedMessages","end","lastMessageIndex","offline","index","getMutations","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","Object","defineProperty","value","enumerable","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","pop","rtCount","setCols","customColsSchema","defaultColsSchema","_protocol","_unsaved","splitSchemas","_set","setColsLS","setOffline","setReconnected","clearOfflineState","setMissingMessages","setHistoryMessages","setRTMessages","sortBy","fieldName","escapeFlag","i","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","reqFullfiled","reqError","setReverse","clear","setActive","id","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setSettings","device","Logger","constructor","this","extendName","suffix","Array","arguments","msg","warn","$logger","namespaced","settings","selected","actions","mutations"],"mappings":"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"}