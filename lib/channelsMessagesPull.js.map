{"version":3,"file":"channelsMessagesPull.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/channelsMessagesPull/actions.js","../src/store/modules/channelsMessagesPull/mutations.js","../src/store/modules/channelsMessagesPull/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import _get from 'lodash/get'\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.limit_count = state.limit\n    }\n    if (state.from) {\n      params.curr_key = state.from\n    }\n    return params\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      /* removing old store 12.03.20 */\n      const oldStore = LocalStorage.getItem(state.name)\n      if (oldStore) {\n        colsFromStorage = oldStore\n        LocalStorage.remove(state.name)\n      }\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName)\n      colsFromStorage = _get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name) || colsFromStorage\n    }\n    return colsFromStorage\n  }\n\n  async function getCols ({ state, commit, rootState }, sysColsNeedInitFlags) {\n    commit('reqStart')\n    const needActions = sysColsNeedInitFlags.actions\n    const needEtc = sysColsNeedInitFlags.etc\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let cols = []\n        const colsFromStorage = getColsFromLS(state)\n        if (colsFromStorage && colsFromStorage[state.active] && colsFromStorage[state.active]) {\n          /* remove after sometime 12.07.19 */\n          colsFromStorage[state.active].forEach((col) => {\n            if (col.name === 'timestamp') {\n              const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n              col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n            }\n          })\n          cols = colsFromStorage[state.active]\n          /* adding sys cols after migration. 30.01.20 */\n          if (!cols[0].__dest && !cols[cols.length - 1].__dest) {\n            cols.unshift({ name: 'actions', width: 50, display: needActions, __dest: 'action' })\n            cols.push({ name: 'etc', width: 150, display: needEtc, __dest: 'etc' })\n          }\n        } else {\n          const protocolIdResp = await Vue.connector.gw.getChannels(state.active, { fields: 'protocol_id' })\n          const protocolIdData = protocolIdResp.data\n          errorsCheck(protocolIdData)\n          if (protocolIdData.result && protocolIdData.result.length && protocolIdData.result[0].protocol_id) {\n            const colsResp = await Vue.connector.gw.getProtocols(protocolIdData.result[0].protocol_id, { fields: 'message_parameters' })\n            const colsData = colsResp.data\n            errorsCheck(colsData)\n            colsData.result[0].message_parameters.forEach(col => {\n              const colItem = {\n                name: col.name,\n                width: 160,\n                display: state.defaultColsNames.includes(col.name),\n                description: col.info\n              }\n              if (colItem.name === 'timestamp') {\n                const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n                colItem.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n              }\n              cols.push(colItem)\n            })\n          }\n          cols.unshift({ name: 'actions', width: 50, display: needActions, __dest: 'action' })\n          cols.push({ name: 'etc', width: 150, display: needEtc, __dest: 'etc' })\n        }\n        commit('setCols', cols)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getData ({ state, commit, rootState }) {\n    let data = {}\n    if (rootState.token && state.active) {\n      try {\n        const resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(getParams(state)) })\n        data = resp.data\n        errorsCheck(data)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        data = {\n          errors: [e]\n        }\n      }\n    }\n    return data\n  }\n\n  async function get ({ state, commit, rootState }) {\n    commit('reqStart')\n    Vue.set(state, 'isLoading', true)\n    const data = await getData({ state, commit, rootState })\n    if (data.result) {\n      commit('setMessages', data.result)\n      commit('setTo', data.next_key)\n    }\n    Vue.set(state, 'isLoading', false)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        if (state.mode === 1) {\n          commit('setMessages', [...messagesBuffer])\n        }\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    commit('reqStart')\n    const data = await getData({ state, commit, rootState })\n    if (data.result) {\n      commit('setMessages', data.result)\n      commit('setTo', data.next_key)\n    }\n    loopId = initRenderLoop(state, commit)\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', (message) => {\n      if (state.mode === 1) {\n        messagesBuffer.push(JSON.parse(message))\n      } else {\n        commit('setNewMessagesCount', state.newMessagesCount + 1)\n        commit('setRtMessagesBuff', JSON.parse(message))\n      }\n    }, { rh: 2 })\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) { clearInterval(loopId) }\n    await Vue.connector.unsubscribeMessagesChannels(state.active, '+')\n  }\n\n  return {\n    get,\n    pollingGet,\n    getCols,\n    unsubscribePooling\n  }\n}\n","import get from 'lodash/get'\nimport set from 'lodash/set'\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function setMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      if (state.mode === 1) {\n        if (state.filter && filterHandler) {\n          data = filterHandler(state.filter, data)\n        }\n      }\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      let messages = state.messages.concat(data)\n      if (state.limit && state.mode === 1 && messages.length >= state.limit + (state.limit * 0.1)) { // rt limiting\n        const count = (messages.length - 1) - (state.limit - 1)\n        messages = messages.slice(count)\n        Vue.set(state, 'selected', state.selected.map((index) => index - count))\n      }\n      Vue.set(state, 'messages', messages)\n    }\n  }\n\n  function clearMessages (state) {\n    Vue.set(state, 'messages', [])\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      if (state.mode === 1) {\n        if (state.filter) {\n          state.messages.push({ 'x-flespi-filter-prev': state.filter })\n        }\n        if (value) {\n          state.messages.push({ 'x-flespi-filter-next': value })\n        }\n      }\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setMode (state, mode) {\n    switch (mode) {\n      case 0: {\n        state.from = 0\n        clearMessages(state)\n        break\n      }\n      case 1: {\n        const now = Date.now()\n        state.from = Math.ceil((now - 4000 - 1000) / 1000)\n        state.to = state.from\n        clearMessages(state)\n        state.newMessagesCount = 0\n        Vue.set(state, 'messages', state.rtMessagesBuff)\n        clearRtMessagesBuff(state)\n        break\n      }\n    }\n    Vue.set(state, 'mode', mode)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Channels messages')\n    }\n  }\n\n  function setActive (state, id) {\n    state.newMessagesCount = 0\n    Vue.set(state, 'active', id)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.mode = null\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    await Vue.connector.unsubscribeMessagesChannels(state.active, '+')\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName)\n      colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name) || colsFromStorage\n    }\n    return colsFromStorage\n  }\n\n  function setColsToLS (state, cols) {\n    const colsFromStorage = getColsFromLS(state)\n    colsFromStorage[state.active] = cols\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName)\n      set(appStorage, lsRouteToItem, colsFromStorage)\n      LocalStorage.set(lsItemName, appStorage)\n    } else {\n      LocalStorage.set(state.name, colsFromStorage)\n    }\n  }\n\n  function setCols (state, cols) {\n    setColsToLS(state, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setDefaultCols (state) {\n    state.cols.forEach((col, index) => {\n      if (col.__dest) { return }\n      if (state.defaultColsNames.includes(col.name)) {\n        Vue.set(state.cols[index], 'display', true)\n      } else {\n        Vue.set(state.cols[index], 'display', false)\n      }\n    })\n    updateCols(state, state.cols)\n  }\n\n  function setNewMessagesCount (state, count) {\n    Vue.set(state, 'newMessagesCount', count)\n  }\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'offline', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = false\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setRtMessagesBuff (state, message) {\n    if (state.rtMessagesBuff.length >= 100) {\n      state.rtMessagesBuff.splice(0, 1)\n    }\n    state.rtMessagesBuff.push(message)\n  }\n\n  function clearRtMessagesBuff (state) {\n    Vue.set(state, 'rtMessagesBuff', [])\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setMode,\n    setFrom,\n    setTo,\n    reqStart,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setDefaultCols,\n    setNewMessagesCount,\n    setSelected,\n    clearSelected,\n    setRtMessagesBuff,\n    clearRtMessagesBuff\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    filter: '',\n    mode: null,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    cols: [],\n    defaultColsNames: ['timestamp', 'server.timestamp', 'ident', 'position.latitude', 'position.longitude', 'position.altitude', 'position.speed'],\n    newMessagesCount: 0,\n    offline: false,\n    selected: [],\n    rtMessagesBuff: []\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","arr","_Array$isArray","i","arr2","Array","length","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","Vue","LocalStorage","errorHandler","errorsCheck","data","errors","forEach","errObject","Error","reason","getColsFromLS","state","colsFromStorage","lsNamespace","oldStore","getItem","name","remove","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","_get","sysColsNeedInitFlags","commit","rootState","needActions","actions","needEtc","etc","token","active","set","cols","col","locale","Date","match","addition","slice","__dest","unshift","width","display","push","connector","gw","getChannels","fields","protocolIdResp","protocolIdData","result","protocol_id","getProtocols","colsResp","colsData","message_parameters","colItem","defaultColsNames","includes","description","DEV","console","log","getData","getChannelsMessages","JSON","stringify","params","limit","limit_count","from","curr_key","resp","next_key","messagesBuffer","loopId","initRenderLoop","setInterval","mode","subscribeMessagesChannels","message","parse","newMessagesCount","rh","clearInterval","unsubscribeMessagesChannels","get","pollingGet","getCols","unsubscribePooling","filterHandler","newMessagesInterseptor","setMessages","reverse","filter","messages","concat","count","selected","map","index","clearMessages","clearSelected","to","setColsToLS","setCols","updateCols","clearRtMessagesBuff","setOffline","needPostOfflineMessage","__connectionStatus","timestamp","now","offline","setReconnected","setLimit","setFilter","setMode","Math","ceil","rtMessagesBuff","setFrom","setTo","reqStart","clear","setActive","id","setDefaultCols","setNewMessagesCount","setSelected","indexes","setRtMessagesBuff","splice","namespaced","isLoading","getActions","mutations","getMutations"],"mappings":"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"}