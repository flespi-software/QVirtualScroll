{"version":3,"file":"channelsMessagesPull.js","sources":["../src/store/modules/channelsMessagesPull/index.js","../src/store/modules/channelsMessagesPull/actions.js","../src/store/modules/channelsMessagesPull/mutations.js"],"sourcesContent":["import getActions from './actions'\nimport getMutations from './mutations'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  let actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name: name,\n    isLoading: false,\n    active: 0,\n    messages: [],\n    filter: '',\n    mode: null,\n    from: 0,\n    to: 0,\n    limit: 1000,\n    cols: [],\n    newMessagesCount: 0,\n    offline: false,\n    selected: [],\n    rtMessagesBuff: []\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n","export default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    let params = {}\n    if (state.limit) {\n      params.limit_count = state.limit\n    }\n    if (state.from) {\n      params.curr_key = state.from\n    }\n    return params\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        let errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  async function getCols ({ state, commit, rootState }) {\n    commit('reqStart')\n    if (rootState.token && state.active) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let cols = [],\n          colsFromStorage = LocalStorage.get.item(state.name)\n        if (colsFromStorage && colsFromStorage[state.active] && colsFromStorage[state.active]) {\n          /* remove after sometime 12.07.19 */\n          colsFromStorage[state.active].forEach((col) => {\n            if (col.name === 'timestamp') {\n              let locale = new Date().toString().match(/([-\\+][0-9]+)\\s/)[1]\n              col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n            }\n          })\n          cols = colsFromStorage[state.active]\n        } else {\n          let protocolIdResp = await Vue.connector.gw.getChannels(state.active, { fields: 'protocol_id' })\n          let protocolIdData = protocolIdResp.data\n          errorsCheck(protocolIdData)\n          if (protocolIdData.result && protocolIdData.result.length && protocolIdData.result[0].protocol_id) {\n            let colsResp = await Vue.connector.gw.getProtocols(protocolIdData.result[0].protocol_id, { fields: 'message_parameters' })\n            let colsData = colsResp.data\n            errorsCheck(colsData)\n            colsData.result[0].message_parameters.forEach(col => {\n              let colItem = {\n                name: col.name,\n                width: 160,\n                display: true,\n                description: col.info\n              }\n              if (colItem.name === 'timestamp') {\n                let locale = new Date().toString().match(/([-\\+][0-9]+)\\s/)[1]\n                colItem.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n              }\n              cols.push(colItem)\n            })\n          }\n        }\n        commit('setCols', cols)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getData ({ state, commit, rootState }) {\n    let data = {}\n    if (rootState.token && state.active) {\n      try {\n        let resp = await Vue.connector.gw.getChannelsMessages(state.active, { data: JSON.stringify(getParams(state)) })\n        data = resp.data\n        errorsCheck(data)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        data = {\n          errors: [e]\n        }\n      }\n    }\n    return data\n  }\n\n  async function get ({ state, commit, rootState }) {\n    commit('reqStart')\n    Vue.set(state, 'isLoading', true)\n    let data = await getData({ state, commit, rootState })\n    if (data.result) {\n      commit('setMessages', data.result)\n      commit('setTo', data.next_key)\n    }\n    Vue.set(state, 'isLoading', false)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        if (state.mode === 1) {\n          commit('setMessages', [...messagesBuffer])\n        }\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    commit('reqStart')\n    let data = await getData({ state, commit, rootState })\n    if (data.result) {\n      commit('setMessages', data.result)\n      commit('setTo', data.next_key)\n    }\n    loopId = initRenderLoop(state, commit)\n    await Vue.connector.subscribeMessagesChannels(state.active, '+', (message) => {\n      if (state.mode === 1) {\n        messagesBuffer.push(JSON.parse(message))\n      } else {\n        commit('setNewMessagesCount', state.newMessagesCount + 1)\n        commit('setRtMessagesBuff', JSON.parse(message))\n      }\n    }, { rh: 2 })\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (loopId) { clearInterval(loopId) }\n    await Vue.connector.unsubscribeMessagesChannels(state.active, '+')\n  }\n\n  return {\n    get,\n    pollingGet,\n    getCols,\n    unsubscribePooling\n  }\n}\n","export default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function setMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      if (state.mode === 1) {\n        if (state.filter && filterHandler) {\n          data = filterHandler(state.filter, data)\n        }\n      }\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      let messages = state.messages.concat(data)\n      if (state.limit && state.mode === 1 && messages.length >= state.limit + (state.limit * 0.1)) { // rt limiting\n        let count = (messages.length - 1) - (state.limit - 1)\n        messages = messages.slice(count)\n        Vue.set(state, 'selected', state.selected.map((index) => index - count))\n      }\n      Vue.set(state, 'messages', messages)\n    }\n  }\n\n  function clearMessages (state) {\n    Vue.set(state, 'messages', [])\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      if (state.mode === 1) {\n        if (state.filter) {\n          state.messages.push({ 'x-flespi-filter-prev': state.filter })\n        }\n        if (value) {\n          state.messages.push({ 'x-flespi-filter-next': value })\n        }\n      }\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setMode (state, mode) {\n    switch (mode) {\n      case 0: {\n        state.from = 0\n        clearMessages(state)\n        break\n      }\n      case 1: {\n        let now = Date.now()\n        state.from = Math.ceil((now - 4000 - 1000) / 1000)\n        state.to = state.from\n        clearMessages(state)\n        state.newMessagesCount = 0\n        Vue.set(state, 'messages', state.rtMessagesBuff)\n        clearRtMessagesBuff(state)\n        break\n      }\n    }\n    Vue.set(state, 'mode', mode)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Channels messages')\n    }\n  }\n\n  function setActive (state, id) {\n    state.newMessagesCount = 0\n    Vue.set(state, 'active', id)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.mode = null\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    await Vue.connector.unsubscribeMessagesChannels(state.active, '+')\n  }\n\n  function setCols (state, cols) {\n    let colsFromStorage = LocalStorage.get.item(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.active] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  let updateCols = setCols\n\n  function setNewMessagesCount (state, count) {\n    Vue.set(state, 'newMessagesCount', count)\n  }\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'offline', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = false\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setRtMessagesBuff (state, message) {\n    if (state.rtMessagesBuff.length >= 100) {\n      state.rtMessagesBuff.splice(0, 1)\n    }\n    state.rtMessagesBuff.push(message)\n  }\n\n  function clearRtMessagesBuff (state) {\n    Vue.set(state, 'rtMessagesBuff', [])\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setMode,\n    setFrom,\n    setTo,\n    reqStart,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setNewMessagesCount,\n    setSelected,\n    clearSelected,\n    setRtMessagesBuff,\n    clearRtMessagesBuff\n  }\n}\n"],"names":["Vue","LocalStorage","name","errorHandler","filterHandler","newMessagesInterseptor","namespaced","state","isLoading","active","messages","filter","mode","from","to","limit","cols","newMessagesCount","offline","selected","rtMessagesBuff","actions","errorsCheck","data","errors","forEach","error","errObject","Error","reason","commit","rootState","token","set","colsFromStorage","get","item","col","locale","Date","toString","match","addition","slice","connector","gw","getChannels","fields","protocolIdResp","protocolIdData","result","length","protocol_id","getProtocols","colsResp","colsData","message_parameters","colItem","width","display","description","info","push","DEV","console","log","getData","getChannelsMessages","JSON","stringify","params","limit_count","curr_key","resp","next_key","messagesBuffer","loopId","initRenderLoop","setInterval","subscribeMessagesChannels","message","parse","rh","clearInterval","unsubscribeMessagesChannels","pollingGet","getCols","unsubscribePooling","getActions","mutations","setMessages","reverse","concat","count","map","index","clearMessages","clearSelected","setCols","clearRtMessagesBuff","setOffline","needPostOfflineMessage","__connectionStatus","timestamp","now","setReconnected","setLimit","setFilter","value","setMode","Math","ceil","setFrom","setTo","reqStart","clear","setActive","id","updateCols","setNewMessagesCount","setSelected","indexes","setRtMessagesBuff","splice","getMutations"],"mappings":"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"}