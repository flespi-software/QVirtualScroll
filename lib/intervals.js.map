{"version":3,"file":"intervals.js","sources":["../src/store/modules/ls.js","../src/store/modules/intervals/actions.js","../src/store/modules/intervals/mutations.js","../src/infrastructure/logger.js","../src/store/modules/intervals/index.js"],"sourcesContent":["import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport { getColsLS, setColsLS } from '../ls'\nconst defaultCols = ['begin', 'end', 'duration', 'timestamp', 'id']\nexport default function ({ Vue, LocalStorage, errorHandler, logger }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter && state.sysFilter) {\n      params.filter = `${state.sysFilter},${state.filter}`\n    } else if (state.sysFilter && !state.filter) {\n      params.filter = `${state.sysFilter}`\n    } else if (!state.sysFilter && state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.begin && !state.reverse) {\n      if (!state.reverse) {\n        params.begin = Math.floor(state.begin / 1000)\n      }\n    }\n    if (state.end) {\n      params.end = Math.floor(state.end / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function getDefaultEnum () {\n    const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n    return defaultCols.reduce((res, name) => {\n      res[name] = { name }\n      if (name.match(/timestamp$/) || name === 'begin' || name === 'end') {\n        res[name].addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n        res[name].type = ''\n        res[name].unit = ''\n      }\n      return res\n    }, {})\n  }\n\n  function getDefaultColsSchema () {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: getDefaultEnum()\n    }\n  }\n\n\n  async function getCols ({ state, commit }, counters) {\n    let colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n    colsFromStorage = colsFromStorage[state.active]\n    const colsSchema = colsFromStorage || getDefaultColsSchema()\n    const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n      ? colsFromStorage['custom-cols-schemas'] : {}\n    if (!colsSchema.enum) {\n      colsSchema.enum = getDefaultEnum()\n    }\n    colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n    const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n    counters.forEach(counter => {\n      const name = counter.name\n      const enumCol = {\n        name,\n        description: `${counter.name}[${counter.type}]`\n      }\n      const schemaCol = {\n        name,\n        width: 100\n      }\n      if (name.match(/timestamp$/) || name === 'begin' || name === 'end') {\n        enumCol.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n        enumCol.type = ''\n        enumCol.unit = ''\n        schemaCol.width = 190\n      }\n      colsSchema.schemas._protocol.cols.push(schemaCol)\n      colsSchema.enum[name] = enumCol\n    })\n    colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    !colsFromStorage && colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n    commit('setCols', colsSchema)\n  }\n\n  function errorsCheck (commit, data) {\n    if (data.errors) {\n      commit('reqError', data.errors)\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    } else {\n      commit('reqFullfiled')\n    }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1,\n          fields: 'end,begin'\n        }\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(params) })\n        commit('reqStart', { endpoint: 'getCalcsDevicesIntervals-initTime', active: state.active, device: state.activeDevice, data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        let dateBegin = Date.now(),\n          dateEnd = Date.now()\n        if (data.result.length) {\n          dateBegin = Math.round(data.result[0].begin * 1000)\n          dateEnd = Math.round(data.result[0].end * 1000)\n        }\n        dateBegin = new Date(dateBegin)\n        dateBegin.setHours(0, 0, 0, 0)\n        dateEnd = new Date(dateEnd)\n        dateEnd.setHours(23, 59, 59, 999)\n        commit('setBegin', dateBegin.valueOf())\n        commit('setEnd', dateEnd.valueOf() + 0.999)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getMessages ({ state, commit, rootState }, params) {\n    let messages = []\n    commit('reqStart')\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(params) })\n        commit('reqStart', { endpoint: 'getCalcsDevicesIntervals', active: state.active, device: state.activeDevice, data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        messages = data.result\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n    return messages\n  }\n\n  async function get ({ state, commit, rootState }) {\n    const messages = await getMessages({ state, commit, rootState }, getParams(state))\n    commit('setMessages', messages)\n  }\n\n  const messageProcessing = (state, packet) => {\n    const message = JSON.parse(packet.payload)\n    const topic = packet.topic\n    const event = topic.split('/').slice(-1)[0]\n    switch (event) {\n      case 'created': {\n        const begin = state.begin,\n          end = state.end,\n          endDate = new Date(end),\n          intervalBegin = message.begin * 1000,\n          intervalEnd = message.end * 1000,\n          nowDate = new Date(),\n          isCurrentEndInTodayRange = endDate.getDate() === nowDate.getDate() && endDate.getMonth() === nowDate.getMonth() && endDate.getFullYear() === nowDate.getFullYear()\n        if ((intervalBegin <= end && intervalEnd >= begin) || isCurrentEndInTodayRange) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'updated': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'finished': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'deleted': {\n        if (state.messages[message.id]) {\n          Vue.delete(state.messages, message.id)\n        }\n        break\n      }\n    }\n  }\n\n  let messagesBuffer = [],\n    intervalId = 0\n  function initRenderLoop (state) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        messagesBuffer.forEach(message => messageProcessing(state, message))\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit }) {\n    intervalId = initRenderLoop(state)\n    await Vue.connector.subscribeIntervals(state.active, state.activeDevice, '+', (message, topic, packet) => {\n      messagesBuffer.push(packet)\n    }, { rh: 2 })\n    logger.info(`subscribed to Intervals ${state.active} - ${state.activeDevice}`)\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (intervalId) { clearInterval(intervalId) }\n    await Vue.connector.unsubscribeIntervals(state.active, state.activeDevice, '+')\n    logger.info(`unsubscribed to Intervals ${state.active} - ${state.activeDevice}`)\n  }\n\n  return {\n    getMessages,\n    get,\n    pollingGet,\n    initTime,\n    unsubscribePooling,\n    getCols\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor, logger }) {\n  function setMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages = data.reduce((result, message) => {\n        result[message.id] = message\n        return result\n      }, {})\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'messages', [])\n    }\n    logger.info(`setMessages: length: ${data.length}`)\n  }\n\n  function clearMessages (state) {\n    Vue.set(state, 'messages', [])\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n    logger.info(`clearMessages`)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n    logger.info(`setFilter: ${value}`)\n  }\n\n  function setBegin (state, begin) {\n    Vue.set(state, 'begin', begin)\n    logger.info(`setBegin: ${begin}`)\n  }\n\n  function setEnd (state, end) {\n    Vue.set(state, 'end', end)\n    logger.info(`setEnd: ${end}`)\n  }\n\n  function reqStart (state, params) {\n    logger.info(`reqStart: ${JSON.stringify(params)}`)\n  }\n\n  function reqFullfiled () {\n    logger.info(`reqFullfiled`)\n  }\n\n  function reqError (state, error) {\n    logger.info(`reqError: ${JSON.stringify(error)}`)\n  }\n\n  function setActive (state, id) {\n    state.newMessagesCount = 0\n    Vue.set(state, 'active', id)\n    logger.info(`setActive: ${id}`)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n    logger.info(`setReverse: ${val}`)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.begin = 0\n    state.end = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeIntervals(state.active)\n    logger.info(`clear module`)\n    logger.info(`unsubscribeIntervals ${state.active}`)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.active, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  function setActiveDevice (state, id) {\n    Vue.set(state, 'activeDevice', id)\n    logger.info(`setActiveDevice: ${id}`)\n  }\n\n  return {\n    setMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setBegin,\n    setEnd,\n    reqStart,\n    reqFullfiled,\n    reqError,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setActiveDevice\n  }\n}\n","export class Logger {\n  constructor (name = 'ModuleLogger') {\n    this.name = `[${name}]`\n  }\n\n  extendName (suffix) {\n    return new Logger(`${this.name}[${suffix}]`)\n  }\n\n  info () {\n    console.info(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n\n  error () {\n    console.error(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n\n  warn () {\n    console.warn(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\nimport Vue from 'vue'\nimport { Logger } from '../../../infrastructure/logger'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const logger = Vue.$logger ? Vue.$logger.extendName(name) : new Logger(name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler, logger }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor, logger })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    activeDevice: 0,\n    messages: {},\n    filter: '',\n    sysFilter: '',\n    begin: Date.now() - 86400000,\n    end: Date.now(),\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    selected: [],\n    sortBy: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["getColsLS","LocalStorage","lsNamespace","name","colsFromStorage","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","getItem","get","defaultCols","getActions","Vue","errorHandler","logger","getDefaultEnum","locale","Date","toString","match","reduce","res","addition","slice","type","unit","errorsCheck","commit","data","errors","forEach","error","errObject","Error","reason","async","getMessages","state","rootState","params","messages","token","active","activeDevice","set","resp","connector","gw","getCalcsDevicesIntervals","JSON","stringify","endpoint","device","result","e","DEV","console","log","messagesBuffer","intervalId","initRenderLoop","setInterval","length","message","packet","parse","payload","topic","begin","end","endDate","intervalBegin","intervalEnd","nowDate","isCurrentEndInTodayRange","getDate","getMonth","getFullYear","id","delete","messageProcessing","limit","count","filter","sysFilter","reverse","Math","floor","getParams","pollingGet","subscribeIntervals","push","rh","info","initTime","fields","dateBegin","now","dateEnd","round","setHours","valueOf","unsubscribePooling","clearInterval","unsubscribeIntervals","getCols","counters","colsSchema","activeSchema","schemas","_default","cols","map","width","_protocol","enum","customColsSchemas","counter","enumCol","description","schemaCol","__dest","etc","getMutations","newMessagesInterseptor","clearMessages","clearSelected","setCols","customColsSchema","defaultColsSchema","undefined","_unsaved","splitSchemas","setColsLS","setMessages","setLimit","setFilter","value","setBegin","setEnd","reqStart","reqFullfiled","reqError","setReverse","val","clear","setActive","newMessagesCount","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setActiveDevice","Logger","constructor","this","extendName","suffix","Array","from","arguments","msg","warn","$logger","actions","mutations","namespaced","isLoading","selected","sortBy"],"mappings":"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"}