{"version":3,"file":"intervals.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../src/store/modules/intervals/actions.js","../src/store/modules/intervals/mutations.js","../src/store/modules/intervals/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = require(\"core-js/library/fn/object/define-property\");","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import _get from 'lodash/get'\n\nconst defaultCols = ['begin', 'end', 'duration', 'timestamp', 'id']\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter && state.sysFilter) {\n      params.filter = `${state.sysFilter},${state.filter}`\n    } else if (state.sysFilter && !state.filter) {\n      params.filter = `${state.sysFilter}`\n    } else if (!state.sysFilter && state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.begin && !state.reverse) {\n      if (!state.reverse) {\n        params.begin = Math.floor(state.begin / 1000)\n      }\n    }\n    if (state.end) {\n      params.end = Math.floor(state.end / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  function migrateCols (cols) {\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: cols.reduce((res, col) => {\n            if (!col.custom) {\n              res.push({ name: col.name, width: 150 })\n            }\n            return res\n          }, [])\n        }\n      },\n      enum: {}\n    }\n    if (cols.length) {\n      schema.activeSchema = '_unsaved'\n      schema.schemas._unsaved = {\n        name: 'Modified',\n        cols: cols.reduce((res, col) => {\n          if (col.display) {\n            res.push({ name: col.name, width: col.width })\n          }\n          return res\n        }, [])\n      }\n      schema.enum = cols.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].display\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n    return schema\n  }\n\n  function getDefaultColsSchema () {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: defaultCols.reduce((res, name) => {\n        res[name] = { name }\n        return res\n      }, {})\n    }\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      /* removing old store 12.03.20 */\n      const oldStore = LocalStorage.getItem(state.name)\n      if (oldStore) {\n        colsFromStorage = oldStore\n        LocalStorage.remove(state.name)\n      }\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName) || {}\n      colsFromStorage = _get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name)\n      if (!colsFromStorage || colsFromStorage === 'null') {\n        colsFromStorage = {}\n      }\n    }\n    return colsFromStorage\n  }\n\n  function getCols ({ state, commit }, counters) {\n    const colsFromStorage = getColsFromLS(state)\n    if (colsFromStorage && colsFromStorage[state.active] && colsFromStorage[state.active].length) {\n      let colsSchema = colsFromStorage[state.active]\n      const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n        ? colsFromStorage['custom-cols-schemas'] : {}\n      colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n      if (Array.isArray(colsSchema)) {\n        colsSchema = migrateCols(colsSchema)\n        commit('setColsToLS', colsSchema)\n      }\n\n      /* adding sys cols after migration. 12.11.20 */\n      if (_get(colsSchema.enum, 'action.__dest', undefined) === 'action') {\n        delete colsSchema.enum.action\n      }\n      commit('updateCols', colsSchema)\n    } else {\n      const colsSchema = getDefaultColsSchema()\n      counters.forEach(counter => {\n        const name = counter.name\n        const enumCol = {\n          name\n        }\n        const schemaCol = {\n          name,\n          width: 100,\n          description: `${counter.name}[${counter.type}]`\n        }\n        colsSchema.schemas._protocol.cols.push(schemaCol)\n        colsSchema.enum[name] = enumCol\n      })\n      colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n      colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n      colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n      commit('setCols', colsSchema)\n    }\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1,\n          fields: 'end,begin'\n        }\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        let dateBegin = Date.now(),\n          dateEnd = Date.now()\n        if (data.result.length) {\n          dateBegin = Math.round(data.result[0].begin * 1000)\n          dateEnd = Math.round(data.result[0].end * 1000)\n        }\n        dateBegin = new Date(dateBegin)\n        dateBegin.setHours(0, 0, 0, 0)\n        dateEnd = new Date(dateEnd)\n        dateEnd.setHours(23, 59, 59, 999)\n        commit('setBegin', dateBegin.valueOf())\n        commit('setEnd', dateEnd.valueOf())\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function get ({ state, commit, rootState }) {\n    commit('reqStart')\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(getParams(state)) })\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMessages', data.result)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  const messageProcessing = (state, packet) => {\n    const message = JSON.parse(packet.payload)\n    const topic = packet.topic\n    const event = topic.split('/').slice(-1)[0]\n    switch (event) {\n      case 'created': {\n        const begin = state.begin,\n          end = state.end,\n          endDate = new Date(end),\n          intervalBegin = message.begin * 1000,\n          intervalEnd = message.end * 1000,\n          nowDate = new Date(),\n          isCurrentEndInTodayRange = endDate.getDate() === nowDate.getDate() && endDate.getMonth() === nowDate.getMonth() && endDate.getFullYear() === nowDate.getFullYear()\n        if ((intervalBegin <= end && intervalEnd >= begin) || isCurrentEndInTodayRange) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'updated': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'finished': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'deleted': {\n        if (state.messages[message.id]) {\n          Vue.delete(state.messages, message.id)\n        }\n        break\n      }\n    }\n  }\n\n  let messagesBuffer = [],\n    intervalId = 0\n  function initRenderLoop (state) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        messagesBuffer.forEach(message => messageProcessing(state, message))\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit }) {\n    intervalId = initRenderLoop(state)\n    await Vue.connector.subscribeIntervals(state.active, state.activeDevice, '+', (message, topic, packet) => {\n      messagesBuffer.push(packet)\n    }, { rh: 2 })\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (intervalId) { clearInterval(intervalId) }\n    await Vue.connector.unsubscribeIntervals(state.active, state.activeDevice, '+')\n  }\n\n  return {\n    get,\n    pollingGet,\n    initTime,\n    unsubscribePooling,\n    getCols\n  }\n}\n","import get from 'lodash/get'\nimport set from 'lodash/set'\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function setMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages = data.reduce((result, message) => {\n        result[message.id] = message\n        return result\n      }, {})\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'messages', [])\n    }\n  }\n\n  function clearMessages (state) {\n    Vue.set(state, 'messages', [])\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setBegin (state, begin) {\n    Vue.set(state, 'begin', begin)\n  }\n\n  function setEnd (state, end) {\n    Vue.set(state, 'end', end)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request intervals messages')\n    }\n  }\n\n  function setActive (state, id) {\n    state.newMessagesCount = 0\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.begin = 0\n    state.end = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeIntervals(state.active)\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName)\n      colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name) || colsFromStorage\n    }\n    return colsFromStorage\n  }\n\n  function splitSchemas (cols) {\n    const customColsSchema = {\n      ...cols.schemas,\n      _default: undefined,\n      _protocol: undefined\n    }\n    const defaultColsSchema = {\n      activeSchema: cols.activeSchema,\n      schemas: {\n        _default: cols.schemas._default,\n        _protocol: cols.schemas._protocol\n      },\n      enum: cols.enum\n    }\n    return { customColsSchema, defaultColsSchema }\n  }\n\n  function setColsToLS (state, cols) {\n    const colsFromStorage = getColsFromLS(state) || {}\n    const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n    colsFromStorage[state.active] = defaultColsSchema\n    colsFromStorage['custom-cols-schemas'] = { ...colsFromStorage['custom-cols-schemas'], ...customColsSchema }\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName) || {}\n      set(appStorage, lsRouteToItem, colsFromStorage)\n      LocalStorage.set(lsItemName, appStorage)\n    } else {\n      LocalStorage.set(state.name, colsFromStorage)\n    }\n  }\n\n  function setCols (state, cols) {\n    setColsToLS(state, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  function setActiveDevice (state, id) {\n    Vue.set(state, 'activeDevice', id)\n  }\n\n  return {\n    setMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setBegin,\n    setEnd,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    setColsToLS,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setActiveDevice\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    activeDevice: 0,\n    messages: {},\n    filter: '',\n    sysFilter: '',\n    begin: Date.now() - 86400000,\n    end: Date.now(),\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    selected: [],\n    sortBy: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","obj","_Object$defineProperty","enumerable","configurable","writable","defaultCols","Vue","LocalStorage","errorHandler","errorsCheck","data","errors","forEach","errObject","Error","reason","state","commit","rootState","token","active","activeDevice","set","params","reverse","count","fields","connector","gw","getCalcsDevicesIntervals","JSON","stringify","resp","dateBegin","Date","now","dateEnd","result","length","Math","round","begin","end","setHours","valueOf","DEV","console","log","limit","filter","sysFilter","floor","messageProcessing","packet","message","parse","payload","topic","split","slice","endDate","intervalBegin","intervalEnd","nowDate","isCurrentEndInTodayRange","getDate","getMonth","getFullYear","messages","id","delete","messagesBuffer","intervalId","initRenderLoop","setInterval","subscribeIntervals","push","rh","clearInterval","unsubscribeIntervals","get","pollingGet","initTime","unsubscribePooling","getCols","counters","cols","schema","colsFromStorage","lsNamespace","oldStore","getItem","name","remove","lsPath","lsItemName","shift","lsRouteToItem","join","appStorage","_get","getColsFromLS","colsSchema","customColsSchemas","schemas","Array","isArray","activeSchema","_default","map","width","_protocol","reduce","res","col","custom","enum","_unsaved","display","action","counter","enumCol","schemaCol","description","type","__dest","etc","newMessagesInterseptor","filterHandler","clearMessages","clearSelected","setColsToLS","customColsSchema","defaultColsSchema","setCols","setMessages","setLimit","setFilter","setBegin","setEnd","reqStart","setReverse","val","clear","setActive","newMessagesCount","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setActiveDevice","actions","getActions","mutations","getMutations","namespaced","isLoading","selected","sortBy"],"mappings":"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"}