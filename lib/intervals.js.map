{"version":3,"file":"intervals.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/intervals/actions.js","../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../src/store/modules/intervals/mutations.js","../src/store/modules/intervals/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","export default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter && state.sysFilter) {\n      params.filter = `${state.sysFilter},${state.filter}`\n    } else if (state.sysFilter && !state.filter) {\n      params.filter = `${state.sysFilter}`\n    } else if (!state.sysFilter && state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.begin && !state.reverse) {\n      if (!state.reverse) {\n        params.begin = Math.floor(state.begin / 1000)\n      }\n    }\n    if (state.end) {\n      params.end = Math.floor(state.end / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function getCols ({ state, commit }, counters) {\n    let cols = []\n    const colsFromStorage = LocalStorage.getItem(state.name)\n    if (colsFromStorage && colsFromStorage[state.active] && colsFromStorage[state.active].length) {\n      cols = colsFromStorage[state.active]\n      /* adding sys cols after migration. 30.01.20 */\n      cols = cols.filter(col => !col.__dest)\n      if (!cols[0].__dest && !cols[cols.length - 1].__dest) {\n        cols.unshift({ name: 'actions', width: 100, display: true, __dest: 'action' })\n        cols.push({ name: 'etc', width: 150, display: true, __dest: 'etc' })\n      }\n      commit('updateCols', cols)\n    } else {\n      counters.unshift({ name: 'actions', width: 100, display: true, __dest: 'action' })\n      counters.push({ name: 'etc', width: 150, display: true, __dest: 'etc' })\n      commit('setCols', counters)\n    }\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1,\n          fields: 'end'\n        }\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].end * 1000)\n        }\n        const dateBegin = new Date(date)\n        dateBegin.setHours(0, 0, 0, 0)\n        const dateEnd = new Date(date)\n        dateEnd.setHours(23, 59, 59, 999)\n        commit('setBegin', dateBegin.valueOf())\n        commit('setEnd', dateEnd.valueOf())\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function get ({ state, commit, rootState }) {\n    commit('reqStart')\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(getParams(state)) })\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMessages', data.result)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  const messageProcessing = (state, packet) => {\n    const message = JSON.parse(packet.payload)\n    const topic = packet.topic\n    const event = topic.split('/').slice(-1)[0]\n    switch (event) {\n      case 'created': {\n        const begin = state.begin,\n          end = state.end,\n          endDate = new Date(end),\n          intervalBegin = message.begin * 1000,\n          intervalEnd = message.end * 1000,\n          nowDate = new Date(),\n          isCurrentEndInTodayRange = endDate.getDate() === nowDate.getDate() && endDate.getMonth() === nowDate.getMonth() && endDate.getFullYear() === nowDate.getFullYear()\n        if ((intervalBegin <= end && intervalEnd >= begin) || isCurrentEndInTodayRange) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'updated': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'finished': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'deleted': {\n        if (state.messages[message.id]) {\n          Vue.delete(state.messages, message.id)\n        }\n        break\n      }\n    }\n  }\n\n  let messagesBuffer = [],\n    intervalId = 0\n  function initRenderLoop (state) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        messagesBuffer.forEach(message => messageProcessing(state, message))\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit }) {\n    intervalId = initRenderLoop(state)\n    await Vue.connector.subscribeIntervals(state.active, state.activeDevice, '+', (message, topic, packet) => {\n      messagesBuffer.push(packet)\n    }, { rh: 2 })\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (intervalId) { clearInterval(intervalId) }\n    await Vue.connector.unsubscribeIntervals(state.active, state.activeDevice, '+')\n  }\n\n  return {\n    get,\n    pollingGet,\n    initTime,\n    unsubscribePooling,\n    getCols\n  }\n}\n","module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","const defaultCols = ['begin', 'end', 'duration', 'timestamp', 'id']\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function setMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages = data.reduce((result, message) => {\n        result[message.id] = message\n        return result\n      }, {})\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'messages', [])\n    }\n  }\n\n  function clearMessages (state) {\n    Vue.set(state, 'messages', [])\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setBegin (state, begin) {\n    Vue.set(state, 'begin', begin)\n  }\n\n  function setEnd (state, end) {\n    Vue.set(state, 'end', end)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request intervals messages')\n    }\n  }\n\n  function setActive (state, id) {\n    state.newMessagesCount = 0\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.begin = 0\n    state.end = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeIntervals(state.active)\n  }\n\n  function setCols (state, counters) {\n    let cols = [\n      {\n        name: 'begin',\n        title: 'begin',\n        width: 170,\n        display: true,\n        description: 'Begin of interval'\n      },\n      {\n        name: 'end',\n        width: 170,\n        display: true,\n        description: 'End of interval'\n      },\n      {\n        name: 'duration',\n        width: 85,\n        display: true,\n        description: 'Duration of interval'\n      },\n      {\n        name: 'timestamp',\n        width: 170,\n        display: true,\n        description: 'Interval timestamp'\n      },\n      {\n        name: 'id',\n        width: 50,\n        display: true,\n        description: 'ID of interval'\n      }\n    ]\n    const actionsCol = counters.shift()\n    const etcCol = counters.pop()\n    const colsFromCounters = counters.map(counter => {\n      counter.width = 100\n      counter.display = true\n      counter.description = `${counter.name}[${counter.type}]`\n      return counter\n    })\n    cols = [actionsCol, ...cols, ...colsFromCounters, etcCol]\n    let colsFromStorage = LocalStorage.getItem(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.active] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function updateCols (state, cols) {\n    let colsFromStorage = LocalStorage.getItem(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.active] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setDefaultCols (state) {\n    state.cols.forEach((col, index) => {\n      if (col.__dest) { return }\n      if (defaultCols.includes(col.name)) {\n        Vue.set(state.cols[index], 'display', true)\n      } else {\n        Vue.set(state.cols[index], 'display', false)\n      }\n    })\n    updateCols(state, state.cols)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  function setActiveDevice (state, id) {\n    Vue.set(state, 'activeDevice', id)\n  }\n\n  return {\n    setMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setBegin,\n    setEnd,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setDefaultCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setActiveDevice\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name: name,\n    isLoading: false,\n    active: 0,\n    activeDevice: 0,\n    messages: {},\n    filter: '',\n    sysFilter: '',\n    begin: Date.now() - 86400000,\n    end: Date.now(),\n    limit: 1000,\n    reverse: false,\n    cols: [],\n    selected: [],\n    sortBy: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","Vue","LocalStorage","errorHandler","errorsCheck","data","errors","forEach","errObject","Error","reason","state","commit","rootState","token","active","activeDevice","set","params","reverse","count","fields","connector","gw","getCalcsDevicesIntervals","JSON","stringify","resp","date","Date","now","result","length","Math","round","end","dateBegin","setHours","dateEnd","valueOf","DEV","console","log","limit","filter","sysFilter","begin","floor","messageProcessing","packet","message","parse","payload","topic","split","slice","endDate","intervalBegin","intervalEnd","nowDate","isCurrentEndInTodayRange","getDate","getMonth","getFullYear","messages","id","delete","messagesBuffer","intervalId","initRenderLoop","setInterval","subscribeIntervals","push","rh","clearInterval","unsubscribeIntervals","get","pollingGet","initTime","unsubscribePooling","getCols","counters","cols","colsFromStorage","getItem","name","col","__dest","unshift","width","display","arr","_Array$isArray","i","arr2","Array","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","defaultCols","newMessagesInterseptor","filterHandler","clearMessages","clearSelected","updateCols","setMessages","reduce","setLimit","setFilter","setBegin","setEnd","reqStart","setReverse","val","clear","setActive","newMessagesCount","setCols","title","description","actionsCol","shift","etcCol","pop","colsFromCounters","map","counter","type","setDefaultCols","index","includes","setSelected","indexes","setSortBy","field","clearSortBy","setActiveDevice","actions","getActions","mutations","getMutations","namespaced","isLoading","selected","sortBy"],"mappings":"wrCAAA,MAAiBA,ECEjB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,EAASV,QAAQO,GAAOI,KAAKT,EAAOC,GAwBxC,MApBA,SAA2BS,GACzB,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,EAAS,SAAUV,EAASC,GACrC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,GAGnEhB,OAAMiB,OCjCG,kBAAYC,IAAAA,IAAKC,IAAAA,aAAcC,IAAAA,sBA8CnCC,EAAaC,GAChBA,EAAKC,QACPD,EAAKC,OAAOC,QAAQ,SAAClB,OACbmB,EAAY,IAAIC,MAAMpB,EAAMqB,QAClCP,GAAgBA,EAAaK,oCAKnC,mGAA2BG,IAAAA,MAAOC,IAAAA,SAAQC,UAC1BC,OAASH,EAAMI,QAAUJ,EAAMK,6BAEzCf,EAAIgB,IAAIN,EAAO,aAAa,GACtBO,EAAS,CACbC,SAAS,EACTC,MAAO,EACPC,OAAQ,gBAESpB,EAAIqB,UAAUC,GAAGC,yBAAyBb,EAAMI,OAAQJ,EAAMK,aAAc,MAAO,CAAEX,KAAMoB,KAAKC,UAAUR,4BAAvHS,SAENvB,EADMC,EAAOsB,EAAKtB,MAEduB,EAAOC,KAAKC,MACZzB,EAAK0B,OAAOC,SACdJ,EAAOK,KAAKC,MAA2B,IAArB7B,EAAK0B,OAAO,GAAGI,OAE7BC,EAAY,IAAIP,KAAKD,IACjBS,SAAS,EAAG,EAAG,EAAG,IACtBC,EAAU,IAAIT,KAAKD,IACjBS,SAAS,GAAI,GAAI,GAAI,KAC7BzB,EAAO,WAAYwB,EAAUG,WAC7B3B,EAAO,SAAU0B,EAAQC,WACzBtC,EAAIgB,IAAIN,EAAO,aAAa,qDAE5BR,GAAgBA,QACZqC,KAAOC,QAAQC,UACnBzC,EAAIgB,IAAIN,EAAO,aAAa,iHAKlC,6FAAsBA,IAAAA,MAAOC,IAAAA,OAAQC,IAAAA,UACnCD,EAAO,YACHC,EAAUC,OAASH,EAAMI,QAAUJ,EAAMK,6BAEzCf,EAAIgB,IAAIN,EAAO,aAAa,YACTV,EAAIqB,UAAUC,GAAGC,yBAAyBb,EAAMI,OAAQJ,EAAMK,aAAc,MAAO,CAAEX,KAAMoB,KAAKC,WAzFjHR,OAAAA,EAAAA,EAAS,IADGP,EA0FyHA,GAxFjIgC,QACRzB,EAAOE,MAAQT,EAAMgC,OAEnBhC,EAAMiC,QAAUjC,EAAMkC,UACxB3B,EAAO0B,iBAAYjC,EAAMkC,sBAAalC,EAAMiC,QACnCjC,EAAMkC,YAAclC,EAAMiC,OACnC1B,EAAO0B,iBAAYjC,EAAMkC,YACflC,EAAMkC,WAAalC,EAAMiC,SACnC1B,EAAO0B,iBAAYjC,EAAMiC,SAEvBjC,EAAMmC,QAAUnC,EAAMQ,UACnBR,EAAMQ,UACTD,EAAO4B,MAAQb,KAAKc,MAAMpC,EAAMmC,MAAQ,OAGxCnC,EAAMwB,MACRjB,EAAOiB,IAAMF,KAAKc,MAAMpC,EAAMwB,IAAM,MAElCxB,EAAMQ,UACRD,EAAOC,QAAUR,EAAMQ,SAElBD,6BAmEGS,SAENvB,EADMC,EAAOsB,EAAKtB,MAElBO,EAAO,cAAeP,EAAK0B,QAC3B9B,EAAIgB,IAAIN,EAAO,aAAa,qDAE5BR,GAAgBA,QACZqC,KAAOC,QAAQC,UACnBzC,EAAIgB,IAAIN,EAAO,aAAa,yCAlGdA,EACZO,kDAsGF8B,EAAoB,SAACrC,EAAOsC,OAC1BC,EAAUzB,KAAK0B,MAAMF,EAAOG,gBACpBH,EAAOI,MACDC,MAAM,KAAKC,OAAO,GAAG,QAElC,cACGT,EAAQnC,EAAMmC,MAClBX,EAAMxB,EAAMwB,IACZqB,EAAU,IAAI3B,KAAKM,GACnBsB,EAAgC,IAAhBP,EAAQJ,MACxBY,EAA4B,IAAdR,EAAQf,IACtBwB,EAAU,IAAI9B,KACd+B,EAA2BJ,EAAQK,YAAcF,EAAQE,WAAaL,EAAQM,aAAeH,EAAQG,YAAcN,EAAQO,gBAAkBJ,EAAQI,eAClJN,GAAiBtB,GAAsBW,GAAfY,GAAyBE,IACpD3D,EAAIgB,IAAIN,EAAMqD,SAAUd,EAAQe,GAAIf,aAInC,cAMA,WACCvC,EAAMqD,SAASd,EAAQe,KACzBhE,EAAIgB,IAAIN,EAAMqD,SAAUd,EAAQe,GAAIf,aAInC,UACCvC,EAAMqD,SAASd,EAAQe,KACzBhE,EAAIiE,OAAOvD,EAAMqD,SAAUd,EAAQe,MAOvCE,EAAiB,GACnBC,EAAa,WACNC,EAAgB1D,UAChB2D,YAAY,WACbH,EAAenC,SACjBmC,EAAe5D,QAAQ,SAAA2C,UAAWF,EAAkBrC,EAAOuC,KAC3DiB,EAAiB,KAElB,oCAEL,yFAA6BxD,IAAAA,QAAOC,OAClCwD,EAAaC,EAAe1D,YACtBV,EAAIqB,UAAUiD,mBAAmB5D,EAAMI,OAAQJ,EAAMK,aAAc,IAAK,SAACkC,EAASG,EAAOJ,GAC7FkB,EAAeK,KAAKvB,IACnB,CAAEwB,GAAI,mGAIX,yFAAqC9D,IAAAA,MAC/ByD,GAAcM,cAAcN,YAC1BnE,EAAIqB,UAAUqD,qBAAqBhE,EAAMI,OAAQJ,EAAMK,aAAc,2EAGtE,CACL4D,gDACAC,uDACAC,qDACAC,+DACAC,mBAhJmCC,OAAjBtE,IAAAA,MAAOC,IAAAA,OACrBsE,EAAO,GACLC,EAAkBjF,EAAakF,QAAQzE,EAAM0E,MAC/CF,GAAmBA,EAAgBxE,EAAMI,SAAWoE,EAAgBxE,EAAMI,QAAQiB,SAGpFkD,GAFAA,EAAOC,EAAgBxE,EAAMI,SAEjB6B,OAAO,SAAA0C,UAAQA,EAAIC,UACrB,GAAGA,QAAWL,EAAKA,EAAKlD,OAAS,GAAGuD,SAC5CL,EAAKM,QAAQ,CAAEH,KAAM,UAAWI,MAAO,IAAKC,SAAS,EAAMH,OAAQ,WACnEL,EAAKV,KAAK,CAAEa,KAAM,MAAOI,MAAO,IAAKC,SAAS,EAAMH,OAAQ,SAE9D3E,EAAO,aAAcsE,KAErBD,EAASO,QAAQ,CAAEH,KAAM,UAAWI,MAAO,IAAKC,SAAS,EAAMH,OAAQ,WACvEN,EAAST,KAAK,CAAEa,KAAM,MAAOI,MAAO,IAAKC,SAAS,EAAMH,OAAQ,QAChE3E,EAAO,UAAWqE,MC1CxB,MAAiBvG,ECYjB,MAVA,SAA4BiH,GAC1B,GAAIC,EAAeD,GAAM,CACvB,IAAK,IAAIE,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,EAAI3D,QAAS6D,EAAIF,EAAI3D,OAAQ6D,IAC5DC,EAAKD,GAAKF,EAAIE,GAGhB,OAAOC,MCRMpH,ICAAA,ECQjB,MAJA,SAA0BsH,GACxB,GAAIC,EAAYC,OAAOF,KAAmD,uBAAzCE,OAAOC,UAAUC,SAASC,KAAKL,GAAgC,OAAOM,EAAYN,ICDrH,MAJA,WACE,MAAM,IAAIO,UAAU,oDCStB,MAJA,SAA4BZ,GAC1B,OAAOa,EAAkBb,IAAQc,EAAgBd,IAAQe,KCPrDC,EAAc,CAAC,QAAS,MAAO,WAAY,YAAa,MAC/C,kBAAY1G,IAAAA,IAAKC,IAAAA,aAA6B0G,KAAfC,gBAAeD,iCAkBlDE,EAAenG,GACtBV,EAAIgB,IAAIN,EAAO,WAAY,IAC3BiG,GAA0BA,EAAuB,IACjDG,EAAcpG,kCAoChB,WAAsBA,wEACpBmG,EAAcnG,GACdA,EAAMiC,OAAS,GACfjC,EAAMmC,MAAQ,EACdnC,EAAMwB,IAAM,EACZxB,EAAMgC,MAAQ,IACdhC,EAAMQ,SAAU,WACVlB,EAAIqB,UAAUqD,qBAAqBhE,EAAMI,iFAuDxCiG,EAAYrG,EAAOuE,OACtBC,EAAkBjF,EAAakF,QAAQzE,EAAM0E,OAE/CF,EADGA,GACe,IAEJxE,EAAMI,QAAUmE,EAChChF,EAAae,IAAIN,EAAM0E,KAAMF,GAC7BlF,EAAIgB,IAAIN,EAAO,OAAQuE,YAmBhB6B,EAAepG,GACtBV,EAAIgB,IAAIN,EAAO,WAAY,UAetB,CACLsG,qBAjKoBtG,EAAON,MACvBA,GAAQA,EAAK2B,OAAQ,CACnBrB,EAAMQ,SACRd,EAAKc,cAEH6C,EAAWrD,EAAMqD,SACrB4C,GAA0BA,EAAuBvG,GACjD2D,EAAW3D,EAAK6G,OAAO,SAACnF,EAAQmB,UAC9BnB,EAAOmB,EAAQe,IAAMf,EACdnB,GACN,IACH9B,EAAIgB,IAAIN,EAAO,WAAYqD,QAE3B/D,EAAIgB,IAAIN,EAAO,WAAY,KAqJ7BmG,cAAAA,EACAK,kBA5IiBxG,EAAOS,GACxBnB,EAAIgB,IAAIN,EAAO,QAASS,IA4IxBgG,mBAzIkBzG,EAAOvB,GACrBuB,EAAMiC,SAAWxD,GACnBa,EAAIgB,IAAIN,EAAO,SAAUvB,IAwI3BiI,kBApIiB1G,EAAOmC,GACxB7C,EAAIgB,IAAIN,EAAO,QAASmC,IAoIxBwE,gBAjIe3G,EAAOwB,GACtBlC,EAAIgB,IAAIN,EAAO,MAAOwB,IAiItBoF,oBA7HI/E,KACFC,QAAQC,IAAI,qCA6Hd8E,oBApHmB7G,EAAO8G,GAC1BxH,EAAIgB,IAAIN,EAAO,UAAW8G,IAoH1BC,kDACAC,mBA3HkBhH,EAAOsD,GACzBtD,EAAMiH,iBAAmB,EACzB3H,EAAIgB,IAAIN,EAAO,SAAUsD,IA0HzB4D,iBAzGgBlH,EAAOsE,OACnBC,EAAO,CACT,CACEG,KAAM,QACNyC,MAAO,QACPrC,MAAO,IACPC,SAAS,EACTqC,YAAa,qBAEf,CACE1C,KAAM,MACNI,MAAO,IACPC,SAAS,EACTqC,YAAa,mBAEf,CACE1C,KAAM,WACNI,MAAO,GACPC,SAAS,EACTqC,YAAa,wBAEf,CACE1C,KAAM,YACNI,MAAO,IACPC,SAAS,EACTqC,YAAa,sBAEf,CACE1C,KAAM,KACNI,MAAO,GACPC,SAAS,EACTqC,YAAa,mBAGXC,EAAa/C,EAASgD,QACtBC,EAASjD,EAASkD,MAClBC,EAAmBnD,EAASoD,IAAI,SAAAC,UACpCA,EAAQ7C,MAAQ,IAChB6C,EAAQ5C,SAAU,EAClB4C,EAAQP,sBAAiBO,EAAQjD,iBAAQiD,EAAQC,UAC1CD,IAETpD,GAAQ8C,YAAe9C,KAASkD,IAAkBF,QAC9C/C,EAAkBjF,EAAakF,QAAQzE,EAAM0E,OAE/CF,EADGA,GACe,IAEJxE,EAAMI,QAAUmE,EAChChF,EAAae,IAAIN,EAAM0E,KAAMF,GAC7BlF,EAAIgB,IAAIN,EAAO,OAAQuE,IAyDvB8B,WAAAA,EACAwB,wBA7CuB7H,GACvBA,EAAMuE,KAAK3E,QAAQ,SAAC+E,EAAKmD,GACnBnD,EAAIC,SACJoB,EAAY+B,SAASpD,EAAID,MAC3BpF,EAAIgB,IAAIN,EAAMuE,KAAKuD,GAAQ,WAAW,GAEtCxI,EAAIgB,IAAIN,EAAMuE,KAAKuD,GAAQ,WAAW,MAG1CzB,EAAWrG,EAAOA,EAAMuE,OAqCxByD,qBAlCoBhI,EAAOiI,GAC3B3I,EAAIgB,IAAIN,EAAO,WAAYiI,IAkC3B7B,cAAAA,EACA8B,mBA5BkBlI,EAAOmI,GACzB7I,EAAIgB,IAAIN,EAAO,SAAUmI,IA4BzBC,qBAzBoBpI,GACpBV,EAAIgB,IAAIN,EAAO,SAAU,OAyBzBqI,yBAtBwBrI,EAAOsD,GAC/BhE,EAAIgB,IAAIN,EAAO,eAAgBsD,+BC5JRhE,IAAAA,IAAKC,IAAAA,aAAcmF,IAAAA,KAAMlF,IAAAA,aAAc0G,IAAAA,cAAeD,IAAAA,uBACzEqC,EAAUC,EAAW,CAAEjJ,IAAAA,EAAKC,aAAAA,EAAcC,aAAAA,IAC9CgJ,EAAYC,EAAa,CAAEnJ,IAAAA,EAAKC,aAAAA,EAAc2G,cAAAA,EAAeD,uBAAAA,UAmBxD,CACLyC,YAAY,EACZ1I,MAnBY,CACZ0E,KAAMA,EACNiE,WAAW,EACXvI,OAAQ,EACRC,aAAc,EACdgD,SAAU,GACVpB,OAAQ,GACRC,UAAW,GACXC,MAAOjB,KAAKC,MAAQ,MACpBK,IAAKN,KAAKC,MACVa,MAAO,IACPxB,SAAS,EACT+D,KAAM,GACNqE,SAAU,GACVC,OAAQ,MAMRP,QAAAA,EACAE,UAAAA"}