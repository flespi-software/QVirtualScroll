{"version":3,"file":"intervals.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/intervals/actions.js","../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../src/store/modules/intervals/mutations.js","../src/store/modules/intervals/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","export default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter && state.sysFilter) {\n      params.filter = `${state.sysFilter},${state.filter}`\n    } else if (state.sysFilter && !state.filter) {\n      params.filter = `${state.sysFilter}`\n    } else if (!state.sysFilter && state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.begin && !state.reverse) {\n      if (!state.reverse) {\n        params.begin = Math.floor(state.begin / 1000)\n      }\n    }\n    if (state.end) {\n      params.end = Math.floor(state.end / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  function getCols ({ state, commit }, counters) {\n    let cols = []\n    const colsFromStorage = LocalStorage.getItem(state.name)\n    if (colsFromStorage && colsFromStorage[state.active] && colsFromStorage[state.active].length) {\n      cols = colsFromStorage[state.active]\n      /* adding sys cols after migration. 30.01.20 */\n      cols = cols.filter(col => !col.__dest)\n      if (!cols[0].__dest && !cols[cols.length - 1].__dest) {\n        cols.unshift({ name: 'actions', width: 100, display: true, __dest: 'action' })\n        cols.push({ name: 'etc', width: 150, display: true, __dest: 'etc' })\n      }\n      commit('updateCols', cols)\n    } else {\n      counters.unshift({ name: 'actions', width: 100, display: true, __dest: 'action' })\n      counters.push({ name: 'etc', width: 150, display: true, __dest: 'etc' })\n      commit('setCols', counters)\n    }\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1,\n          fields: 'end,begin'\n        }\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        let dateBegin = Date.now(),\n          dateEnd = Date.now()\n        if (data.result.length) {\n          dateBegin = Math.round(data.result[0].begin * 1000)\n          dateEnd = Math.round(data.result[0].end * 1000)\n        }\n        dateBegin = new Date(dateBegin)\n        dateBegin.setHours(0, 0, 0, 0)\n        dateEnd = new Date(dateEnd)\n        dateEnd.setHours(23, 59, 59, 999)\n        commit('setBegin', dateBegin.valueOf())\n        commit('setEnd', dateEnd.valueOf())\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function get ({ state, commit, rootState }) {\n    commit('reqStart')\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(getParams(state)) })\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMessages', data.result)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  const messageProcessing = (state, packet) => {\n    const message = JSON.parse(packet.payload)\n    const topic = packet.topic\n    const event = topic.split('/').slice(-1)[0]\n    switch (event) {\n      case 'created': {\n        const begin = state.begin,\n          end = state.end,\n          endDate = new Date(end),\n          intervalBegin = message.begin * 1000,\n          intervalEnd = message.end * 1000,\n          nowDate = new Date(),\n          isCurrentEndInTodayRange = endDate.getDate() === nowDate.getDate() && endDate.getMonth() === nowDate.getMonth() && endDate.getFullYear() === nowDate.getFullYear()\n        if ((intervalBegin <= end && intervalEnd >= begin) || isCurrentEndInTodayRange) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'updated': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'finished': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'deleted': {\n        if (state.messages[message.id]) {\n          Vue.delete(state.messages, message.id)\n        }\n        break\n      }\n    }\n  }\n\n  let messagesBuffer = [],\n    intervalId = 0\n  function initRenderLoop (state) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        messagesBuffer.forEach(message => messageProcessing(state, message))\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit }) {\n    intervalId = initRenderLoop(state)\n    await Vue.connector.subscribeIntervals(state.active, state.activeDevice, '+', (message, topic, packet) => {\n      messagesBuffer.push(packet)\n    }, { rh: 2 })\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (intervalId) { clearInterval(intervalId) }\n    await Vue.connector.unsubscribeIntervals(state.active, state.activeDevice, '+')\n  }\n\n  return {\n    get,\n    pollingGet,\n    initTime,\n    unsubscribePooling,\n    getCols\n  }\n}\n","module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","const defaultCols = ['begin', 'end', 'duration', 'timestamp', 'id']\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function setMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages = data.reduce((result, message) => {\n        result[message.id] = message\n        return result\n      }, {})\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'messages', [])\n    }\n  }\n\n  function clearMessages (state) {\n    Vue.set(state, 'messages', [])\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setBegin (state, begin) {\n    Vue.set(state, 'begin', begin)\n  }\n\n  function setEnd (state, end) {\n    Vue.set(state, 'end', end)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request intervals messages')\n    }\n  }\n\n  function setActive (state, id) {\n    state.newMessagesCount = 0\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.begin = 0\n    state.end = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeIntervals(state.active)\n  }\n\n  function setCols (state, counters) {\n    let cols = [\n      {\n        name: 'begin',\n        title: 'begin',\n        width: 170,\n        display: true,\n        description: 'Begin of interval'\n      },\n      {\n        name: 'end',\n        width: 170,\n        display: true,\n        description: 'End of interval'\n      },\n      {\n        name: 'duration',\n        width: 85,\n        display: true,\n        description: 'Duration of interval'\n      },\n      {\n        name: 'timestamp',\n        width: 170,\n        display: true,\n        description: 'Interval timestamp'\n      },\n      {\n        name: 'id',\n        width: 50,\n        display: true,\n        description: 'ID of interval'\n      }\n    ]\n    const actionsCol = counters.shift()\n    const etcCol = counters.pop()\n    counters.forEach(counter => {\n      Vue.set(counter, 'width', 100)\n      Vue.set(counter, 'display', true)\n      Vue.set(counter, 'description', `${counter.name}[${counter.type}]`)\n      cols.push(counter)\n    })\n    cols = [actionsCol, ...cols, etcCol]\n    let colsFromStorage = LocalStorage.getItem(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.active] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function updateCols (state, cols) {\n    let colsFromStorage = LocalStorage.getItem(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.active] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  function setDefaultCols (state) {\n    state.cols.forEach((col, index) => {\n      if (col.__dest) { return }\n      if (defaultCols.includes(col.name)) {\n        Vue.set(state.cols[index], 'display', true)\n      } else {\n        Vue.set(state.cols[index], 'display', false)\n      }\n    })\n    updateCols(state, state.cols)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  function setActiveDevice (state, id) {\n    Vue.set(state, 'activeDevice', id)\n  }\n\n  return {\n    setMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setBegin,\n    setEnd,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setDefaultCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setActiveDevice\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name: name,\n    isLoading: false,\n    active: 0,\n    activeDevice: 0,\n    messages: {},\n    filter: '',\n    sysFilter: '',\n    begin: Date.now() - 86400000,\n    end: Date.now(),\n    limit: 1000,\n    reverse: false,\n    cols: [],\n    selected: [],\n    sortBy: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","Vue","LocalStorage","errorHandler","errorsCheck","data","errors","forEach","errObject","Error","reason","state","commit","rootState","token","active","activeDevice","set","params","reverse","count","fields","connector","gw","getCalcsDevicesIntervals","JSON","stringify","resp","dateBegin","Date","now","dateEnd","result","length","Math","round","begin","end","setHours","valueOf","DEV","console","log","limit","filter","sysFilter","floor","messageProcessing","packet","message","parse","payload","topic","split","slice","endDate","intervalBegin","intervalEnd","nowDate","isCurrentEndInTodayRange","getDate","getMonth","getFullYear","messages","id","delete","messagesBuffer","intervalId","initRenderLoop","setInterval","subscribeIntervals","push","rh","clearInterval","unsubscribeIntervals","get","pollingGet","initTime","unsubscribePooling","getCols","counters","cols","colsFromStorage","getItem","name","col","__dest","unshift","width","display","arr","_Array$isArray","i","arr2","Array","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","defaultCols","newMessagesInterseptor","filterHandler","clearMessages","clearSelected","updateCols","setMessages","reduce","setLimit","setFilter","setBegin","setEnd","reqStart","setReverse","val","clear","setActive","newMessagesCount","setCols","title","description","actionsCol","shift","etcCol","pop","counter","type","setDefaultCols","index","includes","setSelected","indexes","setSortBy","field","clearSortBy","setActiveDevice","actions","getActions","mutations","getMutations","namespaced","isLoading","selected","sortBy"],"mappings":"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"}