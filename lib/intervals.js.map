{"version":3,"file":"intervals.js","sources":["../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/ls.js","../src/store/modules/intervals/actions.js","../src/store/modules/intervals/mutations.js","../src/store/modules/intervals/index.js"],"sourcesContent":["var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport { getColsLS, setColsLS } from '../ls'\nconst defaultCols = ['begin', 'end', 'duration', 'timestamp', 'id']\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = {}\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter && state.sysFilter) {\n      params.filter = `${state.sysFilter},${state.filter}`\n    } else if (state.sysFilter && !state.filter) {\n      params.filter = `${state.sysFilter}`\n    } else if (!state.sysFilter && state.filter) {\n      params.filter = `${state.filter}`\n    }\n    if (state.begin && !state.reverse) {\n      if (!state.reverse) {\n        params.begin = Math.floor(state.begin / 1000)\n      }\n    }\n    if (state.end) {\n      params.end = Math.floor(state.end / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    return params\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  async function migrateCols (active, cols) {\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.reduce((res, col) => {\n            if ((defaultCols.includes(col.name) || (!!col.__dest && col.display))) {\n              res.push({ name: col.name, width: col.width })\n            }\n            return res\n          }, [])\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: cols.reduce((res, col) => {\n            if (!col.custom) {\n              res.push({ name: col.name, width: 150 })\n            }\n            return res\n          }, [])\n        }\n      },\n      enum: {}\n    }\n    if (cols.length) {\n      const processedSchemaByCols = cols.reduce((res, col) => {\n        const isColDefault = defaultCols.includes(col.name)\n        res.isDefault = res.isDefault && ((!col.display && !isColDefault) || (col.display && (isColDefault || !!col.__dest)))\n        res.isProtocol = res.isProtocol && !col.custom\n        if (col.display) {\n          res.schema.push({ name: col.name, width: col.width })\n        }\n        res.enum[col.name] = { ...col }\n        delete res.enum[col.name].display\n        delete res.enum[col.name].width\n        return res\n      }, {\n        schema: [],\n        enum: {},\n        isDefault: true,\n        isProtocol: true\n      })\n      if (!processedSchemaByCols.isDefault || !processedSchemaByCols.isProtocol) {\n        const calcResp = await Vue.connector.gw.getCalcs(active, { fields: 'name' })\n        const calcData = calcResp.data\n        errorsCheck(calcData)\n        let name = _get(calcData, 'result[0].name', `Calc-${active}`)\n        name = `${name}[${active}]`\n        schema.activeSchema = name\n        schema.schemas[name] = {\n          name,\n          cols: processedSchemaByCols.schema\n        }\n      }\n      schema.enum = processedSchemaByCols.enum\n    }\n    return schema\n  }\n\n  function getDefaultColsSchema () {\n    const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        }\n      },\n      enum: defaultCols.reduce((res, name) => {\n        res[name] = { name }\n        if (name.match(/timestamp$/) || name === 'begin' || name === 'end') {\n          res[name].addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n          res[name].type = ''\n          res[name].unit = ''\n        }\n        return res\n      }, {})\n    }\n  }\n\n  async function migrateAll (state, data) {\n    for (const name in data) {\n      let colsSchema = data[name]\n      if (Array.isArray(colsSchema)) {\n        colsSchema = await migrateCols(state.active, colsSchema)\n        setColsLS(LocalStorage, state.lsNamespace, state.name, name, colsSchema)\n        data[name] = colsSchema\n      } else if (colsSchema.enum) {\n        delete colsSchema.enum\n        setColsLS(LocalStorage, state.lsNamespace, state.name, name, colsSchema)\n        data[name] = colsSchema\n      }\n    }\n    return data\n  }\n\n  async function getCols ({ state, commit }, counters) {\n    let colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n    migrateAll(colsFromStorage)\n    colsFromStorage = colsFromStorage[state.active]\n    const colsSchema = colsFromStorage || getDefaultColsSchema()\n    const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n      ? colsFromStorage['custom-cols-schemas'] : {}\n    colsSchema.enum = {}\n    colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n    const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n    counters.forEach(counter => {\n      const name = counter.name\n      const enumCol = {\n        name,\n        description: `${counter.name}[${counter.type}]`\n      }\n      const schemaCol = {\n        name,\n        width: 100\n      }\n      if (name.match(/timestamp$/) || name === 'begin' || name === 'end') {\n        enumCol.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n        enumCol.type = ''\n        enumCol.unit = ''\n        schemaCol.width = 190\n      }\n      colsSchema.schemas._protocol.cols.push(schemaCol)\n      colsSchema.enum[name] = enumCol\n    })\n    colsSchema.schemas._protocol.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    !colsFromStorage && colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n    commit('setCols', colsSchema)\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          reverse: true,\n          count: 1,\n          fields: 'end,begin'\n        }\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(params) })\n        const data = resp.data\n        errorsCheck(data)\n        let dateBegin = Date.now(),\n          dateEnd = Date.now()\n        if (data.result.length) {\n          dateBegin = Math.round(data.result[0].begin * 1000)\n          dateEnd = Math.round(data.result[0].end * 1000)\n        }\n        dateBegin = new Date(dateBegin)\n        dateBegin.setHours(0, 0, 0, 0)\n        dateEnd = new Date(dateEnd)\n        dateEnd.setHours(23, 59, 59, 999)\n        commit('setBegin', dateBegin.valueOf())\n        commit('setEnd', dateEnd.valueOf())\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function get ({ state, commit, rootState }) {\n    commit('reqStart')\n    if (rootState.token && state.active && state.activeDevice) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const resp = await Vue.connector.gw.getCalcsDevicesIntervals(state.active, state.activeDevice, 'all', { data: JSON.stringify(getParams(state)) })\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMessages', data.result)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  const messageProcessing = (state, packet) => {\n    const message = JSON.parse(packet.payload)\n    const topic = packet.topic\n    const event = topic.split('/').slice(-1)[0]\n    switch (event) {\n      case 'created': {\n        const begin = state.begin,\n          end = state.end,\n          endDate = new Date(end),\n          intervalBegin = message.begin * 1000,\n          intervalEnd = message.end * 1000,\n          nowDate = new Date(),\n          isCurrentEndInTodayRange = endDate.getDate() === nowDate.getDate() && endDate.getMonth() === nowDate.getMonth() && endDate.getFullYear() === nowDate.getFullYear()\n        if ((intervalBegin <= end && intervalEnd >= begin) || isCurrentEndInTodayRange) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'updated': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'finished': {\n        if (state.messages[message.id]) {\n          Vue.set(state.messages, message.id, message)\n        }\n        break\n      }\n      case 'deleted': {\n        if (state.messages[message.id]) {\n          Vue.delete(state.messages, message.id)\n        }\n        break\n      }\n    }\n  }\n\n  let messagesBuffer = [],\n    intervalId = 0\n  function initRenderLoop (state) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        messagesBuffer.forEach(message => messageProcessing(state, message))\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit }) {\n    intervalId = initRenderLoop(state)\n    await Vue.connector.subscribeIntervals(state.active, state.activeDevice, '+', (message, topic, packet) => {\n      messagesBuffer.push(packet)\n    }, { rh: 2 })\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    if (intervalId) { clearInterval(intervalId) }\n    await Vue.connector.unsubscribeIntervals(state.active, state.activeDevice, '+')\n  }\n\n  return {\n    get,\n    pollingGet,\n    initTime,\n    unsubscribePooling,\n    getCols\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor }) {\n  function setMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages = data.reduce((result, message) => {\n        result[message.id] = message\n        return result\n      }, {})\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'messages', [])\n    }\n  }\n\n  function clearMessages (state) {\n    Vue.set(state, 'messages', [])\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setBegin (state, begin) {\n    Vue.set(state, 'begin', begin)\n  }\n\n  function setEnd (state, end) {\n    Vue.set(state, 'end', end)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request intervals messages')\n    }\n  }\n\n  function setActive (state, id) {\n    state.newMessagesCount = 0\n    Vue.set(state, 'active', id)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    clearMessages(state)\n    state.filter = ''\n    state.begin = 0\n    state.end = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeIntervals(state.active)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.active, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setSortBy (state, field) {\n    Vue.set(state, 'sortBy', field)\n  }\n\n  function clearSortBy (state) {\n    Vue.set(state, 'sortBy', null)\n  }\n\n  function setActiveDevice (state, id) {\n    Vue.set(state, 'activeDevice', id)\n  }\n\n  return {\n    setMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setBegin,\n    setEnd,\n    reqStart,\n    setReverse,\n    clear,\n    setActive,\n    setCols,\n    updateCols,\n    setSelected,\n    clearSelected,\n    setSortBy,\n    clearSortBy,\n    setActiveDevice\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    active: 0,\n    activeDevice: 0,\n    messages: {},\n    filter: '',\n    sysFilter: '',\n    begin: Date.now() - 86400000,\n    end: Date.now(),\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    selected: [],\n    sortBy: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["module","obj","key","value","_Object$defineProperty","enumerable","configurable","writable","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","getColsLS","LocalStorage","lsNamespace","name","lsRouteToItem","colsFromStorage","lsItemName","lsPath","split","shift","join","appStorage","getItem","get","setColsLS","active","cols","customColsSchema","schemas","_default","_protocol","_unsaved","defaultColsSchema","activeSchema","set","defaultCols","Vue","errorHandler","schema","reduce","res","col","includes","__dest","display","push","width","custom","enum","length","processedSchemaByCols","isColDefault","isDefault","isProtocol","connector","gw","getCalcs","fields","calcResp","errorsCheck","calcData","data","_get","state","colsSchema","Array","isArray","migrateCols","counters","commit","migrateAll","locale","Date","toString","match","map","addition","slice","type","unit","getDefaultColsSchema","customColsSchemas","forEach","counter","enumCol","description","schemaCol","etc","errors","errObject","Error","reason","rootState","token","activeDevice","params","reverse","count","getCalcsDevicesIntervals","JSON","stringify","resp","dateBegin","now","dateEnd","result","Math","round","begin","end","setHours","valueOf","DEV","console","log","limit","filter","sysFilter","floor","messageProcessing","packet","message","parse","payload","topic","endDate","intervalBegin","intervalEnd","nowDate","isCurrentEndInTodayRange","getDate","getMonth","getFullYear","messages","id","delete","messagesBuffer","intervalId","setInterval","initRenderLoop","subscribeIntervals","rh","clearInterval","unsubscribeIntervals","pollingGet","initTime","unsubscribePooling","getCols","newMessagesInterseptor","clearMessages","clearSelected","setCols","setMessages","setLimit","setFilter","setBegin","setEnd","reqStart","setReverse","val","clear","setActive","newMessagesCount","updateCols","setSelected","indexes","setSortBy","field","clearSortBy","setActiveDevice","actions","getActions","mutations","getMutations","namespaced","isLoading","selected","sortBy"],"mappings":"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"}