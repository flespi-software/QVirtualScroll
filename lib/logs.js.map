{"version":3,"file":"logs.js","sources":["../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../src/store/modules/logs/defaultCols.js","../src/store/modules/ls.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/index.js","../src/store/modules/logs/mutations.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\nexport default [\n  {\n    name: 'timestamp',\n    width: 100,\n    description: 'Log event time',\n    addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n  },\n  {\n    name: 'event_code',\n    title: 'event',\n    width: 400,\n    description: 'Log event code and description'\n  },\n  {\n    name: 'ident',\n    width: 150,\n    description: 'Connected device\\'s identification string'\n  },\n  {\n    name: 'msgs',\n    width: 85,\n    description: 'Number of messages received'\n  },\n  {\n    name: 'recv',\n    width: 85,\n    description: 'Number of bytes received'\n  },\n  {\n    name: 'send',\n    width: 85,\n    description: 'Number of bytes sent'\n  },\n  {\n    name: 'source',\n    width: 150,\n    description: 'Connected device\\'s address'\n  },\n  {\n    name: 'host',\n    width: 150,\n    description: 'IP address from which HTTP request was received'\n  },\n  {\n    name: 'duration',\n    width: 85,\n    description: 'Connection duration in seconds'\n  },\n  {\n    name: 'transport',\n    width: 85,\n    description: 'Connected device\\'s transport: tcp, udp, http etc'\n  }\n]\n","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport defaultCols from './defaultCols'\nimport { getColsLS, setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = { filter: [] }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter.push(`${state.filter}`)\n    }\n    if (state.from) {\n      params.from = state.from / 1000\n    }\n    if (state.to) {\n      params.to = state.to / 1000\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    const headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  function migrateCols (active, initCols, cols) {\n    const defaultColsL = initCols || defaultCols\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultColsL.map(col => ({ ...col }))\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: defaultColsL.map(col => ({ ...col }))\n        }\n      },\n      enum: defaultColsL.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].display\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n    if (cols && cols.length && JSON.stringify(defaultColsL) !== JSON.stringify(schema.schemas._default.cols)) {\n      const name = `Custom[${active}]`\n      schema.activeSchema = name\n      schema.schemas[name] = {\n        name,\n        cols: cols.reduce((res, col) => {\n          if (col.display) {\n            res.push({ name: col.name, width: col.width })\n          }\n          return res\n        }, [])\n      }\n    }\n    return schema\n  }\n\n  function getDefaultColsSchema (cols) {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.map(col => ({ name: col.name, width: col.width }))\n        }\n      },\n      enum: cols.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n  }\n\n  function migrateAll (state, initCols, data) {\n    for (const name in data) {\n      let colsSchema = data[name]\n      if (Array.isArray(colsSchema)) {\n        colsSchema = migrateCols(state.origin, initCols, data[state.origin])\n        setColsLS(LocalStorage, state.lsNamespace, state.name, name, colsSchema)\n        data[name] = colsSchema\n      } else if (colsSchema.enum) {\n        delete colsSchema.enum\n        setColsLS(LocalStorage, state.lsNamespace, state.name, name, colsSchema)\n        data[name] = colsSchema\n      }\n    }\n    return data\n  }\n\n  function getCols ({ state, commit }, initCols) {\n    const colsSchema = getDefaultColsSchema(initCols || defaultCols)\n    colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n    /* LS processing */\n    const colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n    migrateAll(state, initCols, colsFromStorage)\n    const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n      ? colsFromStorage['custom-cols-schemas'] : {}\n    if (colsFromStorage && colsFromStorage[state.origin]) {\n      const colsSchemaLS = colsFromStorage[state.origin]\n      colsSchema.activeSchema = colsSchemaLS.activeSchema\n      colsSchema.schemas = { ...colsSchema.schemas, ...colsSchemaLS.schemas, ...customColsSchemas }\n    }\n    commit('setCols', colsSchema)\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  function getLogsEntries (origin, deletedStatus) {\n    const parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus\n        ? Vue.connector.http.platform.deleted\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    if (id === '*') {\n      return function (params) {\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else if (deletedStatus) {\n      return function (params) {\n        return namespace.logs.get(encodeURIComponent(`origin=${origin}`), { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      return function (params) {\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999.999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getLogs ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    let result = []\n    if (rootState.token && state.origin) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)({ data: params, headers: getHeaders(state) })\n        const data = resp.data\n        errorsCheck(data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now() / 1000\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Date.now() / 1000\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now() / 1000\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = _get(state, 'messages[0].timestamp', state.to) - 0.000001\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getLogs({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = _get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 0.000001\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = start / 1000\n        params.to = stop / 1000\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit, rootState }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}${state.cid ? `&cid=${state.cid}` : ''}` : undefined\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, prefix: filter })\n    state.realtimeEnabled = true\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          data: {\n            from: start,\n            to: end\n          },\n          headers: getHeaders(state)\n        }\n        if (state.filter) { params.data.filter = state.filter }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}${state.cid ? `&cid=${state.cid}` : ''}` : undefined\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { prefix: filter })\n    state.realtimeEnabled = false\n  }\n\n  async function newMessagesCheck ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    state.hasNewMessages = false\n    await Vue.connector.subscribeLogs(api, origin, '#', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2, properties })\n  }\n\n  return {\n    getLogs,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getHistory,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    pages: [],\n    filter: '',\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    isItemDeleted: false,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      messages[index]['x-flespi-message-key'] = messagesKeyPointer++\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      messagesIndexing(data)\n      const messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      limiting(state, { type: 'rt', count: data.length })\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Logs')\n    }\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    const api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n  }\n\n  function setOrigin (state, origin) {\n    Vue.set(state, 'origin', origin)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.origin, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Date.now() / 1000,\n      lastMessageIndex: state.messages.length - 1\n    }\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Date.now() / 1000\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    limiting,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setOrigin,\n    setCols,\n    updateCols,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n"],"names":["module","obj","key","value","Object","defineProperty","enumerable","configurable","writable","exports","require$$0","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","locale","Date","toString","match","name","width","description","addition","slice","title","getColsLS","LocalStorage","lsNamespace","colsFromStorage","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","getItem","get","setColsLS","active","cols","customColsSchema","defaultColsSchema","schemas","_default","undefined","_protocol","_unsaved","activeSchema","splitSchemas","set","Vue","errorHandler","getParams","state","params","limit","count","from","to","reverse","getHeaders","headers","cid","migrateCols","initCols","defaultColsL","defaultCols","schema","map","col","enum","reduce","res","display","JSON","stringify","errorsCheck","data","errors","error","errObject","Error","reason","getLogsEntries","origin","deletedStatus","parts","id","pop","namespace","connector","http","platform","deleted","result","part","logs","encodeURIComponent","getLogs","commit","rootState","token","isLoadingActive","isLoading","isItemDeleted","e","DEV","console","log","start","now","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","type","realtimeEnabled","messagesBuffer","api","replace","subscribeLogs","message","parse","rh","prefix","setInterval","initRenderLoop","clearInterval","unsubscribeLogs","getPrevPage","_get","getNextPage","Math","floor","getHistory","initTime","fields","date","round","timestamp","day","val","setHours","getFromTo","properties","userProperties","hasNewMessages","newMessagesCheck","getCols","colsSchema","__dest","etc","Array","isArray","migrateAll","customColsSchemas","colsSchemaLS","getMissedMessages","end","lastMessageIndex","offline","index","newMessagesInterseptor","actions","getActions","mutations","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","rtCount","setCols","setOffline","setReconnected","clearOfflineState","setHistoryMessages","setRTMessages","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","setReverse","clear","setOrigin","updateCols","setMissingMessages","setSelected","indexes","setItemDeletedStatus","flag","setCid","getMutations","namespaced","selected"],"mappings":"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"}