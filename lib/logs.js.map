{"version":3,"file":"logs.js","sources":["../src/store/modules/logs/index.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/mutations.js"],"sourcesContent":["import getActions from './actions'\nimport getMutations from './mutations'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  let actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name: name,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    filter: '',\n    sysFilter: '',\n    mode: null,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    cols: [],\n    newMessagesCount: 0,\n    offline: false,\n    selected: [],\n    isItemDeleted: false\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n","export default function ({ Vue, LocalStorage, errorHandler }) {\n  let locale = new Date().toString().match(/([-\\+][0-9]+)\\s/)[1]\n  let defaultCols = [\n    {\n      name: 'timestamp',\n      width: 100,\n      display: true,\n      description: 'Log event time',\n      addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n    },\n    {\n      name: 'event_code',\n      title: 'event',\n      width: 400,\n      display: true,\n      description: 'Log event code and description'\n    },\n    {\n      name: 'ident',\n      width: 150,\n      display: true,\n      description: 'Connected device\\'s identification string'\n    },\n    {\n      name: 'msgs',\n      width: 85,\n      display: true,\n      description: 'Number of messages received'\n    },\n    {\n      name: 'recv',\n      width: 85,\n      display: true,\n      description: 'Number of bytes received'\n    },\n    {\n      name: 'send',\n      width: 85,\n      display: true,\n      description: 'Number of bytes sent'\n    },\n    {\n      name: 'source',\n      width: 150,\n      display: true,\n      description: 'Connected device\\'s address'\n    },\n    {\n      name: 'host',\n      width: 150,\n      display: true,\n      description: 'IP address from which HTTP request was received'\n    },\n    {\n      name: 'duration',\n      width: 85,\n      display: true,\n      description: 'Connection duration in seconds'\n    },\n    {\n      name: 'transport',\n      width: 85,\n      display: true,\n      description: 'Connected device\\'s transport: tcp, udp, http etc'\n    }\n  ]\n  function getParams (state) {\n    let params = { filter: [] }\n    if (state.origin.indexOf('platform') !== -1 || state.isItemDeleted) {\n      params.filter.push(`event_origin=${state.origin}`)\n    }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter && state.sysFilter) {\n      params.filter.push(`${state.sysFilter}`)\n      if (state.mode !== 1) {\n        params.filter.push(`${state.filter}`)\n      }\n    } else if (state.sysFilter && !state.filter) {\n      params.filter.push(`${state.sysFilter}`)\n    } else if (!state.sysFilter && state.filter) {\n      if (state.mode === 0) {\n        params.filter.push(`${state.filter}`)\n      }\n    }\n    if (state.from && (!state.reverse || state.mode === 1)) {\n      if (!state.reverse) {\n        params.from = Math.floor(state.from / 1000)\n      } else if (state.mode === 1) {\n        params.from = Math.floor((Date.now() / 1000) - 172800)\n      }\n    }\n    if (state.to) {\n      if (state.mode === 1) {\n        state.to = Date.now()\n      }\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    let headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  function getCols ({ state, commit, rootState }, initCols) {\n    let cols = initCols || defaultCols,\n      colsFromStorage = LocalStorage.get.item(state.name)\n    if (colsFromStorage && colsFromStorage[state.origin] && colsFromStorage[state.origin].length) {\n      /* remove after sometime 12.07.19 */\n      colsFromStorage[state.origin].forEach((col) => {\n        if (col.name === 'timestamp') {\n          let locale = new Date().toString().match(/([-\\+][0-9]+)\\s/)[1]\n          col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n        }\n      })\n      cols = colsFromStorage[state.origin]\n    }\n    commit('setCols', cols)\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        let errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  function getLogs (origin, deletedStatus) {\n    let parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus || origin === '*'\n        ? Vue.connector.http.platform.customer\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    if (id !== '*' && !deletedStatus) {\n      return function (params) {\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      return function (params) {\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86400000\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        if (state.origin.indexOf('platform') !== -1 || state.isItemDeleted) {\n          params.data.filter = `event_origin=${state.origin}`\n        }\n        let resp = await getLogs(state.origin, state.isItemDeleted)(params)\n        let data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        commit('setDate', getFromTo(date).from)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function get ({ state, commit, rootState }, preaction) {\n    commit('reqStart')\n    if (preaction) {\n      let { name: preactionName, payload: preactionPayload } = preaction\n      commit('clearMessages')\n      commit(preactionName, preactionPayload)\n    }\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let currentMode = JSON.parse(JSON.stringify(state.mode))\n        let resp = await getLogs(state.origin, state.isItemDeleted)({ data: getParams(state), headers: getHeaders(state) })\n        /* if mode changed in time request */\n        if (currentMode !== state.mode) { return false }\n        let data = resp.data\n        errorsCheck(data)\n        if (preaction) {\n          if (data.result.length) {\n            commit('setMessages', data.result)\n            commit('postaction')\n          } else {\n            commit('postaction')\n            switch (preaction.name) { // logic for empty response after pagination scroll\n              case 'paginationPrev': {\n                commit('datePrev')\n                commit('paginationPrev')\n                await get({ state, commit, rootState })\n                commit('postaction')\n                break\n              }\n              case 'paginationNext': {\n                get({ state, commit, rootState }, { name: 'dateNext' })\n                commit('postaction')\n                break\n              }\n              default: {\n                commit('setMessages', data.result)\n                commit('postaction')\n              }\n            }\n          }\n        } else {\n          commit('setMessages', data.result)\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    let limit = state.limit,\n      filter = state.filter\n    commit('setReverse', true)\n    commit('setLimit', count)\n    commit('setFilter', '')\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n    commit('setFilter', filter)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        if (state.mode === 1) {\n          commit('setMessages', [...messagesBuffer])\n        }\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    let api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n\n    loopId = initRenderLoop(state, commit)\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      if (state.mode === 1) {\n        messagesBuffer.push(JSON.parse(message))\n      } else {\n        commit('setNewMessagesCount', state.newMessagesCount + 1)\n      }\n    }, { rh: 2, properties })\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let lastIndexOffline = state.messages.reduceRight((result, value, index) => {\n          if (result) {\n            return result\n          }\n          if (value.__connectionStatus === 'offline') {\n            result = index\n          }\n          return result\n        }, 0)\n        let params = {\n          data: {\n            from: !lastIndexOffline ? 0 : Math.floor(state.messages[lastIndexOffline - 1].timestamp) + 1,\n            to: Math.floor(state.messages[lastIndexOffline + 1].timestamp)\n          },\n          headers: getHeaders(state)\n        }\n        if (state.origin.indexOf('platform') !== -1) {\n          params.data.filter = `event_origin=${state.origin}`\n        }\n        let resp = await getLogs(state.origin, state.isItemDeleted)(params)\n        let data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastIndexOffline })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    let api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    console.log()\n    if (loopId) { clearInterval(loopId) }\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { properties })\n  }\n\n  return {\n    get,\n    pollingGet,\n    getHistory,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","export default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86400000\n    return { from, to }\n  }\n\n  function setMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n        if (state.mode === 1) {\n          data[data.length - 1].delimiter = true\n        }\n      }\n      if (state.mode === 1) {\n        Vue.set(state, 'from', Math.floor((data[data.length - 1].timestamp + 1) * 1000))\n        if (state.filter && filterHandler) {\n          data = filterHandler(state.filter, data)\n        }\n      }\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      let messages = state.messages.concat(data)\n      if (state.limit && state.mode === 1 && messages.length >= state.limit + (state.limit * 0.1)) { // rt limiting\n        let count = (messages.length - 1) - (state.limit - 1)\n        messages = messages.slice(count)\n        Vue.set(state, 'selected', state.selected.map((index) => index - count))\n      }\n      Vue.set(state, 'messages', messages)\n    } else {\n      if (state.mode === 1) {\n        Vue.set(state, 'from', state.to + 1000)\n      }\n      Vue.set(state, 'messages', [])\n    }\n  }\n\n  function clearMessages (state) {\n    newMessagesInterseptor && newMessagesInterseptor([])\n    Vue.set(state, 'messages', [])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      if (state.mode === 1) {\n        if (state.filter) {\n          state.messages.push({ 'x-flespi-filter-prev': state.filter })\n        }\n        if (value) {\n          state.messages.push({ 'x-flespi-filter-next': value })\n        }\n      }\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setMode (state, mode) {\n    switch (mode) {\n      case 0: {\n        let timeObj = state.from ? getFromTo(state.from) : getFromTo()\n        state.from = timeObj.from\n        state.to = timeObj.to\n        clearMessages(state)\n        break\n      }\n      case 1: {\n        let now = Date.now() - 6000\n        state.from = now - 1000\n        state.to = now\n        state.newMessagesCount = 0\n        break\n      }\n    }\n    Vue.set(state, 'mode', mode)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Logs')\n    }\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  function setDate (state, date) {\n    let timeObj = getFromTo(date)\n    state.from = timeObj.from\n    state.to = timeObj.to\n  }\n\n  function dateNext (state) {\n    let timeObj = getFromTo(state.from + 86400000)\n    state.from = timeObj.from\n    state.to = timeObj.to\n  }\n\n  function datePrev (state) {\n    let timeObj = getFromTo(state.from - 86400000)\n    state.from = timeObj.from\n    state.to = timeObj.to\n  }\n\n  function paginationPrev (state, firstTimestamp) {\n    state.reverse = true\n    setSysFilter(state, `timestamp>=${getFromTo(state.from).from / 1000}`)\n    if (firstTimestamp) {\n      state.from = getFromTo(firstTimestamp).from\n      state.to = firstTimestamp - 1000\n    }\n  }\n\n  function paginationNext (state, lastTimestamp) {\n    setSysFilter(state, `timestamp<=${state.to / 1000}`)\n    if (lastTimestamp) {\n      state.to = getFromTo(lastTimestamp).to\n      state.from = lastTimestamp + 1000\n    }\n  }\n\n  function postaction (state) {\n    let timeObj = getFromTo(state.from)\n    setFrom(state, state.from || timeObj.from)\n    setTo(state, timeObj.to)\n    if (state.reverse) {\n      setReverse(state, false)\n    }\n    let timestampIndex = state.sysFilter.indexOf('timestamp'),\n      sliceFromTo = (start, end) => string => `${start ? string.slice(0, start) : ''}${end ? string.slice(end) : ''}`\n    if (timestampIndex === 0) {\n      let commaIndex = state.sysFilter.indexOf(',', timestampIndex)\n      commaIndex !== -1\n        ? state.sysFilter = sliceFromTo(0, commaIndex + 1)(state.sysFilter)\n        : state.sysFilter = ''\n    } else if (timestampIndex > 0) {\n      let commaIndex = state.sysFilter.indexOf(',', timestampIndex)\n      commaIndex !== -1\n        ? state.sysFilter = sliceFromTo(timestampIndex, commaIndex + 1)(state.sysFilter)\n        : state.sysFilter = sliceFromTo(timestampIndex - 1)(state.sysFilter)\n    }\n  }\n\n  function setSysFilter (state, filter) {\n    if (state.sysFilter) {\n      state.sysFilter += `,${filter}`\n    } else {\n      state.sysFilter = filter\n    }\n  }\n\n  async function clear (state) {\n    let api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.mode = null\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n  }\n\n  function setOrigin (state, origin) {\n    state.newMessagesCount = 0\n    Vue.set(state, 'origin', origin)\n  }\n\n  function setCols (state, cols) {\n    let colsFromStorage = LocalStorage.get.item(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.origin] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  let updateCols = setCols\n\n  function setNewMessagesCount (state, count) {\n    Vue.set(state, 'newMessagesCount', count)\n  }\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'offline', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    data.forEach((val) => {\n      val.__status = 'missed'\n    })\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setMode,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    dateNext,\n    datePrev,\n    paginationPrev,\n    paginationNext,\n    setDate,\n    postaction,\n    clear,\n    setOrigin,\n    setSysFilter,\n    setCols,\n    updateCols,\n    setNewMessagesCount,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n"],"names":["Vue","LocalStorage","name","errorHandler","filterHandler","newMessagesInterseptor","namespaced","state","isLoading","origin","messages","filter","sysFilter","mode","from","to","cid","limit","reverse","cols","newMessagesCount","offline","selected","isItemDeleted","actions","locale","Date","toString","match","defaultCols","width","display","description","addition","slice","title","getHeaders","headers","errorsCheck","data","errors","forEach","error","errObject","Error","reason","getLogs","deletedStatus","parts","split","id","pop","namespace","connector","http","platform","customer","reduce","result","part","params","logs","get","JSON","stringify","commit","rootState","token","set","count","fields","indexOf","resp","date","now","length","Math","round","timestamp","val","setHours","DEV","console","log","preaction","preactionName","preactionPayload","payload","currentMode","parse","push","floor","join","messagesBuffer","loopId","initRenderLoop","setInterval","api","replace","properties","userProperties","subscribeLogs","message","rh","lastIndexOffline","reduceRight","value","index","__connectionStatus","clearInterval","unsubscribeLogs","undefined","pollingGet","getHistory","initTime","getCols","initCols","colsFromStorage","item","col","unsubscribePooling","getMissedMessages","getActions","mutations","getFromTo","setMessages","delimiter","concat","map","clearMessages","clearSelected","setFrom","setTo","setReverse","setSysFilter","setCols","setOffline","needPostOfflineMessage","setReconnected","setLimit","setFilter","setMode","timeObj","reqStart","dateNext","datePrev","paginationPrev","firstTimestamp","paginationNext","lastTimestamp","setDate","postaction","timestampIndex","sliceFromTo","start","end","string","commaIndex","clear","setOrigin","updateCols","setNewMessagesCount","setMissingMessages","__status","splice","setSelected","indexes","setItemDeletedStatus","flag","setCid","getMutations"],"mappings":"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"}