{"version":3,"file":"logs.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/mutations.js","../src/store/modules/logs/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import _get from 'lodash/get'\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  let locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n  let defaultCols = [\n    {\n      name: 'timestamp',\n      width: 100,\n      display: true,\n      description: 'Log event time',\n      addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n    },\n    {\n      name: 'event_code',\n      title: 'event',\n      width: 400,\n      display: true,\n      description: 'Log event code and description'\n    },\n    {\n      name: 'ident',\n      width: 150,\n      display: true,\n      description: 'Connected device\\'s identification string'\n    },\n    {\n      name: 'msgs',\n      width: 85,\n      display: true,\n      description: 'Number of messages received'\n    },\n    {\n      name: 'recv',\n      width: 85,\n      display: true,\n      description: 'Number of bytes received'\n    },\n    {\n      name: 'send',\n      width: 85,\n      display: true,\n      description: 'Number of bytes sent'\n    },\n    {\n      name: 'source',\n      width: 150,\n      display: true,\n      description: 'Connected device\\'s address'\n    },\n    {\n      name: 'host',\n      width: 150,\n      display: true,\n      description: 'IP address from which HTTP request was received'\n    },\n    {\n      name: 'duration',\n      width: 85,\n      display: true,\n      description: 'Connection duration in seconds'\n    },\n    {\n      name: 'transport',\n      width: 85,\n      display: true,\n      description: 'Connected device\\'s transport: tcp, udp, http etc'\n    }\n  ]\n  function getParams (state) {\n    let params = { filter: [] }\n    if (state.origin.indexOf('platform') !== -1 || state.isItemDeleted) {\n      params.filter.push(`event_origin=${state.origin}`)\n    }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      if (state.mode === 0) {\n        params.filter.push(`${state.filter}`)\n      }\n    }\n    if (state.from && (!state.reverse || state.mode === 1)) {\n      if (!state.reverse) {\n        params.from = Math.floor(state.from / 1000)\n      } else if (state.mode === 1) {\n        params.from = Math.floor((Date.now() / 1000) - 172800)\n      }\n    }\n    if (state.to) {\n      if (state.mode === 1) {\n        state.to = Date.now()\n      }\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    let headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  function getCols ({ state, commit, rootState }, initCols) {\n    let cols = initCols || defaultCols,\n      colsFromStorage = LocalStorage.getItem(state.name)\n    if (colsFromStorage && colsFromStorage[state.origin] && colsFromStorage[state.origin].length) {\n      /* remove after sometime 12.07.19 */\n      colsFromStorage[state.origin].forEach((col) => {\n        if (col.name === 'timestamp') {\n          let locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n          col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n        }\n      })\n      cols = colsFromStorage[state.origin]\n    }\n    commit('setCols', cols)\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        let errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  function getLogsEntries (origin, deletedStatus) {\n    let parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus || origin === '*'\n        ? Vue.connector.http.platform.customer\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    if (id !== '*' && !deletedStatus) {\n      return function (params) {\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      return function (params) {\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        if (state.origin.indexOf('platform') !== -1 || state.isItemDeleted) {\n          params.data.filter = `event_origin=${state.origin}`\n        }\n        let resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        let data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        let day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getLogs ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let currentMode = JSON.parse(JSON.stringify(state.mode))\n        let resp = await getLogsEntries(state.origin, state.isItemDeleted)({ data: params, headers: getHeaders(state) })\n        /* if mode changed in time request */\n        if (currentMode !== state.mode) { return false }\n        let data = resp.data\n        errorsCheck(data)\n        Vue.set(state, 'isLoading', false)\n        return data.result\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function get ({ state, commit, rootState }) {\n    let messages = await getLogs({ state, commit, rootState }, getParams(state))\n    commit('setMessages', messages)\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    let limit = state.limit,\n      filter = state.filter\n    commit('setReverse', true)\n    commit('setLimit', count)\n    commit('setFilter', '')\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n    commit('setFilter', filter)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      let to = Math.floor(_get(state, 'messages[0].timestamp', state.to) - 1)\n      let params = getParams(state)\n      params.to = to\n      params.reverse = true\n      let messages = await getLogs({ state, commit, rootState }, params)\n      commit('prependMessages', messages)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      let from = Math.floor(_get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 1)\n      let params = getParams(state)\n      params.from = from\n      let messages = await getLogs({ state, commit, rootState }, params)\n      commit('appendMessages', messages)\n      return messages.length\n    }\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        if (state.mode === 1) {\n          commit('setMessages', [...messagesBuffer])\n        }\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    let api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n\n    loopId = initRenderLoop(state, commit)\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      if (state.mode === 1) {\n        messagesBuffer.push(JSON.parse(message))\n      }\n    }, { rh: 2, properties })\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let lastIndexOffline = state.messages.reduceRight((result, value, index) => {\n          if (result) {\n            return result\n          }\n          if (value.__connectionStatus === 'offline') {\n            result = index\n          }\n          return result\n        }, 0)\n        let params = {\n          data: {\n            from: !lastIndexOffline ? 0 : Math.floor(state.messages[lastIndexOffline - 1].timestamp) + 1,\n            to: Math.floor(state.messages[lastIndexOffline + 1].timestamp)\n          },\n          headers: getHeaders(state)\n        }\n        if (state.origin.indexOf('platform') !== -1) {\n          params.data.filter = `event_origin=${state.origin}`\n        }\n        let resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        let data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastIndexOffline })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    let api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    if (loopId) { clearInterval(loopId) }\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { properties })\n  }\n\n  return {\n    getLogs,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getHistory,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","export default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86400000\n    return { from, to }\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n        data[data.length - 1].delimiter = true\n      }\n      Vue.set(state, 'from', Math.floor((data[data.length - 1].timestamp + 1) * 1000))\n      if (state.filter && filterHandler) {\n        data = filterHandler(state.filter, data)\n      }\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      let messages = state.messages.concat(data)\n      if (state.limit && messages.length >= state.limit + (state.limit * 0.1)) { // rt limiting\n        let count = (messages.length - 1) - (state.limit - 1)\n        messages = messages.slice(count)\n        Vue.set(state, 'selected', state.selected.map((index) => index - count))\n      }\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'from', state.to + 1000)\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n      if (state.limit && (state.limit * 3) < messages.length) {\n        let limit = state.limit * 3 // 3 pages in memory\n        let overCount = messages.length - limit\n        messages.splice(messages.length - overCount, overCount)\n      }\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      let messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      if (state.limit && (state.limit * 3) < messages.length) {\n        let limit = state.limit * 3 // 3 pages in memory\n        messages.splice(0, messages.length - limit)\n      }\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n      }\n      let messages = state.messages\n      messages = messages.concat(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      Vue.set(state, 'messages', messages)\n    } else {\n      Vue.set(state, 'messages', [])\n    }\n  }\n\n  function setMessages (state, data) {\n    if (state.mode === 1) {\n      setRTMessages(state, data)\n    } else {\n      setHistoryMessages(state, data)\n    }\n  }\n\n  function clearMessages (state) {\n    newMessagesInterseptor && newMessagesInterseptor([])\n    Vue.set(state, 'messages', [])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      if (state.mode === 1) {\n        if (state.filter) {\n          state.messages.push({ 'x-flespi-filter-prev': state.filter })\n        }\n        if (value) {\n          state.messages.push({ 'x-flespi-filter-next': value })\n        }\n      }\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setMode (state, mode) {\n    switch (mode) {\n      case 0: {\n        let timeObj = state.from ? getFromTo(state.from) : getFromTo()\n        state.from = timeObj.from\n        state.to = timeObj.to\n        clearMessages(state)\n        break\n      }\n      case 1: {\n        let now = Date.now() - 6000\n        state.from = now - 1000\n        state.to = now\n        break\n      }\n    }\n    Vue.set(state, 'mode', mode)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Logs')\n    }\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    let api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.mode = null\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n  }\n\n  function setOrigin (state, origin) {\n    Vue.set(state, 'origin', origin)\n  }\n\n  function setCols (state, cols) {\n    let colsFromStorage = LocalStorage.getItem(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.origin] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  let updateCols = setCols\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'offline', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    data.forEach((val) => {\n      val.__status = 'missed'\n    })\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setMode,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    // dateNext,\n    // datePrev,\n    // paginationPrev,\n    // paginationNext,\n    // setDate,\n    // postaction,\n    clear,\n    setOrigin,\n    // setSysFilter,\n    setCols,\n    updateCols,\n    // setNewMessagesCount,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  let actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name: name,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    filter: '',\n    mode: null,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    cols: [],\n    offline: false,\n    selected: [],\n    isItemDeleted: false\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","arr","_Array$isArray","i","arr2","Array","length","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","Vue","LocalStorage","errorHandler","locale","Date","match","defaultCols","name","width","display","description","addition","slice","title","getParams","state","params","filter","origin","indexOf","isItemDeleted","push","limit","count","mode","from","reverse","Math","floor","now","to","join","getHeaders","headers","cid","errorsCheck","data","errors","forEach","errObject","Error","reason","getLogsEntries","deletedStatus","parts","split","id","pop","namespace","connector","http","platform","customer","reduce","result","part","logs","get","JSON","stringify","commit","rootState","token","set","fields","resp","date","round","timestamp","setHours","day","DEV","console","log","getLogs","currentMode","parse","messages","isLoading","_get","messagesBuffer","loopId","initRenderLoop","setInterval","api","replace","properties","userProperties","subscribeLogs","message","rh","lastIndexOffline","reduceRight","index","__connectionStatus","clearInterval","unsubscribeLogs","getPrevPage","getNextPage","pollingGet","getHistory","initTime","getCols","initCols","cols","colsFromStorage","getItem","col","unsubscribePooling","getMissedMessages","filterHandler","newMessagesInterseptor","getFromTo","val","setMessages","delimiter","concat","selected","map","setRTMessages","setHistoryMessages","clearMessages","clearSelected","setCols","setOffline","needPostOfflineMessage","offline","setReconnected","prependMessages","splice","overCount","appendMessages","setLimit","setFilter","setMode","timeObj","setFrom","setTo","reqStart","setReverse","clear","setOrigin","updateCols","setMissingMessages","__status","setSelected","indexes","setItemDeletedStatus","flag","setCid","namespaced","actions","getActions","mutations","getMutations"],"mappings":"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"}