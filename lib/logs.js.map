{"version":3,"file":"logs.js","sources":["../src/store/modules/logs/defaultCols.js","../src/store/modules/ls.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/mutations.js","../src/infrastructure/logger.js","../src/store/modules/logs/index.js"],"sourcesContent":["const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\nexport default [\n  {\n    name: 'timestamp',\n    width: 100,\n    description: 'Log event time',\n    addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n  },\n  {\n    name: 'event_code',\n    title: 'event',\n    width: 400,\n    description: 'Log event code and description'\n  },\n  {\n    name: 'ident',\n    width: 150,\n    description: 'Connected device\\'s identification string'\n  },\n  {\n    name: 'msgs',\n    width: 85,\n    description: 'Number of messages received'\n  },\n  {\n    name: 'recv',\n    width: 85,\n    description: 'Number of bytes received'\n  },\n  {\n    name: 'send',\n    width: 85,\n    description: 'Number of bytes sent'\n  },\n  {\n    name: 'source',\n    width: 150,\n    description: 'Connected device\\'s address'\n  },\n  {\n    name: 'host',\n    width: 150,\n    description: 'IP address from which HTTP request was received'\n  },\n  {\n    name: 'duration',\n    width: 85,\n    description: 'Connection duration in seconds'\n  },\n  {\n    name: 'transport',\n    width: 85,\n    description: 'Connected device\\'s transport: tcp, udp, http etc'\n  }\n]\n","import _get from 'lodash/get'\nimport _set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = _get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    _set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport defaultCols from './defaultCols'\nimport { getColsLS, setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, errorHandler, logger }) {\n  function getParams (state) {\n    const params = { filter: [] }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter.push(`${state.filter}`)\n    }\n    if (state.from) {\n      params.from = state.from / 1000\n    }\n    if (state.to) {\n      params.to = state.to / 1000\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    if (state.itemtype) {\n      params.item_type = state.itemtype\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    const headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  function getDefaultColsSchema (cols) {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.map(col => ({ name: col.name, width: col.width }))\n        }\n      },\n      enum: cols.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n  }\n\n  function getCols ({ state, commit }, initCols) {\n    const colsSchema = getDefaultColsSchema(initCols || defaultCols)\n    colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n    /* LS processing */\n    const colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n    const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n      ? colsFromStorage['custom-cols-schemas'] : {}\n    if (colsFromStorage && colsFromStorage[state.origin]) {\n      const colsSchemaLS = colsFromStorage[state.origin]\n      colsSchema.activeSchema = colsSchemaLS.activeSchema\n      colsSchema.schemas = { ...colsSchema.schemas, ...colsSchemaLS.schemas, ...customColsSchemas }\n    }\n    commit('setCols', colsSchema)\n  }\n\n  function errorsCheck (commit, data) {\n    if (data.errors) {\n      commit('reqError', data.errors)\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    } else {\n      commit('reqFullfiled')\n    }\n  }\n\n  function getLogsEntries (origin, deletedStatus, commit) {\n    const parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus\n        ? Vue.connector.http.platform.deleted\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    let handler\n    if (id === '*') {\n      handler = function (params) {\n        commit('reqStart', { endpoint: 'getLogs', params })\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else if (deletedStatus) {\n      handler = function (params) {\n        commit('reqStart', { endpoint: 'getLogs', params })\n        return namespace.logs.get(encodeURIComponent(`origin=${origin}`), { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      handler = function (params) {\n        commit('reqStart', { endpoint: 'getLogs', params })\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n    return handler\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999.999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        if (state.itemtype) {\n          params.data.item_type = state.itemtype\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted, commit)(params, commit)\n        const data = resp.data\n        errorsCheck(commit, data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getLogs ({ state, commit, rootState }, params) {\n    let result = []\n    if (rootState.token && state.origin) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted, commit)({ data: params, headers: getHeaders(state) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function getLogsByInitTimestamp ({ state, commit, rootState }, initTimestamp) {\n    const params = getParams(state)\n    const beforeMessagesParams = {\n      ...params,\n      from: state.from / 1000,\n      to: initTimestamp,\n      reverse: true,\n      count: state.limit / 2\n    }\n    const beforeMessages = await getLogs({ state, commit, rootState }, beforeMessagesParams)\n    const afterMessagesParams = {\n      from: initTimestamp + 0.000001,\n      to: state.to / 1000,\n      count: state.limit - beforeMessages.length\n    }\n    if (state.itemtype) {\n      afterMessagesParams.item_type = state.itemtype\n    }\n    const afterMessages = await getLogs({ state, commit, rootState }, afterMessagesParams)\n    const messages = [...beforeMessages.reverse(), ...afterMessages]\n    return messages\n  }\n\n  async function get ({ state, commit, rootState }, initTimestamp) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      if (loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      const start = (Date.now() + 0.000999) / 1000\n      let messagesCount = 0\n      let messages = []\n      const params = getParams(state)\n      if (initTimestamp) {\n        messages = await getLogsByInitTimestamp({ state, commit, rootState }, initTimestamp)\n      } else {\n        messages = await getLogs({ state, commit, rootState }, params)\n      }\n      messagesCount += messages.length\n      const now = (Date.now() + 0.000999) / 1000\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        if (initTimestamp) {\n          const stop = (Date.now() + 0.000999) / 1000\n          const params = getParams(state)\n          params.from = start\n          params.to = stop\n          const missedMessages = await getLogs({ state, commit, rootState }, params)\n          messagesCount += missedMessages.length\n          messages.splice(0, 0, ...missedMessages)\n        }\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = _get(state, 'messages[0].timestamp', state.to) - 0.000001\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (state.itemtype) {\n        params.item_type = state.itemtype\n      }\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getLogs({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = _get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 0.000001\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = start / 1000\n        params.to = stop / 1000\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit, rootState }) {\n    let api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let f = []\n    if (state.filter) {\n      f.push(state.filter)\n    }\n    if (state.itemtype) {\n      f.push('origin_type==' + state.itemtype)\n      switch(state.itemtype) {\n        case 4:\n          origin = 'limits/+'\n          break\n        case 29:\n          origin = 'realms/+'\n          break\n        case 33:\n          origin = 'tokens/+'\n          break\n        case 37:\n          origin = 'grants/+'\n          break\n        case 38:\n          origin = 'identity-providers/+'\n          break\n        case 40:\n          api = 'gw'\n          origin = 'geofences/+'\n          break\n      }\n    }\n\n    const filter = f.length ? `$filter/payload=${encodeURIComponent(f.join('&&'))}${state.cid ? `&cid=${state.cid}` : ''}` : undefined\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, prefix: filter })\n    state.realtimeEnabled = true\n    logger.info(`subscribed to Logs ${api} ${origin} ${state.active} ${filter || ''}`)\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          data: {\n            from: start,\n            to: end\n          },\n          headers: getHeaders(state)\n        }\n        if (state.filter) { params.data.filter = state.filter }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted, commit)(params)\n        const data = resp.data\n        errorsCheck(commit, data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}${state.cid ? `&cid=${state.cid}` : ''}` : undefined\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { prefix: filter })\n    state.realtimeEnabled = false\n    logger.info(`unsubscribed to Logs ${api} ${origin} ${state.active} ${filter || ''}`)\n  }\n\n  async function newMessagesCheck ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    state.hasNewMessages = false\n    await Vue.connector.subscribeLogs(api, origin, '#', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2, properties })\n    logger.info(`newMessagesCheck subscribed to messagesLogs ${api} ${origin}`)\n  }\n\n  return {\n    getLogs,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getHistory,\n    getLogsByInitTimestamp,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor, logger }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      Object.defineProperty(messages[index], 'x-flespi-message-key', {\n        value: messagesKeyPointer++,\n        enumerable: false\n      })\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      messagesIndexing(data)\n      const messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      limiting(state, { type: 'rt', count: data.length })\n    }\n    logger.info(`setRTMessages: length: ${data.length}`)\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n    logger.info(`prependMessages: length: ${data.length}`)\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n    logger.info(`appendMessages: length: ${data.length}`)\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n    logger.info(`setHistoryMessages: length: ${data.length}, reverse:${state.reverse}`)\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n    logger.info(`clearMessages`)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n    logger.info(`limiting: ${type} - count: ${count}`)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n    logger.info(`setFilter: ${value}`)\n  }\n\n  function setItemtype (state, itemtype) {\n    Vue.set(state, 'itemtype', itemtype)\n    logger.info(`setItemtype: ${itemtype}`)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n    logger.info(`setFrom: ${from}`)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n    logger.info(`setTo: ${to}`)\n  }\n\n  function reqStart (state, params) {\n    logger.info(`reqStart: ${JSON.stringify(params)}`)\n  }\n\n  function reqFullfiled () {\n    logger.info(`reqFullfiled`)\n  }\n\n  function reqError (state, error) {\n    logger.info(`reqError: ${JSON.stringify(error)}`)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n    logger.info(`setReverse: ${val}`)\n  }\n\n  async function clear (state) {\n    const api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n    logger.info(`clear module`)\n    logger.info(`unsubscribeLogs ${api} ${origin}`)\n  }\n\n  function setOrigin (state, origin) {\n    Vue.set(state, 'origin', origin)\n    logger.info(`setOrigin: ${origin}`)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.origin, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Date.now() / 1000,\n      lastMessageIndex: state.messages.length - 1\n    }\n    logger.info(`setOffline`)\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Date.now() / 1000\n    logger.info(`setReconnected`)\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n    logger.info(`setMissingMessages: ${data.length}`)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n    logger.info(`setCid: ${cid}`)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    limiting,\n    setItemtype,\n    setFrom,\n    setTo,\n    reqStart,\n    reqFullfiled,\n    reqError,\n    setReverse,\n    clear,\n    setOrigin,\n    setCols,\n    updateCols,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n","export class Logger {\n  constructor (name = 'ModuleLogger') {\n    this.name = `[${name}]`\n  }\n\n  extendName (suffix) {\n    return new Logger(`${this.name}[${suffix}]`)\n  }\n\n  info () {\n    console.info(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n\n  error () {\n    console.error(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n\n  warn () {\n    console.warn(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\nimport Vue from 'vue'\nimport { Logger } from '../../../infrastructure/logger'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const logger = Vue.$logger ? Vue.$logger.extendName(name) : new Logger(name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler, logger }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor, logger })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    pages: [],\n    filter: '',\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    itemtype: null,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    isItemDeleted: false,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["locale","Date","toString","match","defaultCols","name","width","description","addition","slice","title","getColsLS","LocalStorage","lsNamespace","colsFromStorage","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","getItem","_get","getActions","Vue","errorHandler","logger","getParams","state","params","filter","limit","count","push","from","to","reverse","length","itemtype","item_type","getHeaders","headers","cid","errorsCheck","commit","data","errors","forEach","error","errObject","Error","reason","getLogsEntries","origin","deletedStatus","parts","id","pop","namespace","connector","http","platform","deleted","reduce","result","part","handler","endpoint","logs","get","JSON","stringify","encodeURIComponent","async","getLogs","rootState","token","isLoadingActive","isLoading","set","isItemDeleted","e","DEV","console","log","getLogsByInitTimestamp","initTimestamp","beforeMessagesParams","beforeMessages","afterMessagesParams","afterMessages","loopId","unsubscribePooling","start","now","messagesCount","messages","needRT","startRTRender","pollingGet","stop","missedMessages","splice","type","realtimeEnabled","messagesBuffer","api","replace","f","undefined","subscribeLogs","message","parse","rh","prefix","info","active","setInterval","initRenderLoop","clearInterval","unsubscribeLogs","getPrevPage","getNextPage","Math","floor","getHistory","initTime","fields","date","round","timestamp","day","val","setHours","getFromTo","properties","userProperties","hasNewMessages","newMessagesCheck","getCols","initCols","colsSchema","activeSchema","schemas","_default","cols","map","col","enum","res","__dest","etc","customColsSchemas","colsSchemaLS","getMissedMessages","end","lastMessageIndex","offline","index","getMutations","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","Object","defineProperty","value","enumerable","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","rtCount","setCols","customColsSchema","defaultColsSchema","_protocol","_unsaved","splitSchemas","_set","setColsLS","setOffline","setReconnected","clearOfflineState","setHistoryMessages","setRTMessages","prependMessages","appendMessages","setLimit","setFilter","setItemtype","setFrom","setTo","reqStart","reqFullfiled","reqError","setReverse","clear","setOrigin","updateCols","setMissingMessages","setSelected","indexes","setItemDeletedStatus","flag","setCid","Logger","constructor","this","extendName","suffix","Array","arguments","msg","warn","$logger","namespaced","selected","actions","mutations"],"mappings":"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"}