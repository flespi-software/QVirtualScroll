{"version":3,"file":"logs.js","sources":["../node_modules/@babel/runtime-corejs2/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../src/store/modules/logs/defaultCols.js","../src/store/modules/ls.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/mutations.js","../src/store/modules/logs/index.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var _Array$isArray = require(\"@babel/runtime-corejs2/core-js/array/is-array\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nvar _isIterable = require(\"@babel/runtime-corejs2/core-js/is-iterable\");\n\nvar _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nfunction _iterableToArray(iter) {\n  if (typeof _Symbol !== \"undefined\" && _isIterable(Object(iter))) return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","var _Array$from = require(\"@babel/runtime-corejs2/core-js/array/from\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\nexport default [\n  {\n    name: 'timestamp',\n    width: 100,\n    description: 'Log event time',\n    addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n  },\n  {\n    name: 'event_code',\n    title: 'event',\n    width: 400,\n    description: 'Log event code and description'\n  },\n  {\n    name: 'ident',\n    width: 150,\n    description: 'Connected device\\'s identification string'\n  },\n  {\n    name: 'msgs',\n    width: 85,\n    description: 'Number of messages received'\n  },\n  {\n    name: 'recv',\n    width: 85,\n    description: 'Number of bytes received'\n  },\n  {\n    name: 'send',\n    width: 85,\n    description: 'Number of bytes sent'\n  },\n  {\n    name: 'source',\n    width: 150,\n    description: 'Connected device\\'s address'\n  },\n  {\n    name: 'host',\n    width: 150,\n    description: 'IP address from which HTTP request was received'\n  },\n  {\n    name: 'duration',\n    width: 85,\n    description: 'Connection duration in seconds'\n  },\n  {\n    name: 'transport',\n    width: 85,\n    description: 'Connected device\\'s transport: tcp, udp, http etc'\n  }\n]\n","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    },\n    enum: cols.enum\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport defaultCols from './defaultCols'\nimport { getColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = { filter: [] }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter.push(`${state.filter}`)\n    }\n    if (state.from) {\n      params.from = Math.floor(state.from / 1000)\n    }\n    if (state.to) {\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    const headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  function migrateCols (active, initCols, cols) {\n    const defaultColsL = initCols || defaultCols\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultColsL.map(col => ({ ...col }))\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: defaultColsL.map(col => ({ ...col }))\n        }\n      },\n      enum: defaultColsL.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].display\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n    if (cols.length && JSON.stringify(defaultColsL) !== JSON.stringify(schema.schemas._default.cols)) {\n      const name = `Custom[${active}]`\n      schema.activeSchema = name\n      schema.schemas[name] = {\n        name,\n        cols: cols.reduce((res, col) => {\n          if (col.display) {\n            res.push({ name: col.name, width: col.width })\n          }\n          return res\n        }, [])\n      }\n    }\n    return schema\n  }\n\n  function getDefaultColsSchema (cols) {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.map(col => ({ name: col.name, width: col.width }))\n        }\n      },\n      enum: cols.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n  }\n\n  function getCols ({ state, commit }, initCols) {\n    let colsSchema = getDefaultColsSchema(initCols || defaultCols)\n    colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n    /* LS processing */\n    const colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n    if (colsFromStorage && colsFromStorage[state.origin]) {\n      colsSchema = Array.isArray(colsFromStorage[state.origin])\n        ? migrateCols(state.origin, initCols, colsFromStorage[state.origin])\n        : colsFromStorage[state.origin]\n    }\n    const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n      ? colsFromStorage['custom-cols-schemas'] : {}\n    colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n    commit('setCols', colsSchema)\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  function getLogsEntries (origin, deletedStatus) {\n    const parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus\n        ? Vue.connector.http.platform.deleted\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    if (id === '*') {\n      return function (params) {\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else if (deletedStatus) {\n      return function (params) {\n        return namespace.logs.get(encodeURIComponent(`origin=${origin}`), { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      return function (params) {\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getLogs ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    let result = []\n    if (rootState.token && state.origin) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)({ data: params, headers: getHeaders(state) })\n        const data = resp.data\n        errorsCheck(data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Math.floor(Date.now() / 1000)\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Math.floor(Date.now() / 1000)\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Math.floor(Date.now() / 1000)\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = Math.floor(_get(state, 'messages[0].timestamp', state.to) - 1)\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getLogs({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = Math.floor(_get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 1)\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = Math.floor(start / 1000)\n        params.to = Math.floor(stop / 1000)\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit, rootState }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, properties })\n    state.realtimeEnabled = true\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const lastIndexOffline = state.messages.reduceRight((result, value, index) => {\n          if (result) {\n            return result\n          }\n          if (value.__connectionStatus === 'offline') {\n            result = index\n          }\n          return result\n        }, 0)\n        const params = {\n          data: {\n            from: !lastIndexOffline ? 0 : Math.floor(state.messages[lastIndexOffline - 1].timestamp) + 1,\n            to: Math.floor(state.messages[lastIndexOffline + 1].timestamp)\n          },\n          headers: getHeaders(state)\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastIndexOffline })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { properties })\n    state.realtimeEnabled = false\n  }\n\n  async function newMessagesCheck ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    state.hasNewMessages = false\n    await Vue.connector.subscribeLogs(api, origin, '#', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2, properties })\n  }\n\n  return {\n    getLogs,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getHistory,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      messages[index]['x-flespi-message-key'] = messagesKeyPointer++\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      if (state.filter && filterHandler) {\n        data = filterHandler(state.filter, data)\n      }\n      messagesIndexing(data)\n      const messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      limiting(state, { type: 'rt', count: data.length })\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Logs')\n    }\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    const api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n  }\n\n  function setOrigin (state, origin) {\n    Vue.set(state, 'origin', origin)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.origin, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      state.messages.push({ __connectionStatus: 'offline', timestamp: Date.now() / 1000 })\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      state.messages.push({ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 })\n    }\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    data.forEach((val) => {\n      val['x-flespi-status'] = 'missed'\n    })\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    limiting,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setOrigin,\n    setCols,\n    updateCols,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    pages: [],\n    filter: '',\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    isItemDeleted: false,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["arr","len","length","i","arr2","Array","_Array$isArray","arrayLikeToArray","iter","_Symbol","_isIterable","Object","_Array$from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","obj","_Object$defineProperty","enumerable","configurable","writable","locale","Date","match","width","description","addition","title","getColsLS","LocalStorage","lsNamespace","colsFromStorage","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","getItem","get","setColsLS","active","cols","customColsSchema","schemas","_default","_protocol","_unsaved","defaultColsSchema","activeSchema","enum","set","Vue","errorHandler","getParams","state","params","filter","limit","count","push","from","Math","floor","to","reverse","getHeaders","headers","cid","errorsCheck","data","errors","forEach","errObject","Error","reason","getLogsEntries","origin","deletedStatus","parts","id","pop","namespace","connector","http","platform","deleted","reduce","result","part","logs","JSON","stringify","encodeURIComponent","commit","rootState","token","fields","isItemDeleted","resp","date","now","round","timestamp","setHours","day","newMessagesCheck","DEV","console","log","getLogs","isLoadingActive","isLoading","start","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","type","realtimeEnabled","_get","messagesBuffer","api","replace","properties","userProperties","subscribeLogs","message","parse","rh","setInterval","lastIndexOffline","reduceRight","index","__connectionStatus","clearInterval","unsubscribeLogs","hasNewMessages","getPrevPage","getNextPage","getHistory","initTime","getCols","initCols","colsSchema","defaultCols","map","col","res","__dest","etc","isArray","defaultColsL","schema","display","migrateCols","customColsSchemas","getMissedMessages","filterHandler","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","rtCount","setCols","setOffline","needPostOfflineMessage","offline","setReconnected","setHistoryMessages","setRTMessages","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","setReverse","val","clear","setOrigin","updateCols","setMissingMessages","setSelected","indexes","setItemDeletedStatus","flag","setCid","namespaced","selected","actions","getActions","mutations","getMutations"],"mappings":"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"}