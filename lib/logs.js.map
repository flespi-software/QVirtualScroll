{"version":3,"file":"logs.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../src/store/modules/logs/defaultCols.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/mutations.js","../src/store/modules/logs/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\nexport default [\n  {\n    name: 'timestamp',\n    width: 100,\n    display: true,\n    description: 'Log event time',\n    addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n  },\n  {\n    name: 'event_code',\n    title: 'event',\n    width: 400,\n    display: true,\n    description: 'Log event code and description'\n  },\n  {\n    name: 'ident',\n    width: 150,\n    display: true,\n    description: 'Connected device\\'s identification string'\n  },\n  {\n    name: 'msgs',\n    width: 85,\n    display: true,\n    description: 'Number of messages received'\n  },\n  {\n    name: 'recv',\n    width: 85,\n    display: true,\n    description: 'Number of bytes received'\n  },\n  {\n    name: 'send',\n    width: 85,\n    display: true,\n    description: 'Number of bytes sent'\n  },\n  {\n    name: 'source',\n    width: 150,\n    display: true,\n    description: 'Connected device\\'s address'\n  },\n  {\n    name: 'host',\n    width: 150,\n    display: true,\n    description: 'IP address from which HTTP request was received'\n  },\n  {\n    name: 'duration',\n    width: 85,\n    display: true,\n    description: 'Connection duration in seconds'\n  },\n  {\n    name: 'transport',\n    width: 85,\n    display: true,\n    description: 'Connected device\\'s transport: tcp, udp, http etc'\n  },\n  { name: 'etc', width: 150, display: true, __dest: 'etc' }\n]\n","import _get from 'lodash/get'\nimport defaultCols from './defaultCols'\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = { filter: [] }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter.push(`${state.filter}`)\n    }\n    if (state.from) {\n      params.from = Math.floor(state.from / 1000)\n    }\n    if (state.to) {\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    const headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      /* removing old store 12.03.20 */\n      const oldStore = LocalStorage.getItem(state.name)\n      if (oldStore) {\n        colsFromStorage = oldStore\n        LocalStorage.remove(state.name)\n      }\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName)\n      colsFromStorage = _get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name) || colsFromStorage\n    }\n    return colsFromStorage\n  }\n\n  function getCols ({ state, commit, rootState }, initCols) {\n    let cols = initCols || defaultCols\n    /* LS processing */\n    const colsFromStorage = getColsFromLS(state)\n    if (colsFromStorage && colsFromStorage[state.origin] && colsFromStorage[state.origin].length) {\n      /* remove after sometime 12.07.19 */\n      colsFromStorage[state.origin].forEach((col) => {\n        if (col.name === 'timestamp') {\n          const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\n          col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n        }\n      })\n      cols = colsFromStorage[state.origin]\n    }\n    if (!cols[cols.length - 1].__dest) {\n      cols.push({ name: 'etc', width: 150, display: true, __dest: 'etc' })\n    }\n    commit('setCols', cols)\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  function getLogsEntries (origin, deletedStatus) {\n    const parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus\n        ? Vue.connector.http.platform.deleted\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    if (id === '*') {\n      return function (params) {\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else if (deletedStatus) {\n      return function (params) {\n        return namespace.logs.get(encodeURIComponent(`origin=${origin}`), { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      return function (params) {\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getLogs ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    let result = []\n    if (rootState.token && state.origin) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)({ data: params, headers: getHeaders(state) })\n        const data = resp.data\n        errorsCheck(data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Math.floor(Date.now() / 1000)\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Math.floor(Date.now() / 1000)\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Math.floor(Date.now() / 1000)\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = Math.floor(_get(state, 'messages[0].timestamp', state.to) - 1)\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getLogs({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = Math.floor(_get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 1)\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = Math.floor(start / 1000)\n        params.to = Math.floor(stop / 1000)\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit, rootState }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, properties })\n    state.realtimeEnabled = true\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const lastIndexOffline = state.messages.reduceRight((result, value, index) => {\n          if (result) {\n            return result\n          }\n          if (value.__connectionStatus === 'offline') {\n            result = index\n          }\n          return result\n        }, 0)\n        const params = {\n          data: {\n            from: !lastIndexOffline ? 0 : Math.floor(state.messages[lastIndexOffline - 1].timestamp) + 1,\n            to: Math.floor(state.messages[lastIndexOffline + 1].timestamp)\n          },\n          headers: getHeaders(state)\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastIndexOffline })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { properties })\n    state.realtimeEnabled = false\n  }\n\n  async function newMessagesCheck ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    state.hasNewMessages = false\n    await Vue.connector.subscribeLogs(api, origin, '#', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2, properties })\n  }\n\n  return {\n    getLogs,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getHistory,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import defaultCols from './defaultCols'\nimport get from 'lodash/get'\nimport set from 'lodash/set'\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      messages[index]['x-flespi-message-key'] = messagesKeyPointer++\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      if (state.filter && filterHandler) {\n        data = filterHandler(state.filter, data)\n      }\n      messagesIndexing(data)\n      const messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      limiting(state, { type: 'rt', count: data.length })\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Logs')\n    }\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    const api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n  }\n\n  function setOrigin (state, origin) {\n    Vue.set(state, 'origin', origin)\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName)\n      colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name) || colsFromStorage\n    }\n    return colsFromStorage\n  }\n\n  function setColsToLS (state, cols) {\n    const colsFromStorage = getColsFromLS(state)\n    colsFromStorage[state.origin] = cols\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName)\n      set(appStorage, lsRouteToItem, colsFromStorage)\n      LocalStorage.set(lsItemName, appStorage)\n    } else {\n      LocalStorage.set(state.name, colsFromStorage)\n    }\n  }\n\n  function setCols (state, cols) {\n    setColsToLS(state, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setDefaultCols (state) {\n    setCols(state, defaultCols)\n  }\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      state.messages.push({ __connectionStatus: 'offline', timestamp: Date.now() / 1000 })\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      state.messages.push({ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 })\n    }\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    data.forEach((val) => {\n      val['x-flespi-status'] = 'missed'\n    })\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    limiting,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setOrigin,\n    setCols,\n    updateCols,\n    setDefaultCols,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    pages: [],\n    filter: '',\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    cols: [],\n    offline: false,\n    selected: [],\n    isItemDeleted: false,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","arr","_Array$isArray","i","arr2","Array","length","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","locale","Date","match","name","width","display","description","addition","slice","title","__dest","Vue","LocalStorage","errorHandler","getParams","state","params","filter","limit","count","push","from","Math","floor","to","reverse","join","getHeaders","headers","cid","errorsCheck","data","errors","forEach","errObject","Error","reason","getLogsEntries","origin","deletedStatus","parts","split","id","pop","namespace","connector","http","platform","deleted","reduce","result","part","logs","get","JSON","stringify","encodeURIComponent","commit","rootState","token","set","fields","isItemDeleted","resp","date","now","round","timestamp","setHours","day","newMessagesCheck","DEV","console","log","getLogs","isLoadingActive","isLoading","start","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","type","realtimeEnabled","_get","messagesBuffer","api","replace","properties","userProperties","subscribeLogs","message","parse","rh","setInterval","lastIndexOffline","reduceRight","index","__connectionStatus","clearInterval","unsubscribeLogs","hasNewMessages","getPrevPage","getNextPage","getHistory","initTime","getCols","initCols","cols","defaultCols","colsFromStorage","lsNamespace","oldStore","getItem","remove","lsPath","lsItemName","shift","lsRouteToItem","appStorage","getColsFromLS","col","getMissedMessages","filterHandler","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","rtCount","setColsToLS","setCols","setOffline","needPostOfflineMessage","offline","setReconnected","setHistoryMessages","setRTMessages","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","setReverse","val","clear","setOrigin","updateCols","setDefaultCols","setMissingMessages","setSelected","indexes","setItemDeletedStatus","flag","setCid","namespaced","selected","actions","getActions","mutations","getMutations"],"mappings":"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"}