{"version":3,"file":"logs.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/mutations.js","../src/store/modules/logs/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","export default function ({ Vue, LocalStorage, errorHandler }) {\n  let locale = new Date().toString().match(/([-\\+][0-9]+)\\s/)[1]\n  let defaultCols = [\n    {\n      name: 'timestamp',\n      width: 100,\n      display: true,\n      description: 'Log event time',\n      addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n    },\n    {\n      name: 'event_code',\n      title: 'event',\n      width: 400,\n      display: true,\n      description: 'Log event code and description'\n    },\n    {\n      name: 'ident',\n      width: 150,\n      display: true,\n      description: 'Connected device\\'s identification string'\n    },\n    {\n      name: 'msgs',\n      width: 85,\n      display: true,\n      description: 'Number of messages received'\n    },\n    {\n      name: 'recv',\n      width: 85,\n      display: true,\n      description: 'Number of bytes received'\n    },\n    {\n      name: 'send',\n      width: 85,\n      display: true,\n      description: 'Number of bytes sent'\n    },\n    {\n      name: 'source',\n      width: 150,\n      display: true,\n      description: 'Connected device\\'s address'\n    },\n    {\n      name: 'host',\n      width: 150,\n      display: true,\n      description: 'IP address from which HTTP request was received'\n    },\n    {\n      name: 'duration',\n      width: 85,\n      display: true,\n      description: 'Connection duration in seconds'\n    },\n    {\n      name: 'transport',\n      width: 85,\n      display: true,\n      description: 'Connected device\\'s transport: tcp, udp, http etc'\n    }\n  ]\n  function getParams (state) {\n    let params = { filter: [] }\n    if (state.origin.indexOf('platform') !== -1 || state.isItemDeleted) {\n      params.filter.push(`event_origin=${state.origin}`)\n    }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter && state.sysFilter) {\n      params.filter.push(`${state.sysFilter}`)\n      if (state.mode !== 1) {\n        params.filter.push(`${state.filter}`)\n      }\n    } else if (state.sysFilter && !state.filter) {\n      params.filter.push(`${state.sysFilter}`)\n    } else if (!state.sysFilter && state.filter) {\n      if (state.mode === 0) {\n        params.filter.push(`${state.filter}`)\n      }\n    }\n    if (state.from && (!state.reverse || state.mode === 1)) {\n      if (!state.reverse) {\n        params.from = Math.floor(state.from / 1000)\n      } else if (state.mode === 1) {\n        params.from = Math.floor((Date.now() / 1000) - 172800)\n      }\n    }\n    if (state.to) {\n      if (state.mode === 1) {\n        state.to = Date.now()\n      }\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    let headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  function getCols ({ state, commit, rootState }, initCols) {\n    let cols = initCols || defaultCols,\n      colsFromStorage = LocalStorage.getItem(state.name)\n    if (colsFromStorage && colsFromStorage[state.origin] && colsFromStorage[state.origin].length) {\n      /* remove after sometime 12.07.19 */\n      colsFromStorage[state.origin].forEach((col) => {\n        if (col.name === 'timestamp') {\n          let locale = new Date().toString().match(/([-\\+][0-9]+)\\s/)[1]\n          col.addition = `${locale.slice(0, 3)}:${locale.slice(3)}`\n        }\n      })\n      cols = colsFromStorage[state.origin]\n    }\n    commit('setCols', cols)\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        let errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  function getLogs (origin, deletedStatus) {\n    let parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus || origin === '*'\n        ? Vue.connector.http.platform.customer\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    if (id !== '*' && !deletedStatus) {\n      return function (params) {\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      return function (params) {\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86400000\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        if (state.origin.indexOf('platform') !== -1 || state.isItemDeleted) {\n          params.data.filter = `event_origin=${state.origin}`\n        }\n        let resp = await getLogs(state.origin, state.isItemDeleted)(params)\n        let data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        commit('setDate', getFromTo(date).from)\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function get ({ state, commit, rootState }, preaction) {\n    commit('reqStart')\n    if (preaction) {\n      let { name: preactionName, payload: preactionPayload } = preaction\n      commit('clearMessages')\n      commit(preactionName, preactionPayload)\n    }\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let currentMode = JSON.parse(JSON.stringify(state.mode))\n        let resp = await getLogs(state.origin, state.isItemDeleted)({ data: getParams(state), headers: getHeaders(state) })\n        /* if mode changed in time request */\n        if (currentMode !== state.mode) { return false }\n        let data = resp.data\n        errorsCheck(data)\n        if (preaction) {\n          if (data.result.length) {\n            commit('setMessages', data.result)\n            commit('postaction')\n          } else {\n            commit('postaction')\n            switch (preaction.name) { // logic for empty response after pagination scroll\n              case 'paginationPrev': {\n                commit('datePrev')\n                commit('paginationPrev')\n                await get({ state, commit, rootState })\n                commit('postaction')\n                break\n              }\n              case 'paginationNext': {\n                get({ state, commit, rootState }, { name: 'dateNext' })\n                commit('postaction')\n                break\n              }\n              default: {\n                commit('setMessages', data.result)\n                commit('postaction')\n              }\n            }\n          }\n        } else {\n          commit('setMessages', data.result)\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    let limit = state.limit,\n      filter = state.filter\n    commit('setReverse', true)\n    commit('setLimit', count)\n    commit('setFilter', '')\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n    commit('setFilter', filter)\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        if (state.mode === 1) {\n          commit('setMessages', [...messagesBuffer])\n        }\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n\n  async function pollingGet ({ state, commit, rootState }) {\n    let api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n\n    loopId = initRenderLoop(state, commit)\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      if (state.mode === 1) {\n        messagesBuffer.push(JSON.parse(message))\n      } else {\n        commit('setNewMessagesCount', state.newMessagesCount + 1)\n      }\n    }, { rh: 2, properties })\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        let lastIndexOffline = state.messages.reduceRight((result, value, index) => {\n          if (result) {\n            return result\n          }\n          if (value.__connectionStatus === 'offline') {\n            result = index\n          }\n          return result\n        }, 0)\n        let params = {\n          data: {\n            from: !lastIndexOffline ? 0 : Math.floor(state.messages[lastIndexOffline - 1].timestamp) + 1,\n            to: Math.floor(state.messages[lastIndexOffline + 1].timestamp)\n          },\n          headers: getHeaders(state)\n        }\n        if (state.origin.indexOf('platform') !== -1) {\n          params.data.filter = `event_origin=${state.origin}`\n        }\n        let resp = await getLogs(state.origin, state.isItemDeleted)(params)\n        let data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastIndexOffline })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    let api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    console.log()\n    if (loopId) { clearInterval(loopId) }\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { properties })\n  }\n\n  return {\n    get,\n    pollingGet,\n    getHistory,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","export default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  function getFromTo (val) {\n    let now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86400000\n    return { from, to }\n  }\n\n  function setMessages (state, data) {\n    if (data && data.length) {\n      if (state.reverse) {\n        data.reverse()\n        if (state.mode === 1) {\n          data[data.length - 1].delimiter = true\n        }\n      }\n      if (state.mode === 1) {\n        Vue.set(state, 'from', Math.floor((data[data.length - 1].timestamp + 1) * 1000))\n        if (state.filter && filterHandler) {\n          data = filterHandler(state.filter, data)\n        }\n      }\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      let messages = state.messages.concat(data)\n      if (state.limit && state.mode === 1 && messages.length >= state.limit + (state.limit * 0.1)) { // rt limiting\n        let count = (messages.length - 1) - (state.limit - 1)\n        messages = messages.slice(count)\n        Vue.set(state, 'selected', state.selected.map((index) => index - count))\n      }\n      Vue.set(state, 'messages', messages)\n    } else {\n      if (state.mode === 1) {\n        Vue.set(state, 'from', state.to + 1000)\n      }\n      Vue.set(state, 'messages', [])\n    }\n  }\n\n  function clearMessages (state) {\n    newMessagesInterseptor && newMessagesInterseptor([])\n    Vue.set(state, 'messages', [])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      if (state.mode === 1) {\n        if (state.filter) {\n          state.messages.push({ 'x-flespi-filter-prev': state.filter })\n        }\n        if (value) {\n          state.messages.push({ 'x-flespi-filter-next': value })\n        }\n      }\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setMode (state, mode) {\n    switch (mode) {\n      case 0: {\n        let timeObj = state.from ? getFromTo(state.from) : getFromTo()\n        state.from = timeObj.from\n        state.to = timeObj.to\n        clearMessages(state)\n        break\n      }\n      case 1: {\n        let now = Date.now() - 6000\n        state.from = now - 1000\n        state.to = now\n        state.newMessagesCount = 0\n        break\n      }\n    }\n    Vue.set(state, 'mode', mode)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Logs')\n    }\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  function setDate (state, date) {\n    let timeObj = getFromTo(date)\n    state.from = timeObj.from\n    state.to = timeObj.to\n  }\n\n  function dateNext (state) {\n    let timeObj = getFromTo(state.from + 86400000)\n    state.from = timeObj.from\n    state.to = timeObj.to\n  }\n\n  function datePrev (state) {\n    let timeObj = getFromTo(state.from - 86400000)\n    state.from = timeObj.from\n    state.to = timeObj.to\n  }\n\n  function paginationPrev (state, firstTimestamp) {\n    state.reverse = true\n    setSysFilter(state, `timestamp>=${getFromTo(state.from).from / 1000}`)\n    if (firstTimestamp) {\n      state.from = getFromTo(firstTimestamp).from\n      state.to = firstTimestamp - 1000\n    }\n  }\n\n  function paginationNext (state, lastTimestamp) {\n    setSysFilter(state, `timestamp<=${state.to / 1000}`)\n    if (lastTimestamp) {\n      state.to = getFromTo(lastTimestamp).to\n      state.from = lastTimestamp + 1000\n    }\n  }\n\n  function postaction (state) {\n    let timeObj = getFromTo(state.from)\n    setFrom(state, state.from || timeObj.from)\n    setTo(state, timeObj.to)\n    if (state.reverse) {\n      setReverse(state, false)\n    }\n    let timestampIndex = state.sysFilter.indexOf('timestamp'),\n      sliceFromTo = (start, end) => string => `${start ? string.slice(0, start) : ''}${end ? string.slice(end) : ''}`\n    if (timestampIndex === 0) {\n      let commaIndex = state.sysFilter.indexOf(',', timestampIndex)\n      commaIndex !== -1\n        ? state.sysFilter = sliceFromTo(0, commaIndex + 1)(state.sysFilter)\n        : state.sysFilter = ''\n    } else if (timestampIndex > 0) {\n      let commaIndex = state.sysFilter.indexOf(',', timestampIndex)\n      commaIndex !== -1\n        ? state.sysFilter = sliceFromTo(timestampIndex, commaIndex + 1)(state.sysFilter)\n        : state.sysFilter = sliceFromTo(timestampIndex - 1)(state.sysFilter)\n    }\n  }\n\n  function setSysFilter (state, filter) {\n    if (state.sysFilter) {\n      state.sysFilter += `,${filter}`\n    } else {\n      state.sysFilter = filter\n    }\n  }\n\n  async function clear (state) {\n    let api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.mode = null\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n  }\n\n  function setOrigin (state, origin) {\n    state.newMessagesCount = 0\n    Vue.set(state, 'origin', origin)\n  }\n\n  function setCols (state, cols) {\n    let colsFromStorage = LocalStorage.getItem(state.name)\n    if (!colsFromStorage) {\n      colsFromStorage = {}\n    }\n    colsFromStorage[state.origin] = cols\n    LocalStorage.set(state.name, colsFromStorage)\n    Vue.set(state, 'cols', cols)\n  }\n\n  let updateCols = setCols\n\n  function setNewMessagesCount (state, count) {\n    Vue.set(state, 'newMessagesCount', count)\n  }\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'offline', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      setMessages(state, [{ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 }])\n    }\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    data.forEach((val) => {\n      val.__status = 'missed'\n    })\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    setMode,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    dateNext,\n    datePrev,\n    paginationPrev,\n    paginationNext,\n    setDate,\n    postaction,\n    clear,\n    setOrigin,\n    setSysFilter,\n    setCols,\n    updateCols,\n    setNewMessagesCount,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  let actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name: name,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    filter: '',\n    sysFilter: '',\n    mode: null,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    cols: [],\n    newMessagesCount: 0,\n    offline: false,\n    selected: [],\n    isItemDeleted: false\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","arr","_Array$isArray","i","arr2","Array","length","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","Vue","LocalStorage","errorHandler","locale","Date","match","defaultCols","name","width","display","description","addition","slice","title","getHeaders","state","headers","cid","errorsCheck","data","errors","forEach","error","errObject","Error","reason","getLogs","origin","deletedStatus","parts","split","id","pop","namespace","connector","http","platform","customer","reduce","result","part","params","logs","get","JSON","stringify","preaction","commit","rootState","preactionName","preactionPayload","payload","token","set","currentMode","parse","mode","isItemDeleted","filter","indexOf","push","limit","count","sysFilter","from","reverse","Math","floor","now","to","join","resp","DEV","console","log","messagesBuffer","loopId","initRenderLoop","setInterval","pollingGet","api","replace","properties","userProperties","subscribeLogs","message","newMessagesCount","rh","getHistory","initTime","fields","date","round","timestamp","setHours","getCols","initCols","cols","colsFromStorage","getItem","col","unsubscribePooling","clearInterval","unsubscribeLogs","undefined","getMissedMessages","lastIndexOffline","messages","reduceRight","value","index","__connectionStatus","filterHandler","newMessagesInterseptor","getFromTo","val","setMessages","delimiter","concat","selected","map","clearMessages","clearSelected","setFrom","setTo","setReverse","setSysFilter","setCols","setOffline","needPostOfflineMessage","offline","setReconnected","setLimit","setFilter","setMode","timeObj","reqStart","dateNext","datePrev","paginationPrev","firstTimestamp","paginationNext","lastTimestamp","setDate","postaction","sliceFromTo","start","end","string","timestampIndex","commaIndex","clear","setOrigin","updateCols","setNewMessagesCount","setMissingMessages","__status","splice","setSelected","indexes","setItemDeletedStatus","flag","setCid","namespaced","isLoading","actions","getActions","mutations","getMutations"],"mappings":"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"}