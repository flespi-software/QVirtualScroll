{"version":3,"file":"logs.js","sources":["../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../src/store/modules/logs/defaultCols.js","../src/store/modules/ls.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/index.js","../src/store/modules/logs/mutations.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\nexport default [\n  {\n    name: 'timestamp',\n    width: 100,\n    description: 'Log event time',\n    addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n  },\n  {\n    name: 'event_code',\n    title: 'event',\n    width: 400,\n    description: 'Log event code and description'\n  },\n  {\n    name: 'ident',\n    width: 150,\n    description: 'Connected device\\'s identification string'\n  },\n  {\n    name: 'msgs',\n    width: 85,\n    description: 'Number of messages received'\n  },\n  {\n    name: 'recv',\n    width: 85,\n    description: 'Number of bytes received'\n  },\n  {\n    name: 'send',\n    width: 85,\n    description: 'Number of bytes sent'\n  },\n  {\n    name: 'source',\n    width: 150,\n    description: 'Connected device\\'s address'\n  },\n  {\n    name: 'host',\n    width: 150,\n    description: 'IP address from which HTTP request was received'\n  },\n  {\n    name: 'duration',\n    width: 85,\n    description: 'Connection duration in seconds'\n  },\n  {\n    name: 'transport',\n    width: 85,\n    description: 'Connected device\\'s transport: tcp, udp, http etc'\n  }\n]\n","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport defaultCols from './defaultCols'\nimport { getColsLS, setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, errorHandler, logger }) {\n  function getParams (state) {\n    const params = { filter: [] }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter.push(`${state.filter}`)\n    }\n    if (state.from) {\n      params.from = state.from / 1000\n    }\n    if (state.to) {\n      params.to = state.to / 1000\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    const headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  function getDefaultColsSchema (cols) {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.map(col => ({ name: col.name, width: col.width }))\n        }\n      },\n      enum: cols.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n  }\n\n  function getCols ({ state, commit }, initCols) {\n    const colsSchema = getDefaultColsSchema(initCols || defaultCols)\n    colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n    /* LS processing */\n    const colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n    const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n      ? colsFromStorage['custom-cols-schemas'] : {}\n    if (colsFromStorage && colsFromStorage[state.origin]) {\n      const colsSchemaLS = colsFromStorage[state.origin]\n      colsSchema.activeSchema = colsSchemaLS.activeSchema\n      colsSchema.schemas = { ...colsSchema.schemas, ...colsSchemaLS.schemas, ...customColsSchemas }\n    }\n    commit('setCols', colsSchema)\n  }\n\n  function errorsCheck (commit, data) {\n    if (data.errors) {\n      commit('reqError', data.errors)\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    } else {\n      commit('reqFullfiled')\n    }\n  }\n\n  function getLogsEntries (origin, deletedStatus, commit) {\n    const parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus\n        ? Vue.connector.http.platform.deleted\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    let handler\n    if (id === '*') {\n      handler = function (params) {\n        commit('reqStart', { endpoint: 'getLogs', params })\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else if (deletedStatus) {\n      handler = function (params) {\n        commit('reqStart', { endpoint: 'getLogs', params })\n        return namespace.logs.get(encodeURIComponent(`origin=${origin}`), { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      handler = function (params) {\n        commit('reqStart', { endpoint: 'getLogs', params })\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n    return handler\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999.999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted, commit)(params, commit)\n        const data = resp.data\n        errorsCheck(commit, data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getLogs ({ state, commit, rootState }, params) {\n    let result = []\n    if (rootState.token && state.origin) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted, commit)({ data: params, headers: getHeaders(state) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function getLogsByInitTimestamp ({ state, commit, rootState }, initTimestamp) {\n    const params = getParams(state)\n    const beforeMessagesParams = {\n      ...params,\n      from: state.from / 1000,\n      to: initTimestamp,\n      reverse: true,\n      count: state.limit / 2\n    }\n    const beforeMessages = await getLogs({ state, commit, rootState }, beforeMessagesParams)\n    const afterMessagesParams = {\n      from: initTimestamp + 0.000001,\n      to: state.to / 1000,\n      count: state.limit - beforeMessages.length\n    }\n    const afterMessages = await getLogs({ state, commit, rootState }, afterMessagesParams)\n    const messages = [...beforeMessages.reverse(), ...afterMessages]\n    return messages\n  }\n\n  async function get ({ state, commit, rootState }, initTimestamp) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      if (loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      const start = Date.now() / 1000\n      let messagesCount = 0\n      let messages = []\n      const params = getParams(state)\n      if (initTimestamp) {\n        messages = await getLogsByInitTimestamp({ state, commit, rootState }, initTimestamp)\n      } else {\n        messages = await getLogs({ state, commit, rootState }, params)\n      }\n      messagesCount += messages.length\n      const now = Date.now() / 1000\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now() / 1000\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(0, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = _get(state, 'messages[0].timestamp', state.to) - 0.000001\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getLogs({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = _get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 0.000001\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = start / 1000\n        params.to = stop / 1000\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit, rootState }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}${state.cid ? `&cid=${state.cid}` : ''}` : undefined\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, prefix: filter })\n    state.realtimeEnabled = true\n    logger.info(`subscribed to Logs ${api} ${origin} ${state.active} ${filter || ''}`)\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          data: {\n            from: start,\n            to: end\n          },\n          headers: getHeaders(state)\n        }\n        if (state.filter) { params.data.filter = state.filter }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted, commit)(params)\n        const data = resp.data\n        errorsCheck(commit, data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}${state.cid ? `&cid=${state.cid}` : ''}` : undefined\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { prefix: filter })\n    state.realtimeEnabled = false\n    logger.info(`unsubscribed to Logs ${api} ${origin} ${state.active} ${filter || ''}`)\n  }\n\n  async function newMessagesCheck ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    state.hasNewMessages = false\n    await Vue.connector.subscribeLogs(api, origin, '#', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2, properties })\n    logger.info(`newMessagesCheck subscribed to messagesLogs ${api} ${origin}`)\n  }\n\n  return {\n    getLogs,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getHistory,\n    getLogsByInitTimestamp,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const logger = Vue.$logger.extendName(name);\n  const actions = getActions({ Vue, LocalStorage, errorHandler, logger }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor, logger })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    pages: [],\n    filter: '',\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    isItemDeleted: false,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor, logger }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      Object.defineProperty(messages[index], 'x-flespi-message-key', {\n        value: messagesKeyPointer++,\n        enumerable: false\n      })\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      messagesIndexing(data)\n      const messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      limiting(state, { type: 'rt', count: data.length })\n    }\n    logger.info(`setRTMessages: length: ${data.length}`)\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n    logger.info(`prependMessages: length: ${data.length}`)\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n    logger.info(`appendMessages: length: ${data.length}`)\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n    logger.info(`setHistoryMessages: length: ${data.length}, reverse:${state.reverse}`)\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n    logger.info(`clearMessages`)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n    logger.info(`limiting: ${type} - count: ${count}`)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n    logger.info(`setFilter: ${value}`)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n    logger.info(`setFrom: ${from}`)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n    logger.info(`setTo: ${to}`)\n  }\n\n  function reqStart (state, params) {\n    logger.info(`reqStart: ${JSON.stringify(params)}`)\n  }\n\n  function reqFullfiled () {\n    logger.info(`reqFullfiled`)\n  }\n\n  function reqError (state, error) {\n    logger.info(`reqError: ${JSON.stringify(error)}`)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n    logger.info(`setReverse: ${val}`)\n  }\n\n  async function clear (state) {\n    const api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n    logger.info(`clear module`)\n    logger.info(`unsubscribeLogs ${api} ${origin}`)\n  }\n\n  function setOrigin (state, origin) {\n    Vue.set(state, 'origin', origin)\n    logger.info(`setOrigin: ${origin}`)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.origin, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Date.now() / 1000,\n      lastMessageIndex: state.messages.length - 1\n    }\n    logger.info(`setOffline`)\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Date.now() / 1000\n    logger.info(`setReconnected`)\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n    logger.info(`setMissingMessages: ${data.length}`)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n    logger.info(`setCid: ${cid}`)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    limiting,\n    setFrom,\n    setTo,\n    reqStart,\n    reqFullfiled,\n    reqError,\n    setReverse,\n    clear,\n    setOrigin,\n    setCols,\n    updateCols,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n"],"names":["module","obj","key","value","Object","defineProperty","enumerable","configurable","writable","exports","require$$0","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","locale","Date","toString","match","name","width","description","addition","slice","title","getColsLS","LocalStorage","lsNamespace","colsFromStorage","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","getItem","get","setColsLS","active","cols","customColsSchema","defaultColsSchema","schemas","_default","undefined","_protocol","_unsaved","activeSchema","splitSchemas","set","Vue","errorHandler","logger","getParams","state","params","limit","count","from","to","reverse","getHeaders","headers","cid","errorsCheck","commit","data","errors","error","errObject","Error","reason","getLogsEntries","origin","deletedStatus","parts","id","pop","namespace","connector","http","platform","deleted","reduce","result","part","handler","endpoint","logs","JSON","stringify","encodeURIComponent","getLogs","rootState","token","isLoadingActive","isLoading","isItemDeleted","e","DEV","console","log","getLogsByInitTimestamp","initTimestamp","beforeMessagesParams","beforeMessages","afterMessagesParams","afterMessages","loopId","unsubscribePooling","start","now","messagesCount","messages","needRT","startRTRender","pollingGet","stop","missedMessages","splice","type","realtimeEnabled","messagesBuffer","api","replace","subscribeLogs","message","parse","rh","prefix","info","setInterval","initRenderLoop","clearInterval","unsubscribeLogs","getPrevPage","_get","getNextPage","Math","floor","getHistory","initTime","fields","date","round","timestamp","day","val","setHours","getFromTo","properties","userProperties","hasNewMessages","newMessagesCheck","getCols","initCols","colsSchema","defaultCols","map","col","enum","res","__dest","etc","customColsSchemas","colsSchemaLS","getMissedMessages","end","lastMessageIndex","offline","index","newMessagesInterseptor","$logger","extendName","actions","getActions","mutations","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","rtCount","setCols","setOffline","setReconnected","clearOfflineState","setHistoryMessages","setRTMessages","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","reqFullfiled","reqError","setReverse","clear","setOrigin","updateCols","setMissingMessages","setSelected","indexes","setItemDeletedStatus","flag","setCid","getMutations","namespaced","selected"],"mappings":"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"}