{"version":3,"file":"logs.js","sources":["../node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime-corejs2/core-js/array/from.js","../node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../node_modules/@babel/runtime-corejs2/core-js/promise.js","../node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","../node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../src/store/modules/logs/defaultCols.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/mutations.js","../src/store/modules/logs/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/array/is-array\");","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/is-iterable\");","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nfunction _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = require(\"core-js/library/fn/object/define-property\");","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\nexport default [\n  {\n    name: 'timestamp',\n    width: 100,\n    description: 'Log event time',\n    addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n  },\n  {\n    name: 'event_code',\n    title: 'event',\n    width: 400,\n    description: 'Log event code and description'\n  },\n  {\n    name: 'ident',\n    width: 150,\n    description: 'Connected device\\'s identification string'\n  },\n  {\n    name: 'msgs',\n    width: 85,\n    description: 'Number of messages received'\n  },\n  {\n    name: 'recv',\n    width: 85,\n    description: 'Number of bytes received'\n  },\n  {\n    name: 'send',\n    width: 85,\n    description: 'Number of bytes sent'\n  },\n  {\n    name: 'source',\n    width: 150,\n    description: 'Connected device\\'s address'\n  },\n  {\n    name: 'host',\n    width: 150,\n    description: 'IP address from which HTTP request was received'\n  },\n  {\n    name: 'duration',\n    width: 85,\n    description: 'Connection duration in seconds'\n  },\n  {\n    name: 'transport',\n    width: 85,\n    description: 'Connected device\\'s transport: tcp, udp, http etc'\n  }\n]\n","import _get from 'lodash/get'\nimport defaultCols from './defaultCols'\nexport default function ({ Vue, LocalStorage, errorHandler }) {\n  function getParams (state) {\n    const params = { filter: [] }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter.push(`${state.filter}`)\n    }\n    if (state.from) {\n      params.from = Math.floor(state.from / 1000)\n    }\n    if (state.to) {\n      params.to = Math.floor(state.to / 1000)\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    const headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  /* migration to new format storing cols 28.12.20 */\n  function migrateCols (cols) {\n    const schema = {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: defaultCols.map(name => ({ name, width: 150 }))\n        },\n        _protocol: {\n          name: '_protocol',\n          cols: cols.reduce((res, col) => {\n            if (!col.custom) {\n              res.push({ name: col.name, width: 150 })\n            }\n            return res\n          }, [])\n        }\n      },\n      enum: {}\n    }\n    if (cols.length) {\n      schema.activeSchema = '_unsaved'\n      schema.schemas._unsaved = {\n        name: 'Modified',\n        cols: cols.reduce((res, col) => {\n          if (col.display) {\n            res.push({ name: col.name, width: col.width })\n          }\n          return res\n        }, [])\n      }\n      schema.enum = cols.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].display\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n    return schema\n  }\n\n  function getDefaultColsSchema (cols) {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.map(col => ({ name: col.name, width: col.width }))\n        }\n      },\n      enum: cols.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      /* removing old store 12.03.20 */\n      const oldStore = LocalStorage.getItem(state.name) || {}\n      if (oldStore) {\n        colsFromStorage = oldStore\n        LocalStorage.remove(state.name)\n      }\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName) || {}\n      colsFromStorage = _get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name) || colsFromStorage\n    }\n    return colsFromStorage\n  }\n\n  function getCols ({ state, commit }, initCols) {\n    let colsSchema = getDefaultColsSchema(initCols || state.defaultCols)\n    colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n    /* LS processing */\n    const colsFromStorage = getColsFromLS(state)\n    if (colsFromStorage && colsFromStorage[state.origin]) {\n      colsSchema = Array.isArray(colsFromStorage[state.origin])\n        ? migrateCols(colsFromStorage[state.origin])\n        : colsFromStorage[state.origin]\n    }\n    const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n      ? colsFromStorage['custom-cols-schemas'] : {}\n    colsSchema.schemas = { ...colsSchema.schemas, ...customColsSchemas }\n    commit('setCols', colsSchema)\n  }\n\n  function errorsCheck (data) {\n    if (data.errors) {\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    }\n  }\n\n  function getLogsEntries (origin, deletedStatus) {\n    const parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus\n        ? Vue.connector.http.platform.deleted\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    if (id === '*') {\n      return function (params) {\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else if (deletedStatus) {\n      return function (params) {\n        return namespace.logs.get(encodeURIComponent(`origin=${origin}`), { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      return function (params) {\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        const data = resp.data\n        errorsCheck(data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getLogs ({ state, commit, rootState }, params) {\n    commit('reqStart')\n    let result = []\n    if (rootState.token && state.origin) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)({ data: params, headers: getHeaders(state) })\n        const data = resp.data\n        errorsCheck(data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function get ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const start = Math.floor(Date.now() / 1000)\n      const params = getParams(state)\n      let messagesCount = 0\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const now = Math.floor(Date.now() / 1000)\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Math.floor(Date.now() / 1000)\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = Math.floor(_get(state, 'messages[0].timestamp', state.to) - 1)\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getLogs({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = Math.floor(_get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 1)\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = Math.floor(start / 1000)\n        params.to = Math.floor(stop / 1000)\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit, rootState }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, properties })\n    state.realtimeEnabled = true\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const lastIndexOffline = state.messages.reduceRight((result, value, index) => {\n          if (result) {\n            return result\n          }\n          if (value.__connectionStatus === 'offline') {\n            result = index\n          }\n          return result\n        }, 0)\n        const params = {\n          data: {\n            from: !lastIndexOffline ? 0 : Math.floor(state.messages[lastIndexOffline - 1].timestamp) + 1,\n            to: Math.floor(state.messages[lastIndexOffline + 1].timestamp)\n          },\n          headers: getHeaders(state)\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted)(params)\n        const data = resp.data\n        errorsCheck(data)\n        commit('setMissingMessages', { data: data.result, index: lastIndexOffline })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { properties })\n    state.realtimeEnabled = false\n  }\n\n  async function newMessagesCheck ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    state.hasNewMessages = false\n    await Vue.connector.subscribeLogs(api, origin, '#', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2, properties })\n  }\n\n  return {\n    getLogs,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getHistory,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import get from 'lodash/get'\nimport set from 'lodash/set'\nexport default function ({ Vue, LocalStorage, filterHandler, newMessagesInterseptor }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      messages[index]['x-flespi-message-key'] = messagesKeyPointer++\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      if (state.filter && filterHandler) {\n        data = filterHandler(state.filter, data)\n      }\n      messagesIndexing(data)\n      const messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      limiting(state, { type: 'rt', count: data.length })\n    }\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n  }\n\n  function reqStart () {\n    if (DEV) {\n      console.log('Start Request Logs')\n    }\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n  }\n\n  async function clear (state) {\n    const api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n  }\n\n  function setOrigin (state, origin) {\n    Vue.set(state, 'origin', origin)\n  }\n\n  function getColsFromLS (state) {\n    let colsFromStorage = {}\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName)\n      colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n    } else {\n      colsFromStorage = LocalStorage.getItem(state.name) || colsFromStorage\n    }\n    return colsFromStorage\n  }\n\n  function splitSchemas (cols) {\n    const customColsSchema = {\n      ...cols.schemas,\n      _default: undefined,\n      _protocol: undefined\n    }\n    const defaultColsSchema = {\n      activeSchema: cols.activeSchema,\n      schemas: {\n        _default: cols.schemas._default,\n        _protocol: cols.schemas._protocol\n      },\n      enum: cols.enum\n    }\n    return { customColsSchema, defaultColsSchema }\n  }\n\n  function setColsToLS (state, cols) {\n    const colsFromStorage = getColsFromLS(state) || {}\n    const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n    colsFromStorage[state.origin] = defaultColsSchema\n    colsFromStorage['custom-cols-schemas'] = { ...colsFromStorage['custom-cols-schemas'], ...customColsSchema }\n    if (state.lsNamespace) {\n      const lsPath = state.lsNamespace.split('.'),\n        lsItemName = lsPath.shift(),\n        lsRouteToItem = `${lsPath.join('.')}.${state.name}`,\n        appStorage = LocalStorage.getItem(lsItemName) || {}\n      set(appStorage, lsRouteToItem, colsFromStorage)\n      LocalStorage.set(lsItemName, appStorage)\n    } else {\n      LocalStorage.set(state.name, colsFromStorage)\n    }\n  }\n\n  function setCols (state, cols) {\n    setColsToLS(state, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      state.messages.push({ __connectionStatus: 'offline', timestamp: Date.now() / 1000 })\n    }\n    state.offline = true\n  }\n\n  function setReconnected (state, needPostOfflineMessage) {\n    if (needPostOfflineMessage) {\n      state.messages.push({ __connectionStatus: 'reconnected', timestamp: Date.now() / 1000 })\n    }\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    data.forEach((val) => {\n      val['x-flespi-status'] = 'missed'\n    })\n    state.messages.splice(index + 1, 0, ...data)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    limiting,\n    setFrom,\n    setTo,\n    reqStart,\n    setReverse,\n    clear,\n    setOrigin,\n    setCols,\n    updateCols,\n    setColsToLS,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, filterHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler }),\n    mutations = getMutations({ Vue, LocalStorage, filterHandler, newMessagesInterseptor })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    pages: [],\n    filter: '',\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    isItemDeleted: false,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["require$$0","arr","_Array$isArray","i","arr2","Array","length","iter","_isIterable","Object","prototype","toString","call","_Array$from","TypeError","arrayWithoutHoles","iterableToArray","nonIterableSpread","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","_Promise","then","fn","self","this","args","arguments","apply","err","undefined","obj","_Object$defineProperty","enumerable","configurable","writable","locale","Date","match","name","width","description","addition","slice","title","Vue","LocalStorage","errorHandler","getParams","state","params","filter","limit","count","push","from","Math","floor","to","reverse","join","getHeaders","headers","cid","errorsCheck","data","errors","forEach","errObject","Error","reason","getLogsEntries","origin","deletedStatus","parts","split","id","pop","namespace","connector","http","platform","deleted","reduce","result","part","logs","get","JSON","stringify","encodeURIComponent","commit","rootState","token","set","fields","isItemDeleted","resp","date","now","round","timestamp","setHours","day","newMessagesCheck","DEV","console","log","getLogs","isLoadingActive","isLoading","start","messagesCount","messages","needRT","loopId","startRTRender","pollingGet","stop","missedMessages","splice","unsubscribePooling","type","realtimeEnabled","_get","messagesBuffer","api","replace","properties","userProperties","subscribeLogs","message","parse","rh","setInterval","lastIndexOffline","reduceRight","index","__connectionStatus","clearInterval","unsubscribeLogs","hasNewMessages","getPrevPage","getNextPage","getHistory","initTime","getCols","initCols","cols","colsSchema","activeSchema","schemas","_default","defaultCols","map","col","enum","res","__dest","etc","schema","colsFromStorage","lsNamespace","oldStore","getItem","remove","lsPath","lsItemName","shift","lsRouteToItem","appStorage","getColsFromLS","isArray","_protocol","custom","_unsaved","display","customColsSchemas","getMissedMessages","filterHandler","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","rtCount","setColsToLS","customColsSchema","defaultColsSchema","setCols","setOffline","needPostOfflineMessage","offline","setReconnected","setHistoryMessages","setRTMessages","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","setReverse","val","clear","setOrigin","updateCols","setMissingMessages","setSelected","indexes","setItemDeletedStatus","flag","setCid","namespaced","selected","actions","getActions","mutations","getMutations"],"mappings":"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"}