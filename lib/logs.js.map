{"version":3,"file":"logs.js","sources":["../src/store/modules/logs/defaultCols.js","../src/store/modules/ls.js","../src/store/modules/logs/actions.js","../src/store/modules/logs/mutations.js","../src/infrastructure/logger.js","../src/store/modules/logs/index.js"],"sourcesContent":["const locale = new Date().toString().match(/([-+][0-9]+)\\s/)[1]\nexport default [\n  {\n    name: 'timestamp',\n    width: 100,\n    description: 'Log event time',\n    addition: `${locale.slice(0, 3)}:${locale.slice(3)}`\n  },\n  {\n    name: 'event_code',\n    title: 'event',\n    width: 400,\n    description: 'Log event code and description'\n  },\n  {\n    name: 'ident',\n    width: 150,\n    description: 'Connected device\\'s identification string'\n  },\n  {\n    name: 'msgs',\n    width: 85,\n    description: 'Number of messages received'\n  },\n  {\n    name: 'recv',\n    width: 85,\n    description: 'Number of bytes received'\n  },\n  {\n    name: 'send',\n    width: 85,\n    description: 'Number of bytes sent'\n  },\n  {\n    name: 'source',\n    width: 150,\n    description: 'Connected device\\'s address'\n  },\n  {\n    name: 'host',\n    width: 150,\n    description: 'IP address from which HTTP request was received'\n  },\n  {\n    name: 'duration',\n    width: 85,\n    description: 'Connection duration in seconds'\n  },\n  {\n    name: 'transport',\n    width: 85,\n    description: 'Connected device\\'s transport: tcp, udp, http etc'\n  }\n]\n","import get from 'lodash/get'\nimport set from 'lodash/set'\n\nfunction splitSchemas (cols) {\n  const customColsSchema = {\n    ...cols.schemas,\n    _default: undefined,\n    _protocol: undefined,\n    _unsaved: undefined\n  }\n  const defaultColsSchema = {\n    activeSchema: cols.activeSchema,\n    schemas: {\n      _default: cols.schemas._default,\n      _protocol: cols.schemas._protocol,\n      _unsaved: cols.schemas._unsaved\n    }\n  }\n  return { customColsSchema, defaultColsSchema }\n}\nfunction getColsLS (LocalStorage, lsNamespace, name) {\n  let colsFromStorage = {}\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName)\n    colsFromStorage = get(appStorage, lsRouteToItem, colsFromStorage)\n  } else {\n    colsFromStorage = LocalStorage.getItem(name) || colsFromStorage\n  }\n  return colsFromStorage\n}\n\nfunction setColsLS (LocalStorage, lsNamespace, name, active, cols) {\n  const colsFromStorage = getColsLS(LocalStorage, lsNamespace, name) || {}\n  const { customColsSchema, defaultColsSchema } = splitSchemas(cols)\n  colsFromStorage[active] = defaultColsSchema\n  colsFromStorage['custom-cols-schemas'] = { ...customColsSchema }\n  if (lsNamespace) {\n    const lsPath = lsNamespace.split('.'),\n      lsItemName = lsPath.shift(),\n      lsRouteToItem = `${lsPath.join('.')}.${name}`,\n      appStorage = LocalStorage.getItem(lsItemName) || {}\n    set(appStorage, lsRouteToItem, colsFromStorage)\n    LocalStorage.set(lsItemName, appStorage)\n  } else {\n    LocalStorage.set(name, colsFromStorage)\n  }\n}\n\nexport {\n  getColsLS,\n  setColsLS\n}\n","import _get from 'lodash/get'\nimport defaultCols from './defaultCols'\nimport { getColsLS, setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, errorHandler, logger }) {\n  function getParams (state) {\n    const params = { filter: [] }\n    if (state.limit) {\n      params.count = state.limit\n    }\n    if (state.filter) {\n      params.filter.push(`${state.filter}`)\n    }\n    if (state.from) {\n      params.from = state.from / 1000\n    }\n    if (state.to) {\n      params.to = state.to / 1000\n    }\n    if (state.reverse) {\n      params.reverse = state.reverse\n    }\n    if (params.filter.length) {\n      params.filter = params.filter.join(',')\n    } else {\n      delete params.filter\n    }\n    return params\n  }\n\n  function getHeaders (state) {\n    const headers = {}\n    if (state.cid) {\n      headers['x-flespi-cid'] = state.cid\n    }\n    return headers\n  }\n\n  function getDefaultColsSchema (cols) {\n    return {\n      activeSchema: '_default',\n      schemas: {\n        _default: {\n          name: '_default',\n          cols: cols.map(col => ({ name: col.name, width: col.width }))\n        }\n      },\n      enum: cols.reduce((res, col) => {\n        res[col.name] = { ...col }\n        delete res[col.name].width\n        return res\n      }, {})\n    }\n  }\n\n  function getCols ({ state, commit }, initCols) {\n    const colsSchema = getDefaultColsSchema(initCols || defaultCols)\n    colsSchema.schemas._default.cols.push({ name: 'etc', width: 150, __dest: 'etc' })\n    colsSchema.enum.etc = { name: 'etc', __dest: 'etc' }\n    /* LS processing */\n    const colsFromStorage = getColsLS(LocalStorage, state.lsNamespace, state.name)\n    const customColsSchemas = (colsFromStorage && colsFromStorage['custom-cols-schemas'])\n      ? colsFromStorage['custom-cols-schemas'] : {}\n    if (colsFromStorage && colsFromStorage[state.origin]) {\n      const colsSchemaLS = colsFromStorage[state.origin]\n      colsSchema.activeSchema = colsSchemaLS.activeSchema\n      colsSchema.schemas = { ...colsSchema.schemas, ...colsSchemaLS.schemas, ...customColsSchemas }\n    }\n    commit('setCols', colsSchema)\n  }\n\n  function errorsCheck (commit, data) {\n    if (data.errors) {\n      commit('reqError', data.errors)\n      data.errors.forEach((error) => {\n        const errObject = new Error(error.reason)\n        errorHandler && errorHandler(errObject)\n      })\n    } else {\n      commit('reqFullfiled')\n    }\n  }\n\n  function getLogsEntries (origin, deletedStatus, commit) {\n    const parts = origin.split('/'),\n      id = parts.pop(),\n      namespace = deletedStatus\n        ? Vue.connector.http.platform.deleted\n        : parts.reduce((result, part) => {\n          return result[part]\n        }, Vue.connector.http)\n    let handler\n    if (id === '*') {\n      handler = function (params) {\n        commit('reqStart', { endpoint: 'getLogs', params })\n        return namespace.logs.get({ data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else if (deletedStatus) {\n      handler = function (params) {\n        commit('reqStart', { endpoint: 'getLogs', params })\n        return namespace.logs.get(encodeURIComponent(`origin=${origin}`), { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    } else {\n      handler = function (params) {\n        commit('reqStart', { endpoint: 'getLogs', params })\n        return namespace.logs.get(id, { data: JSON.stringify(params.data) }, { headers: params.headers })\n      }\n    }\n    return handler\n  }\n\n  function getFromTo (val) {\n    const now = val || Date.now(),\n      from = new Date(now).setHours(0, 0, 0, 0),\n      to = from + 86399999.999\n    return { from, to }\n  }\n\n  async function initTime ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const params = {\n          data: {\n            reverse: true,\n            count: 1,\n            fields: 'timestamp'\n          },\n          headers: getHeaders(state)\n        }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted, commit)(params, commit)\n        const data = resp.data\n        errorsCheck(commit, data)\n        let date = Date.now()\n        if (data.result.length) {\n          date = Math.round(data.result[0].timestamp * 1000)\n        }\n        const day = getFromTo(date)\n        commit('setFrom', day.from)\n        commit('setTo', day.to)\n        if (day.to < Date.now()) {\n          await newMessagesCheck({ state })\n        }\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  async function getLogs ({ state, commit, rootState }, params) {\n    let result = []\n    if (rootState.token && state.origin) {\n      const isLoadingActive = state.isLoading\n      try {\n        !isLoadingActive && Vue.set(state, 'isLoading', true)\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted, commit)({ data: params, headers: getHeaders(state) })\n        const data = resp.data\n        errorsCheck(commit, data)\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n        result = data.result || []\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        !isLoadingActive && Vue.set(state, 'isLoading', false)\n      }\n    }\n    return result\n  }\n\n  async function getLogsByInitTimestamp ({ state, commit, rootState }, initTimestamp) {\n    const params = getParams(state)\n    const beforeMessagesParams = {\n      ...params,\n      from: state.from / 1000,\n      to: initTimestamp,\n      reverse: true,\n      count: state.limit / 2\n    }\n    const beforeMessages = await getLogs({ state, commit, rootState }, beforeMessagesParams)\n    const afterMessagesParams = {\n      from: initTimestamp + 0.000001,\n      to: state.to / 1000,\n      count: state.limit - beforeMessages.length\n    }\n    const afterMessages = await getLogs({ state, commit, rootState }, afterMessagesParams)\n    const messages = [...beforeMessages.reverse(), ...afterMessages]\n    return messages\n  }\n\n  async function get ({ state, commit, rootState }, initTimestamp) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      if (loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      const start = Date.now() / 1000\n      let messagesCount = 0\n      let messages = []\n      const params = getParams(state)\n      if (initTimestamp) {\n        messages = await getLogsByInitTimestamp({ state, commit, rootState }, initTimestamp)\n      } else {\n        messages = await getLogs({ state, commit, rootState }, params)\n      }\n      messagesCount += messages.length\n      const now = Date.now() / 1000\n      const needRT = (params.to >= now && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now() / 1000\n        const params = getParams(state)\n        params.from = start\n        params.to = stop\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(0, 0, ...missedMessages)\n      } else if ((params.to < now || (state.limit && messages.length >= state.limit)) && loopId) {\n        await unsubscribePooling({ state, commit, rootState })\n      }\n      commit('limiting', { type: 'init', count: messagesCount })\n      commit('setHistoryMessages', messages)\n      if (needRT || state.realtimeEnabled) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n    }\n  }\n\n  async function getHistory ({ state, commit, rootState }, count) {\n    const limit = state.limit\n    commit('clearMessages')\n    commit('setReverse', true)\n    commit('setLimit', count)\n    await get({ state, commit, rootState })\n    commit('setReverse', false)\n    commit('setLimit', limit)\n  }\n\n  async function getPrevPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      Vue.set(state, 'isLoading', true)\n      const to = _get(state, 'messages[0].timestamp', state.to) - 0.000001\n      const params = getParams(state)\n      params.to = to\n      params.reverse = true\n      if (loopId && state.messages.length > state.limit * 2) {\n        await unsubscribePooling({ state, commit, rootState })\n        commit('limiting', { type: 'rt_deinit' })\n      }\n      const messages = await getLogs({ state, commit, rootState }, params)\n      if (!messages.length) {\n        Vue.set(state, 'isLoading', false)\n        return 0\n      }\n      commit('limiting', { type: 'prev', count: messages.length })\n      commit('prependMessages', messages)\n      Vue.set(state, 'isLoading', false)\n      return messages.length\n    }\n  }\n\n  async function getNextPage ({ state, commit, rootState }) {\n    if (!state.isLoading) {\n      if (state.realtimeEnabled) { return }\n      Vue.set(state, 'isLoading', true)\n      const start = Date.now()\n      const from = _get(state, `messages[${state.messages.length - 1}].timestamp`, state.from) + 0.000001\n      const params = getParams(state)\n      let messagesCount = 0\n      params.from = from\n      const messages = await getLogs({ state, commit, rootState }, params)\n      messagesCount += messages.length\n      const needRT = (params.to > Math.floor(Date.now() / 1000) && (state.limit && messages.length < state.limit) && !loopId)\n      let startRTRender = () => {}\n      if (needRT) {\n        startRTRender = await pollingGet({ state, commit, rootState })\n        const stop = Date.now()\n        const params = getParams(state)\n        params.from = start / 1000\n        params.to = stop / 1000\n        const missedMessages = await getLogs({ state, commit, rootState }, params)\n        messagesCount += missedMessages.length\n        messages.splice(messages.length, 0, ...missedMessages)\n      }\n      commit('limiting', { type: 'next', count: messagesCount })\n      commit('appendMessages', messages)\n      if (needRT) {\n        startRTRender()\n        commit('limiting', { type: 'rt_init' })\n      }\n      Vue.set(state, 'isLoading', false)\n      return messagesCount\n    }\n  }\n\n  let messagesBuffer = [],\n    loopId = 0\n  function initRenderLoop (state, commit) {\n    return setInterval(() => {\n      if (messagesBuffer.length) {\n        commit('setRTMessages', [...messagesBuffer])\n        messagesBuffer = []\n      }\n    }, 500)\n  }\n  async function pollingGet ({ state, commit, rootState }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}${state.cid ? `&cid=${state.cid}` : ''}` : undefined\n    await Vue.connector.subscribeLogs(api, origin, '#', (message) => {\n      messagesBuffer.push(JSON.parse(message))\n    }, { rh: 2, prefix: filter })\n    state.realtimeEnabled = true\n    logger.info(`subscribed to Logs ${api} ${origin} ${state.active} ${filter || ''}`)\n    return () => {\n      loopId = initRenderLoop(state, commit)\n    }\n  }\n\n  /* getting missed messages after offline */\n  async function getMissedMessages ({ state, commit, rootState }) {\n    if (rootState.token && state.origin) {\n      try {\n        Vue.set(state, 'isLoading', true)\n        const { start, end, lastMessageIndex } = state.offline\n        const params = {\n          data: {\n            from: start,\n            to: end\n          },\n          headers: getHeaders(state)\n        }\n        if (state.filter) { params.data.filter = state.filter }\n        const resp = await getLogsEntries(state.origin, state.isItemDeleted, commit)(params)\n        const data = resp.data\n        errorsCheck(commit, data)\n        commit('setMissingMessages', { data: data.result, index: lastMessageIndex })\n        Vue.set(state, 'isLoading', false)\n      } catch (e) {\n        errorHandler && errorHandler(e)\n        if (DEV) { console.log(e) }\n        Vue.set(state, 'isLoading', false)\n      }\n    }\n  }\n\n  /* unsubscribe from current active topic */\n  async function unsubscribePooling ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    if (loopId) {\n      clearInterval(loopId)\n      messagesBuffer = []\n      loopId = 0\n    }\n    const filter = state.filter ? `$filter/payload=${encodeURIComponent(state.filter)}${state.cid ? `&cid=${state.cid}` : ''}` : undefined\n    await Vue.connector.unsubscribeLogs(api, origin, '#', undefined, { prefix: filter })\n    state.realtimeEnabled = false\n    logger.info(`unsubscribed to Logs ${api} ${origin} ${state.active} ${filter || ''}`)\n  }\n\n  async function newMessagesCheck ({ state }) {\n    const api = state.origin.split('/')[0].replace(/\\*/g, '+'),\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    let properties = {}\n    if (state.cid) {\n      properties = { userProperties: { cid: state.cid } }\n    }\n    state.hasNewMessages = false\n    await Vue.connector.subscribeLogs(api, origin, '#', () => {\n      state.hasNewMessages = true\n      unsubscribePooling({ state })\n    }, { rh: 2, properties })\n    logger.info(`newMessagesCheck subscribed to messagesLogs ${api} ${origin}`)\n  }\n\n  return {\n    getLogs,\n    get,\n    getPrevPage,\n    getNextPage,\n    pollingGet,\n    getHistory,\n    getLogsByInitTimestamp,\n    initTime,\n    getCols,\n    unsubscribePooling,\n    getMissedMessages\n  }\n}\n","import { setColsLS } from '../ls'\nexport default function ({ Vue, LocalStorage, newMessagesInterseptor, logger }) {\n  let messagesKeyPointer = 0\n  function messagesIndexing (messages) {\n    if (!messages.length) { return }\n    messages.forEach((message, index) => {\n      Object.defineProperty(messages[index], 'x-flespi-message-key', {\n        value: messagesKeyPointer++,\n        enumerable: false\n      })\n    })\n  }\n\n  function setRTMessages (state, data) {\n    if (data && data.length) {\n      messagesIndexing(data)\n      const messages = state.messages\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n      limiting(state, { type: 'rt', count: data.length })\n    }\n    logger.info(`setRTMessages: length: ${data.length}`)\n  }\n\n  function prependMessages (state, data) {\n    if (data && data.length) {\n      data.reverse()\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(0, 0, ...data)\n    }\n    logger.info(`prependMessages: length: ${data.length}`)\n  }\n\n  function appendMessages (state, data) {\n    if (data && data.length) {\n      const messages = state.messages\n      messagesIndexing(data)\n      newMessagesInterseptor && newMessagesInterseptor(data)\n      messages.splice(messages.length, 0, ...data)\n    }\n    logger.info(`appendMessages: length: ${data.length}`)\n  }\n\n  function setHistoryMessages (state, data) {\n    if (state.reverse) {\n      data.reverse()\n    }\n    messagesIndexing(data)\n    newMessagesInterseptor && newMessagesInterseptor(data)\n    state.messages = data\n    logger.info(`setHistoryMessages: length: ${data.length}, reverse:${state.reverse}`)\n  }\n\n  function clearMessages (state) {\n    state.messages.splice(0, state.messages.length)\n    newMessagesInterseptor && newMessagesInterseptor([])\n    clearSelected(state)\n    logger.info(`clearMessages`)\n  }\n\n  function setLimit (state, count) {\n    Vue.set(state, 'limit', count)\n  }\n\n  function limiting (state, { type, count }) {\n    if (!state.limit) { return false }\n    const messages = state.messages\n    const pages = state.pages\n    switch (type) {\n      case 'init': {\n        state.pages = count ? [count] : []\n        break\n      }\n      case 'prev': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[2]\n          state.pages = [count, ...pages.slice(0, -1)]\n          messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        } else {\n          state.pages = [count, ...pages]\n        }\n        break\n      }\n      case 'next': {\n        if (!count) { break }\n        const pagesCount = pages.length\n        if (pagesCount === 3) {\n          const removeMessagesCount = pages[0]\n          state.pages = [...pages.slice(1, 3), count]\n          messages.splice(0, removeMessagesCount)\n        } else if (pagesCount < 3) {\n          pages.push(count)\n        }\n        break\n      }\n      case 'rt_init': {\n        pages.push(0)\n        break\n      }\n      case 'rt_deinit': {\n        const removeMessagesCount = pages.pop()\n        messages.splice(messages.length - removeMessagesCount, removeMessagesCount)\n        break\n      }\n      case 'rt': {\n        const pagesCount = pages.length\n        const rtCount = pages[pagesCount - 1] || 0\n        if (rtCount + count > state.limit) {\n          if (pagesCount > 3) {\n            const removeMessagesCount = pages[0]\n            state.pages = [...pages.slice(1, -1), rtCount + count, 0]\n            messages.splice(0, removeMessagesCount)\n          } else {\n            state.pages = [...pages.slice(0, -1), rtCount + count, 0]\n          }\n        } else {\n          state.pages[pagesCount - 1] = rtCount + count\n        }\n      }\n    }\n    logger.info(`limiting: ${type} - count: ${count}`)\n  }\n\n  function setFilter (state, value) {\n    if (state.filter !== value) {\n      Vue.set(state, 'filter', value)\n    }\n    logger.info(`setFilter: ${value}`)\n  }\n\n  function setFrom (state, from) {\n    Vue.set(state, 'from', from)\n    logger.info(`setFrom: ${from}`)\n  }\n\n  function setTo (state, to) {\n    Vue.set(state, 'to', to)\n    logger.info(`setTo: ${to}`)\n  }\n\n  function reqStart (state, params) {\n    logger.info(`reqStart: ${JSON.stringify(params)}`)\n  }\n\n  function reqFullfiled () {\n    logger.info(`reqFullfiled`)\n  }\n\n  function reqError (state, error) {\n    logger.info(`reqError: ${JSON.stringify(error)}`)\n  }\n\n  function setReverse (state, val) {\n    Vue.set(state, 'reverse', val)\n    logger.info(`setReverse: ${val}`)\n  }\n\n  async function clear (state) {\n    const api = state.origin.split('/')[0],\n      origin = state.origin.replace(`${api}/`, '').replace(/\\*/g, '+')\n    clearMessages(state)\n    state.filter = ''\n    state.from = 0\n    state.to = 0\n    state.limit = 1000\n    state.reverse = false\n    await Vue.connector.unsubscribeLogs(api, origin, '#')\n    logger.info(`clear module`)\n    logger.info(`unsubscribeLogs ${api} ${origin}`)\n  }\n\n  function setOrigin (state, origin) {\n    Vue.set(state, 'origin', origin)\n    logger.info(`setOrigin: ${origin}`)\n  }\n\n  function setCols (state, cols) {\n    setColsLS(LocalStorage, state.lsNamespace, state.name, state.origin, cols)\n    Vue.set(state, 'cols', cols)\n  }\n\n  const updateCols = setCols\n\n  function setOffline (state) {\n    state.offline = {\n      start: Date.now() / 1000,\n      lastMessageIndex: state.messages.length - 1\n    }\n    logger.info(`setOffline`)\n  }\n\n  function setReconnected (state) {\n    state.offline.end = Date.now() / 1000\n    logger.info(`setReconnected`)\n  }\n\n  function clearOfflineState (state) {\n    state.offline = false\n  }\n\n  function setMissingMessages (state, { data, index }) {\n    state.messages.splice(index + 1, 0, ...data)\n    logger.info(`setMissingMessages: ${data.length}`)\n  }\n\n  function setSelected (state, indexes) {\n    Vue.set(state, 'selected', indexes)\n  }\n\n  function clearSelected (state) {\n    Vue.set(state, 'selected', [])\n  }\n\n  function setItemDeletedStatus (state, flag) {\n    Vue.set(state, 'isItemDeleted', flag)\n  }\n\n  function setCid (state, cid) {\n    Vue.set(state, 'cid', cid)\n    logger.info(`setCid: ${cid}`)\n  }\n\n  return {\n    setOffline,\n    setReconnected,\n    clearOfflineState,\n    setHistoryMessages,\n    setRTMessages,\n    prependMessages,\n    appendMessages,\n    clearMessages,\n    setLimit,\n    setFilter,\n    limiting,\n    setFrom,\n    setTo,\n    reqStart,\n    reqFullfiled,\n    reqError,\n    setReverse,\n    clear,\n    setOrigin,\n    setCols,\n    updateCols,\n    setMissingMessages,\n    setSelected,\n    clearSelected,\n    setItemDeletedStatus,\n    setCid\n  }\n}\n","export class Logger {\n  constructor (name = 'ModuleLogger') {\n    this.name = `[${name}]`\n  }\n\n  extendName (suffix) {\n    return new Logger(`${this.name}[${suffix}]`)\n  }\n\n  info () {\n    console.info(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n\n  error () {\n    console.error(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n\n  warn () {\n    console.warn(...Array.from(arguments).map(msg => `${this.name} ${msg}`))\n  }\n}\n","import getActions from './actions'\nimport getMutations from './mutations'\nimport get from 'lodash/get'\nimport Vue from 'vue'\nimport { Logger } from '../../../infrastructure/logger'\n\nexport default function ({ Vue, LocalStorage, name, errorHandler, newMessagesInterseptor }) {\n  const lsNamespace = get(name, 'lsNamespace', undefined)\n  name = get(name, 'name', name)\n  const logger = Vue.$logger ? Vue.$logger.extendName(name) : new Logger(name)\n  const actions = getActions({ Vue, LocalStorage, errorHandler, logger }),\n    mutations = getMutations({ Vue, LocalStorage, newMessagesInterseptor, logger })\n\n  const state = {\n    name,\n    lsNamespace,\n    isLoading: false,\n    origin: '',\n    messages: [],\n    pages: [],\n    filter: '',\n    realtimeEnabled: false,\n    from: 0,\n    to: 0,\n    cid: null,\n    limit: 1000,\n    reverse: false,\n    cols: undefined,\n    offline: false,\n    selected: [],\n    isItemDeleted: false,\n    hasNewMessages: null\n  }\n\n  return {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n  }\n}\n"],"names":["locale","Date","toString","match","defaultCols","name","width","description","addition","slice","title","getColsLS","LocalStorage","lsNamespace","colsFromStorage","lsPath","split","lsItemName","shift","lsRouteToItem","join","appStorage","getItem","get","getActions","Vue","errorHandler","logger","getParams","state","params","filter","limit","count","push","from","to","reverse","length","getHeaders","headers","cid","errorsCheck","commit","data","errors","forEach","error","errObject","Error","reason","getLogsEntries","origin","deletedStatus","parts","id","pop","namespace","connector","http","platform","deleted","reduce","result","part","handler","endpoint","logs","JSON","stringify","encodeURIComponent","async","getLogs","rootState","token","isLoadingActive","isLoading","set","isItemDeleted","e","DEV","console","log","getLogsByInitTimestamp","initTimestamp","beforeMessagesParams","beforeMessages","afterMessagesParams","afterMessages","loopId","unsubscribePooling","start","now","messagesCount","messages","needRT","startRTRender","pollingGet","stop","missedMessages","splice","type","realtimeEnabled","messagesBuffer","api","replace","undefined","subscribeLogs","message","parse","rh","prefix","info","active","setInterval","initRenderLoop","clearInterval","unsubscribeLogs","getPrevPage","_get","getNextPage","Math","floor","getHistory","initTime","fields","date","round","timestamp","day","val","setHours","getFromTo","properties","userProperties","hasNewMessages","newMessagesCheck","getCols","initCols","colsSchema","activeSchema","schemas","_default","cols","map","col","enum","res","__dest","etc","customColsSchemas","colsSchemaLS","getMissedMessages","end","lastMessageIndex","offline","index","getMutations","newMessagesInterseptor","messagesKeyPointer","messagesIndexing","Object","defineProperty","value","enumerable","clearMessages","clearSelected","limiting","pages","removeMessagesCount","pagesCount","rtCount","setCols","customColsSchema","defaultColsSchema","_protocol","_unsaved","splitSchemas","setColsLS","setOffline","setReconnected","clearOfflineState","setHistoryMessages","setRTMessages","prependMessages","appendMessages","setLimit","setFilter","setFrom","setTo","reqStart","reqFullfiled","reqError","setReverse","clear","setOrigin","updateCols","setMissingMessages","setSelected","indexes","setItemDeletedStatus","flag","setCid","Logger","constructor","this","extendName","suffix","Array","arguments","msg","warn","$logger","namespaced","selected","actions","mutations"],"mappings":"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"}